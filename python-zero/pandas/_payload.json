[{"data":1,"prerenderedAt":13501},["ShallowReactive",2],{"content-query-HVKLl5Xzt9":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"navigation":10,"body":13,"_type":13495,"_id":13496,"_source":13497,"_file":13498,"_stem":13499,"_extension":13500},"/python-zero/pandas","python-zero",false,"","4 Getting Started with pandas","Using pandas to manipulate data",{"index":11,"icon":12},9,"i-ph-info-duotone",{"type":14,"children":15,"toc":13467},"root",[16,25,31,36,41,46,71,77,97,118,133,140,160,278,298,439,444,604,612,624,758,763,812,824,858,870,1034,1038,1084,1119,1150,1176,1348,1352,1398,1409,1481,1485,1513,1532,1538,1556,1567,1659,1678,1781,1785,1900,1910,1917,1929,2168,2172,2211,2238,2250,2501,2519,2524,2766,2784,2789,3069,3081,3090,3311,3319,3416,3432,3519,3527,3611,3626,3743,3767,4028,4047,4053,4058,4069,4075,4081,4094,4366,4373,4396,4489,4507,4571,4696,4712,4735,4751,4777,4785,4874,4882,4930,4936,4941,4946,4994,5010,5102,5110,5123,5201,5214,5507,5511,5534,5546,5658,5663,5992,5996,6019,6032,6048,6115,6140,6145,6151,6156,6162,6167,6174,6204,6417,6421,6460,6594,6630,6657,6661,6699,6722,6830,6835,6946,6957,7194,7198,7382,7397,7637,7642,7862,7880,7886,7891,7898,7914,8185,8208,8319,8325,8338,8633,8637,8676,8696,8982,8988,8993,9322,9369,9375,9380,9389,9402,9542,9547,9750,9756,9762,9767,9984,9990,10004,10193,10207,10270,10284,10347,10361,10437,10451,10514,10528,10583,10589,10604,10704,10708,10772,11204,11212,11307,11311,11359,11560,11566,11580,11849,11863,11920,11928,11942,11946,11991,12103,12109,12123,12374,12378,12465,12479,12681,12685,12708,12714,12728,12998,13002,13040,13054,13110,13116,13121,13130,13135,13263,13268,13461],{"type":17,"tag":18,"props":19,"children":21},"element","h2",{"id":20},"_1-introduction-to-pandas",[22],{"type":23,"value":24},"text","1. Introduction to Pandas",{"type":17,"tag":26,"props":27,"children":28},"p",{},[29],{"type":23,"value":30},"Pandas is an open-source data analysis and data processing library based on the Python programming language.",{"type":17,"tag":26,"props":32,"children":33},{},[34],{"type":23,"value":35},"Pandas provides easy-to-use data structures and data analysis tools, especially suitable for handling structured data, such as tabular data (similar to Excel spreadsheets).",{"type":17,"tag":26,"props":37,"children":38},{},[39],{"type":23,"value":40},"Pandas is one of the commonly used tools in the field of data science and analysis, enabling users to easily import data from various data sources and perform efficient operations and analysis on the data.",{"type":17,"tag":26,"props":42,"children":43},{},[44],{"type":23,"value":45},"Pandas offers a wealth of features, including:",{"type":17,"tag":47,"props":48,"children":49},"ul",{},[50,56,61,66],{"type":17,"tag":51,"props":52,"children":53},"li",{},[54],{"type":23,"value":55},"Data cleaning: Handling missing data, duplicate data, etc.",{"type":17,"tag":51,"props":57,"children":58},{},[59],{"type":23,"value":60},"Data transformation: Changing the shape, structure, or format of data.",{"type":17,"tag":51,"props":62,"children":63},{},[64],{"type":23,"value":65},"Data analysis: Performing statistical analysis, aggregation, grouping, etc.",{"type":17,"tag":51,"props":67,"children":68},{},[69],{"type":23,"value":70},"Data visualization: Integrating with libraries like Matplotlib and Seaborn for data visualization.",{"type":17,"tag":18,"props":72,"children":74},{"id":73},"_2-data-structures-in-pandas",[75],{"type":23,"value":76},"2. Data Structures in Pandas",{"type":17,"tag":26,"props":78,"children":79},{},[80,82,88,90,95],{"type":23,"value":81},"Pandas mainly introduces two new data structures: ",{"type":17,"tag":83,"props":84,"children":85},"strong",{},[86],{"type":23,"value":87},"DataFrame",{"type":23,"value":89}," and ",{"type":17,"tag":83,"props":91,"children":92},{},[93],{"type":23,"value":94},"Series",{"type":23,"value":96},".",{"type":17,"tag":47,"props":98,"children":99},{},[100,109],{"type":17,"tag":51,"props":101,"children":102},{},[103,107],{"type":17,"tag":83,"props":104,"children":105},{},[106],{"type":23,"value":94},{"type":23,"value":108},": Similar to a one-dimensional array or list, it consists of a set of data and associated data labels (indexes). A Series can be considered as a column in a DataFrame or as a standalone one-dimensional data structure.",{"type":17,"tag":51,"props":110,"children":111},{},[112,116],{"type":17,"tag":83,"props":113,"children":114},{},[115],{"type":23,"value":87},{"type":23,"value":117},": Similar to a two-dimensional table, it is the most important data structure in Pandas. A DataFrame can be seen as a table composed of multiple Series arranged by columns, with both row and column indexes, making it convenient for row and column selection, filtering, merging, and other operations.",{"type":17,"tag":119,"props":120,"children":121},"blockquote",{},[122],{"type":17,"tag":26,"props":123,"children":124},{},[125,131],{"type":17,"tag":126,"props":127,"children":128},"span",{},[129],{"type":23,"value":130},"!Note",{"type":23,"value":132},"\nA DataFrame can be considered as a data structure composed of multiple Series.",{"type":17,"tag":134,"props":135,"children":137},"h3",{"id":136},"_1-pandas-series",[138],{"type":23,"value":139},"1. Pandas Series",{"type":17,"tag":26,"props":141,"children":142},{},[143,145,151,153,158],{"type":23,"value":144},"A Pandas ",{"type":17,"tag":146,"props":147,"children":149},"code",{"className":148},[],[150],{"type":23,"value":94},{"type":23,"value":152}," is a flexible, one-dimensional, indexed data structure that can store various types of data (such as integers, floats, strings, timestamps, etc.). Each data item has an associated label (index), similar to key-value pairs in a dictionary. The main features of a ",{"type":17,"tag":146,"props":154,"children":156},{"className":155},[],[157],{"type":23,"value":94},{"type":23,"value":159}," include:",{"type":17,"tag":47,"props":161,"children":162},{},[163,180,190,206,223,247],{"type":17,"tag":51,"props":164,"children":165},{},[166,171,173,178],{"type":17,"tag":83,"props":167,"children":168},{},[169],{"type":23,"value":170},"One-dimensional array structure",{"type":23,"value":172},": A ",{"type":17,"tag":146,"props":174,"children":176},{"className":175},[],[177],{"type":23,"value":94},{"type":23,"value":179}," is a one-dimensional data structure, similar to a NumPy array but more flexible.",{"type":17,"tag":51,"props":181,"children":182},{},[183,188],{"type":17,"tag":83,"props":184,"children":185},{},[186],{"type":23,"value":187},"Indexing functionality",{"type":23,"value":189},": Each data item has a unique index, which can be default integer values (like 0, 1, 2...) or custom (like characters, dates, etc.). Indexing allows for quick access and slicing.",{"type":17,"tag":51,"props":191,"children":192},{},[193,198,199,204],{"type":17,"tag":83,"props":194,"children":195},{},[196],{"type":23,"value":197},"Flexible data types",{"type":23,"value":172},{"type":17,"tag":146,"props":200,"children":202},{"className":201},[],[203],{"type":23,"value":94},{"type":23,"value":205}," supports various data types, including integers, floats, booleans, strings, timestamps, etc.",{"type":17,"tag":51,"props":207,"children":208},{},[209,214,216,221],{"type":17,"tag":83,"props":210,"children":211},{},[212],{"type":23,"value":213},"Automatic alignment operations",{"type":23,"value":215},": When operating on multiple ",{"type":17,"tag":146,"props":217,"children":219},{"className":218},[],[220],{"type":23,"value":94},{"type":23,"value":222}," objects, Pandas automatically aligns data based on the index.",{"type":17,"tag":51,"props":224,"children":225},{},[226,231,232,237,239,245],{"type":17,"tag":83,"props":227,"children":228},{},[229],{"type":23,"value":230},"Handling missing values",{"type":23,"value":172},{"type":17,"tag":146,"props":233,"children":235},{"className":234},[],[236],{"type":23,"value":94},{"type":23,"value":238}," supports handling missing values (usually represented by ",{"type":17,"tag":146,"props":240,"children":242},{"className":241},[],[243],{"type":23,"value":244},"NaN",{"type":23,"value":246},") and can intelligently ignore missing values during calculations.",{"type":17,"tag":51,"props":248,"children":249},{},[250,255,257,262,264,270,271,277],{"type":17,"tag":83,"props":251,"children":252},{},[253],{"type":23,"value":254},"Immutable size",{"type":23,"value":256},": Once a ",{"type":17,"tag":146,"props":258,"children":260},{"className":259},[],[261],{"type":23,"value":94},{"type":23,"value":263}," is created, its size is fixed, but new objects can be generated to adjust the size using methods like ",{"type":17,"tag":146,"props":265,"children":267},{"className":266},[],[268],{"type":23,"value":269},"append",{"type":23,"value":89},{"type":17,"tag":146,"props":272,"children":274},{"className":273},[],[275],{"type":23,"value":276},"drop",{"type":23,"value":96},{"type":17,"tag":26,"props":279,"children":280},{},[281,283,288,290,296],{"type":23,"value":282},"We can create a ",{"type":17,"tag":146,"props":284,"children":286},{"className":285},[],[287],{"type":23,"value":94},{"type":23,"value":289}," object using the ",{"type":17,"tag":146,"props":291,"children":293},{"className":292},[],[294],{"type":23,"value":295},"pd.Series()",{"type":23,"value":297}," constructor, passing in data (such as lists, NumPy arrays, etc.) and an optional index array.",{"type":17,"tag":299,"props":300,"children":304},"pre",{"code":301,"language":302,"meta":7,"className":303,"style":7},"# Constructor and parameters\npandas.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)\n","python","language-python shiki shiki-themes github-light github-dark",[305],{"type":17,"tag":146,"props":306,"children":307},{"__ignoreMap":7},[308,319],{"type":17,"tag":126,"props":309,"children":312},{"class":310,"line":311},"line",1,[313],{"type":17,"tag":126,"props":314,"children":316},{"style":315},"--shiki-light:#6A737D;--shiki-dark:#6A737D",[317],{"type":23,"value":318},"# Constructor and parameters\n",{"type":17,"tag":126,"props":320,"children":322},{"class":310,"line":321},2,[323,329,335,341,347,352,357,361,365,369,374,378,382,386,391,395,399,403,408,412,417,421,426,430,434],{"type":17,"tag":126,"props":324,"children":326},{"style":325},"--shiki-light:#24292E;--shiki-dark:#E1E4E8",[327],{"type":23,"value":328},"pandas.Series(",{"type":17,"tag":126,"props":330,"children":332},{"style":331},"--shiki-light:#E36209;--shiki-dark:#FFAB70",[333],{"type":23,"value":334},"data",{"type":17,"tag":126,"props":336,"children":338},{"style":337},"--shiki-light:#D73A49;--shiki-dark:#F97583",[339],{"type":23,"value":340},"=",{"type":17,"tag":126,"props":342,"children":344},{"style":343},"--shiki-light:#005CC5;--shiki-dark:#79B8FF",[345],{"type":23,"value":346},"None",{"type":17,"tag":126,"props":348,"children":349},{"style":325},[350],{"type":23,"value":351},", ",{"type":17,"tag":126,"props":353,"children":354},{"style":331},[355],{"type":23,"value":356},"index",{"type":17,"tag":126,"props":358,"children":359},{"style":337},[360],{"type":23,"value":340},{"type":17,"tag":126,"props":362,"children":363},{"style":343},[364],{"type":23,"value":346},{"type":17,"tag":126,"props":366,"children":367},{"style":325},[368],{"type":23,"value":351},{"type":17,"tag":126,"props":370,"children":371},{"style":331},[372],{"type":23,"value":373},"dtype",{"type":17,"tag":126,"props":375,"children":376},{"style":337},[377],{"type":23,"value":340},{"type":17,"tag":126,"props":379,"children":380},{"style":343},[381],{"type":23,"value":346},{"type":17,"tag":126,"props":383,"children":384},{"style":325},[385],{"type":23,"value":351},{"type":17,"tag":126,"props":387,"children":388},{"style":331},[389],{"type":23,"value":390},"name",{"type":17,"tag":126,"props":392,"children":393},{"style":337},[394],{"type":23,"value":340},{"type":17,"tag":126,"props":396,"children":397},{"style":343},[398],{"type":23,"value":346},{"type":17,"tag":126,"props":400,"children":401},{"style":325},[402],{"type":23,"value":351},{"type":17,"tag":126,"props":404,"children":405},{"style":331},[406],{"type":23,"value":407},"copy",{"type":17,"tag":126,"props":409,"children":410},{"style":337},[411],{"type":23,"value":340},{"type":17,"tag":126,"props":413,"children":414},{"style":343},[415],{"type":23,"value":416},"False",{"type":17,"tag":126,"props":418,"children":419},{"style":325},[420],{"type":23,"value":351},{"type":17,"tag":126,"props":422,"children":423},{"style":331},[424],{"type":23,"value":425},"fastpath",{"type":17,"tag":126,"props":427,"children":428},{"style":337},[429],{"type":23,"value":340},{"type":17,"tag":126,"props":431,"children":432},{"style":343},[433],{"type":23,"value":416},{"type":17,"tag":126,"props":435,"children":436},{"style":325},[437],{"type":23,"value":438},")\n",{"type":17,"tag":26,"props":440,"children":441},{},[442],{"type":23,"value":443},"Parameter descriptions:",{"type":17,"tag":47,"props":445,"children":446},{},[447,474,494,529,556,584],{"type":17,"tag":51,"props":448,"children":449},{},[450,458,460,465,467,472],{"type":17,"tag":83,"props":451,"children":452},{},[453],{"type":17,"tag":146,"props":454,"children":456},{"className":455},[],[457],{"type":23,"value":334},{"type":23,"value":459},": The data part of the ",{"type":17,"tag":146,"props":461,"children":463},{"className":462},[],[464],{"type":23,"value":94},{"type":23,"value":466},", which can be a list, array, dictionary, scalar value, etc. If this parameter is not provided, an empty ",{"type":17,"tag":146,"props":468,"children":470},{"className":469},[],[471],{"type":23,"value":94},{"type":23,"value":473}," will be created.",{"type":17,"tag":51,"props":475,"children":476},{},[477,485,487,492],{"type":17,"tag":83,"props":478,"children":479},{},[480],{"type":17,"tag":146,"props":481,"children":483},{"className":482},[],[484],{"type":23,"value":356},{"type":23,"value":486},": The index part of the ",{"type":17,"tag":146,"props":488,"children":490},{"className":489},[],[491],{"type":23,"value":94},{"type":23,"value":493},", used to label each data item. It can be a list, array, or index object, etc. If not specified, a default integer index starting from 0 will be generated.",{"type":17,"tag":51,"props":495,"children":496},{},[497,505,507,512,514,520,521,527],{"type":17,"tag":83,"props":498,"children":499},{},[500],{"type":17,"tag":146,"props":501,"children":503},{"className":502},[],[504],{"type":23,"value":373},{"type":23,"value":506},": Specifies the data type of the ",{"type":17,"tag":146,"props":508,"children":510},{"className":509},[],[511],{"type":23,"value":94},{"type":23,"value":513},". Supports NumPy data types, such as ",{"type":17,"tag":146,"props":515,"children":517},{"className":516},[],[518],{"type":23,"value":519},"np.int64",{"type":23,"value":351},{"type":17,"tag":146,"props":522,"children":524},{"className":523},[],[525],{"type":23,"value":526},"np.float64",{"type":23,"value":528},", etc. If not specified, the system will automatically infer the type based on the input data.",{"type":17,"tag":51,"props":530,"children":531},{},[532,540,542,547,549,554],{"type":17,"tag":83,"props":533,"children":534},{},[535],{"type":17,"tag":146,"props":536,"children":538},{"className":537},[],[539],{"type":23,"value":390},{"type":23,"value":541},": Specifies a name for the ",{"type":17,"tag":146,"props":543,"children":545},{"className":544},[],[546],{"type":23,"value":94},{"type":23,"value":548}," object. If this parameter is provided, the generated ",{"type":17,"tag":146,"props":550,"children":552},{"className":551},[],[553],{"type":23,"value":94},{"type":23,"value":555}," will have the corresponding name.",{"type":17,"tag":51,"props":557,"children":558},{},[559,567,569,575,577,582],{"type":17,"tag":83,"props":560,"children":561},{},[562],{"type":17,"tag":146,"props":563,"children":565},{"className":564},[],[566],{"type":23,"value":407},{"type":23,"value":568},": Whether to copy the data. If ",{"type":17,"tag":146,"props":570,"children":572},{"className":571},[],[573],{"type":23,"value":574},"True",{"type":23,"value":576},", the input data will be copied. The default value is ",{"type":17,"tag":146,"props":578,"children":580},{"className":579},[],[581],{"type":23,"value":416},{"type":23,"value":583},", meaning no copy.",{"type":17,"tag":51,"props":585,"children":586},{},[587,595,597,602],{"type":17,"tag":83,"props":588,"children":589},{},[590],{"type":17,"tag":146,"props":591,"children":593},{"className":592},[],[594],{"type":23,"value":425},{"type":23,"value":596},": Whether to enable the fast path. The default is ",{"type":17,"tag":146,"props":598,"children":600},{"className":599},[],[601],{"type":23,"value":416},{"type":23,"value":603},". This parameter is generally used for internal optimization and may improve performance when enabled.",{"type":17,"tag":26,"props":605,"children":606},{},[607],{"type":17,"tag":608,"props":609,"children":611},"img",{"alt":7,"src":610},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E5%88%9B%E5%BB%BAseries%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95en.png",[],{"type":17,"tag":26,"props":613,"children":614},{},[615,617,622],{"type":23,"value":616},"Here is a basic example showing how to create a ",{"type":17,"tag":146,"props":618,"children":620},{"className":619},[],[621],{"type":23,"value":94},{"type":23,"value":623}," using a list:",{"type":17,"tag":299,"props":625,"children":627},{"code":626,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a Series\ndata = pd.Series([100, 200, 300, 400])\n\n# Output the Series\nprint(data)\n",[628],{"type":17,"tag":146,"props":629,"children":630},{"__ignoreMap":7},[631,654,663,672,727,735,744],{"type":17,"tag":126,"props":632,"children":633},{"class":310,"line":311},[634,639,644,649],{"type":17,"tag":126,"props":635,"children":636},{"style":337},[637],{"type":23,"value":638},"import",{"type":17,"tag":126,"props":640,"children":641},{"style":325},[642],{"type":23,"value":643}," pandas ",{"type":17,"tag":126,"props":645,"children":646},{"style":337},[647],{"type":23,"value":648},"as",{"type":17,"tag":126,"props":650,"children":651},{"style":325},[652],{"type":23,"value":653}," pd\n",{"type":17,"tag":126,"props":655,"children":656},{"class":310,"line":321},[657],{"type":17,"tag":126,"props":658,"children":660},{"emptyLinePlaceholder":659},true,[661],{"type":23,"value":662},"\n",{"type":17,"tag":126,"props":664,"children":666},{"class":310,"line":665},3,[667],{"type":17,"tag":126,"props":668,"children":669},{"style":315},[670],{"type":23,"value":671},"# Create a Series\n",{"type":17,"tag":126,"props":673,"children":675},{"class":310,"line":674},4,[676,681,685,690,695,699,704,708,713,717,722],{"type":17,"tag":126,"props":677,"children":678},{"style":325},[679],{"type":23,"value":680},"data ",{"type":17,"tag":126,"props":682,"children":683},{"style":337},[684],{"type":23,"value":340},{"type":17,"tag":126,"props":686,"children":687},{"style":325},[688],{"type":23,"value":689}," pd.Series([",{"type":17,"tag":126,"props":691,"children":692},{"style":343},[693],{"type":23,"value":694},"100",{"type":17,"tag":126,"props":696,"children":697},{"style":325},[698],{"type":23,"value":351},{"type":17,"tag":126,"props":700,"children":701},{"style":343},[702],{"type":23,"value":703},"200",{"type":17,"tag":126,"props":705,"children":706},{"style":325},[707],{"type":23,"value":351},{"type":17,"tag":126,"props":709,"children":710},{"style":343},[711],{"type":23,"value":712},"300",{"type":17,"tag":126,"props":714,"children":715},{"style":325},[716],{"type":23,"value":351},{"type":17,"tag":126,"props":718,"children":719},{"style":343},[720],{"type":23,"value":721},"400",{"type":17,"tag":126,"props":723,"children":724},{"style":325},[725],{"type":23,"value":726},"])\n",{"type":17,"tag":126,"props":728,"children":730},{"class":310,"line":729},5,[731],{"type":17,"tag":126,"props":732,"children":733},{"emptyLinePlaceholder":659},[734],{"type":23,"value":662},{"type":17,"tag":126,"props":736,"children":738},{"class":310,"line":737},6,[739],{"type":17,"tag":126,"props":740,"children":741},{"style":315},[742],{"type":23,"value":743},"# Output the Series\n",{"type":17,"tag":126,"props":745,"children":747},{"class":310,"line":746},7,[748,753],{"type":17,"tag":126,"props":749,"children":750},{"style":343},[751],{"type":23,"value":752},"print",{"type":17,"tag":126,"props":754,"children":755},{"style":325},[756],{"type":23,"value":757},"(data)\n",{"type":17,"tag":26,"props":759,"children":760},{},[761],{"type":23,"value":762},"Output:",{"type":17,"tag":299,"props":764,"children":768},{"code":765,"language":766,"meta":7,"className":767,"style":7},"0    100\n1    200\n2    300\n3    400\ndtype: int64\n","shell","language-shell shiki shiki-themes github-light github-dark",[769],{"type":17,"tag":146,"props":770,"children":771},{"__ignoreMap":7},[772,780,788,796,804],{"type":17,"tag":126,"props":773,"children":774},{"class":310,"line":311},[775],{"type":17,"tag":126,"props":776,"children":777},{},[778],{"type":23,"value":779},"0    100\n",{"type":17,"tag":126,"props":781,"children":782},{"class":310,"line":321},[783],{"type":17,"tag":126,"props":784,"children":785},{},[786],{"type":23,"value":787},"1    200\n",{"type":17,"tag":126,"props":789,"children":790},{"class":310,"line":665},[791],{"type":17,"tag":126,"props":792,"children":793},{},[794],{"type":23,"value":795},"2    300\n",{"type":17,"tag":126,"props":797,"children":798},{"class":310,"line":674},[799],{"type":17,"tag":126,"props":800,"children":801},{},[802],{"type":23,"value":803},"3    400\n",{"type":17,"tag":126,"props":805,"children":806},{"class":310,"line":729},[807],{"type":17,"tag":126,"props":808,"children":809},{},[810],{"type":23,"value":811},"dtype: int64\n",{"type":17,"tag":26,"props":813,"children":814},{},[815,817,822],{"type":23,"value":816},"In this example, the ",{"type":17,"tag":146,"props":818,"children":820},{"className":819},[],[821],{"type":23,"value":94},{"type":23,"value":823}," automatically uses integer indexes starting from 0. We can access specific data using the index value:",{"type":17,"tag":299,"props":825,"children":827},{"code":826,"language":302,"meta":7,"className":303,"style":7},"print(data[1])  # Output 200\n",[828],{"type":17,"tag":146,"props":829,"children":830},{"__ignoreMap":7},[831],{"type":17,"tag":126,"props":832,"children":833},{"class":310,"line":311},[834,838,843,848,853],{"type":17,"tag":126,"props":835,"children":836},{"style":343},[837],{"type":23,"value":752},{"type":17,"tag":126,"props":839,"children":840},{"style":325},[841],{"type":23,"value":842},"(data[",{"type":17,"tag":126,"props":844,"children":845},{"style":343},[846],{"type":23,"value":847},"1",{"type":17,"tag":126,"props":849,"children":850},{"style":325},[851],{"type":23,"value":852},"])  ",{"type":17,"tag":126,"props":854,"children":855},{"style":315},[856],{"type":23,"value":857},"# Output 200\n",{"type":17,"tag":26,"props":859,"children":860},{},[861,863,868],{"type":23,"value":862},"Additionally, we can create a ",{"type":17,"tag":146,"props":864,"children":866},{"className":865},[],[867],{"type":23,"value":94},{"type":23,"value":869}," with custom indexes:",{"type":17,"tag":299,"props":871,"children":873},{"code":872,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a Series with custom indexes\ndata = pd.Series([100, 200, 300, 400], index=[\"A\", \"B\", \"C\", \"D\"])\n\n# Output the Series\nprint(data)\n",[874],{"type":17,"tag":146,"props":875,"children":876},{"__ignoreMap":7},[877,896,903,911,1009,1016,1023],{"type":17,"tag":126,"props":878,"children":879},{"class":310,"line":311},[880,884,888,892],{"type":17,"tag":126,"props":881,"children":882},{"style":337},[883],{"type":23,"value":638},{"type":17,"tag":126,"props":885,"children":886},{"style":325},[887],{"type":23,"value":643},{"type":17,"tag":126,"props":889,"children":890},{"style":337},[891],{"type":23,"value":648},{"type":17,"tag":126,"props":893,"children":894},{"style":325},[895],{"type":23,"value":653},{"type":17,"tag":126,"props":897,"children":898},{"class":310,"line":321},[899],{"type":17,"tag":126,"props":900,"children":901},{"emptyLinePlaceholder":659},[902],{"type":23,"value":662},{"type":17,"tag":126,"props":904,"children":905},{"class":310,"line":665},[906],{"type":17,"tag":126,"props":907,"children":908},{"style":315},[909],{"type":23,"value":910},"# Create a Series with custom indexes\n",{"type":17,"tag":126,"props":912,"children":913},{"class":310,"line":674},[914,918,922,926,930,934,938,942,946,950,954,959,963,967,972,978,982,987,991,996,1000,1005],{"type":17,"tag":126,"props":915,"children":916},{"style":325},[917],{"type":23,"value":680},{"type":17,"tag":126,"props":919,"children":920},{"style":337},[921],{"type":23,"value":340},{"type":17,"tag":126,"props":923,"children":924},{"style":325},[925],{"type":23,"value":689},{"type":17,"tag":126,"props":927,"children":928},{"style":343},[929],{"type":23,"value":694},{"type":17,"tag":126,"props":931,"children":932},{"style":325},[933],{"type":23,"value":351},{"type":17,"tag":126,"props":935,"children":936},{"style":343},[937],{"type":23,"value":703},{"type":17,"tag":126,"props":939,"children":940},{"style":325},[941],{"type":23,"value":351},{"type":17,"tag":126,"props":943,"children":944},{"style":343},[945],{"type":23,"value":712},{"type":17,"tag":126,"props":947,"children":948},{"style":325},[949],{"type":23,"value":351},{"type":17,"tag":126,"props":951,"children":952},{"style":343},[953],{"type":23,"value":721},{"type":17,"tag":126,"props":955,"children":956},{"style":325},[957],{"type":23,"value":958},"], ",{"type":17,"tag":126,"props":960,"children":961},{"style":331},[962],{"type":23,"value":356},{"type":17,"tag":126,"props":964,"children":965},{"style":337},[966],{"type":23,"value":340},{"type":17,"tag":126,"props":968,"children":969},{"style":325},[970],{"type":23,"value":971},"[",{"type":17,"tag":126,"props":973,"children":975},{"style":974},"--shiki-light:#032F62;--shiki-dark:#9ECBFF",[976],{"type":23,"value":977},"\"A\"",{"type":17,"tag":126,"props":979,"children":980},{"style":325},[981],{"type":23,"value":351},{"type":17,"tag":126,"props":983,"children":984},{"style":974},[985],{"type":23,"value":986},"\"B\"",{"type":17,"tag":126,"props":988,"children":989},{"style":325},[990],{"type":23,"value":351},{"type":17,"tag":126,"props":992,"children":993},{"style":974},[994],{"type":23,"value":995},"\"C\"",{"type":17,"tag":126,"props":997,"children":998},{"style":325},[999],{"type":23,"value":351},{"type":17,"tag":126,"props":1001,"children":1002},{"style":974},[1003],{"type":23,"value":1004},"\"D\"",{"type":17,"tag":126,"props":1006,"children":1007},{"style":325},[1008],{"type":23,"value":726},{"type":17,"tag":126,"props":1010,"children":1011},{"class":310,"line":729},[1012],{"type":17,"tag":126,"props":1013,"children":1014},{"emptyLinePlaceholder":659},[1015],{"type":23,"value":662},{"type":17,"tag":126,"props":1017,"children":1018},{"class":310,"line":737},[1019],{"type":17,"tag":126,"props":1020,"children":1021},{"style":315},[1022],{"type":23,"value":743},{"type":17,"tag":126,"props":1024,"children":1025},{"class":310,"line":746},[1026,1030],{"type":17,"tag":126,"props":1027,"children":1028},{"style":343},[1029],{"type":23,"value":752},{"type":17,"tag":126,"props":1031,"children":1032},{"style":325},[1033],{"type":23,"value":757},{"type":17,"tag":26,"props":1035,"children":1036},{},[1037],{"type":23,"value":762},{"type":17,"tag":299,"props":1039,"children":1041},{"code":1040,"language":766,"meta":7,"className":767,"style":7},"A    100\nB    200\nC    300\nD    400\ndtype: int64\n",[1042],{"type":17,"tag":146,"props":1043,"children":1044},{"__ignoreMap":7},[1045,1053,1061,1069,1077],{"type":17,"tag":126,"props":1046,"children":1047},{"class":310,"line":311},[1048],{"type":17,"tag":126,"props":1049,"children":1050},{},[1051],{"type":23,"value":1052},"A    100\n",{"type":17,"tag":126,"props":1054,"children":1055},{"class":310,"line":321},[1056],{"type":17,"tag":126,"props":1057,"children":1058},{},[1059],{"type":23,"value":1060},"B    200\n",{"type":17,"tag":126,"props":1062,"children":1063},{"class":310,"line":665},[1064],{"type":17,"tag":126,"props":1065,"children":1066},{},[1067],{"type":23,"value":1068},"C    300\n",{"type":17,"tag":126,"props":1070,"children":1071},{"class":310,"line":674},[1072],{"type":17,"tag":126,"props":1073,"children":1074},{},[1075],{"type":23,"value":1076},"D    400\n",{"type":17,"tag":126,"props":1078,"children":1079},{"class":310,"line":729},[1080],{"type":17,"tag":126,"props":1081,"children":1082},{},[1083],{"type":23,"value":811},{"type":17,"tag":26,"props":1085,"children":1086},{},[1087,1089,1095,1096,1102,1103,1109,1111,1117],{"type":23,"value":1088},"At this point, the indexes are ",{"type":17,"tag":146,"props":1090,"children":1092},{"className":1091},[],[1093],{"type":23,"value":1094},"A",{"type":23,"value":351},{"type":17,"tag":146,"props":1097,"children":1099},{"className":1098},[],[1100],{"type":23,"value":1101},"B",{"type":23,"value":351},{"type":17,"tag":146,"props":1104,"children":1106},{"className":1105},[],[1107],{"type":23,"value":1108},"C",{"type":23,"value":1110},", and ",{"type":17,"tag":146,"props":1112,"children":1114},{"className":1113},[],[1115],{"type":23,"value":1116},"D",{"type":23,"value":1118},". We can use the index value to access the corresponding data:",{"type":17,"tag":299,"props":1120,"children":1122},{"code":1121,"language":302,"meta":7,"className":303,"style":7},"print(data[\"A\"])  # Output 100\n",[1123],{"type":17,"tag":146,"props":1124,"children":1125},{"__ignoreMap":7},[1126],{"type":17,"tag":126,"props":1127,"children":1128},{"class":310,"line":311},[1129,1133,1137,1141,1145],{"type":17,"tag":126,"props":1130,"children":1131},{"style":343},[1132],{"type":23,"value":752},{"type":17,"tag":126,"props":1134,"children":1135},{"style":325},[1136],{"type":23,"value":842},{"type":17,"tag":126,"props":1138,"children":1139},{"style":974},[1140],{"type":23,"value":977},{"type":17,"tag":126,"props":1142,"children":1143},{"style":325},[1144],{"type":23,"value":852},{"type":17,"tag":126,"props":1146,"children":1147},{"style":315},[1148],{"type":23,"value":1149},"# Output 100\n",{"type":17,"tag":26,"props":1151,"children":1152},{},[1153,1155,1160,1162,1167,1169,1174],{"type":23,"value":1154},"A ",{"type":17,"tag":146,"props":1156,"children":1158},{"className":1157},[],[1159],{"type":23,"value":94},{"type":23,"value":1161}," can also be created by passing a dictionary. The keys of the dictionary will be used as the indexes of the ",{"type":17,"tag":146,"props":1163,"children":1165},{"className":1164},[],[1166],{"type":23,"value":94},{"type":23,"value":1168},", and the values will be used as the data of the ",{"type":17,"tag":146,"props":1170,"children":1172},{"className":1171},[],[1173],{"type":23,"value":94},{"type":23,"value":1175},":",{"type":17,"tag":299,"props":1177,"children":1179},{"code":1178,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a Series using a dictionary\ndata_dict = {\"A\": 10, \"B\": 20, \"C\": 30, \"D\": 40}\ndata_series = pd.Series(data_dict)\n\n# Output the Series\nprint(data_series)\n",[1180],{"type":17,"tag":146,"props":1181,"children":1182},{"__ignoreMap":7},[1183,1202,1209,1217,1304,1321,1328,1335],{"type":17,"tag":126,"props":1184,"children":1185},{"class":310,"line":311},[1186,1190,1194,1198],{"type":17,"tag":126,"props":1187,"children":1188},{"style":337},[1189],{"type":23,"value":638},{"type":17,"tag":126,"props":1191,"children":1192},{"style":325},[1193],{"type":23,"value":643},{"type":17,"tag":126,"props":1195,"children":1196},{"style":337},[1197],{"type":23,"value":648},{"type":17,"tag":126,"props":1199,"children":1200},{"style":325},[1201],{"type":23,"value":653},{"type":17,"tag":126,"props":1203,"children":1204},{"class":310,"line":321},[1205],{"type":17,"tag":126,"props":1206,"children":1207},{"emptyLinePlaceholder":659},[1208],{"type":23,"value":662},{"type":17,"tag":126,"props":1210,"children":1211},{"class":310,"line":665},[1212],{"type":17,"tag":126,"props":1213,"children":1214},{"style":315},[1215],{"type":23,"value":1216},"# Create a Series using a dictionary\n",{"type":17,"tag":126,"props":1218,"children":1219},{"class":310,"line":674},[1220,1225,1229,1234,1238,1243,1248,1252,1256,1260,1265,1269,1273,1277,1282,1286,1290,1294,1299],{"type":17,"tag":126,"props":1221,"children":1222},{"style":325},[1223],{"type":23,"value":1224},"data_dict ",{"type":17,"tag":126,"props":1226,"children":1227},{"style":337},[1228],{"type":23,"value":340},{"type":17,"tag":126,"props":1230,"children":1231},{"style":325},[1232],{"type":23,"value":1233}," {",{"type":17,"tag":126,"props":1235,"children":1236},{"style":974},[1237],{"type":23,"value":977},{"type":17,"tag":126,"props":1239,"children":1240},{"style":325},[1241],{"type":23,"value":1242},": ",{"type":17,"tag":126,"props":1244,"children":1245},{"style":343},[1246],{"type":23,"value":1247},"10",{"type":17,"tag":126,"props":1249,"children":1250},{"style":325},[1251],{"type":23,"value":351},{"type":17,"tag":126,"props":1253,"children":1254},{"style":974},[1255],{"type":23,"value":986},{"type":17,"tag":126,"props":1257,"children":1258},{"style":325},[1259],{"type":23,"value":1242},{"type":17,"tag":126,"props":1261,"children":1262},{"style":343},[1263],{"type":23,"value":1264},"20",{"type":17,"tag":126,"props":1266,"children":1267},{"style":325},[1268],{"type":23,"value":351},{"type":17,"tag":126,"props":1270,"children":1271},{"style":974},[1272],{"type":23,"value":995},{"type":17,"tag":126,"props":1274,"children":1275},{"style":325},[1276],{"type":23,"value":1242},{"type":17,"tag":126,"props":1278,"children":1279},{"style":343},[1280],{"type":23,"value":1281},"30",{"type":17,"tag":126,"props":1283,"children":1284},{"style":325},[1285],{"type":23,"value":351},{"type":17,"tag":126,"props":1287,"children":1288},{"style":974},[1289],{"type":23,"value":1004},{"type":17,"tag":126,"props":1291,"children":1292},{"style":325},[1293],{"type":23,"value":1242},{"type":17,"tag":126,"props":1295,"children":1296},{"style":343},[1297],{"type":23,"value":1298},"40",{"type":17,"tag":126,"props":1300,"children":1301},{"style":325},[1302],{"type":23,"value":1303},"}\n",{"type":17,"tag":126,"props":1305,"children":1306},{"class":310,"line":729},[1307,1312,1316],{"type":17,"tag":126,"props":1308,"children":1309},{"style":325},[1310],{"type":23,"value":1311},"data_series ",{"type":17,"tag":126,"props":1313,"children":1314},{"style":337},[1315],{"type":23,"value":340},{"type":17,"tag":126,"props":1317,"children":1318},{"style":325},[1319],{"type":23,"value":1320}," pd.Series(data_dict)\n",{"type":17,"tag":126,"props":1322,"children":1323},{"class":310,"line":737},[1324],{"type":17,"tag":126,"props":1325,"children":1326},{"emptyLinePlaceholder":659},[1327],{"type":23,"value":662},{"type":17,"tag":126,"props":1329,"children":1330},{"class":310,"line":746},[1331],{"type":17,"tag":126,"props":1332,"children":1333},{"style":315},[1334],{"type":23,"value":743},{"type":17,"tag":126,"props":1336,"children":1338},{"class":310,"line":1337},8,[1339,1343],{"type":17,"tag":126,"props":1340,"children":1341},{"style":343},[1342],{"type":23,"value":752},{"type":17,"tag":126,"props":1344,"children":1345},{"style":325},[1346],{"type":23,"value":1347},"(data_series)\n",{"type":17,"tag":26,"props":1349,"children":1350},{},[1351],{"type":23,"value":762},{"type":17,"tag":299,"props":1353,"children":1355},{"code":1354,"language":766,"meta":7,"className":767,"style":7},"A    10\nB    20\nC    30\nD    40\ndtype: int64\n",[1356],{"type":17,"tag":146,"props":1357,"children":1358},{"__ignoreMap":7},[1359,1367,1375,1383,1391],{"type":17,"tag":126,"props":1360,"children":1361},{"class":310,"line":311},[1362],{"type":17,"tag":126,"props":1363,"children":1364},{},[1365],{"type":23,"value":1366},"A    10\n",{"type":17,"tag":126,"props":1368,"children":1369},{"class":310,"line":321},[1370],{"type":17,"tag":126,"props":1371,"children":1372},{},[1373],{"type":23,"value":1374},"B    20\n",{"type":17,"tag":126,"props":1376,"children":1377},{"class":310,"line":665},[1378],{"type":17,"tag":126,"props":1379,"children":1380},{},[1381],{"type":23,"value":1382},"C    30\n",{"type":17,"tag":126,"props":1384,"children":1385},{"class":310,"line":674},[1386],{"type":17,"tag":126,"props":1387,"children":1388},{},[1389],{"type":23,"value":1390},"D    40\n",{"type":17,"tag":126,"props":1392,"children":1393},{"class":310,"line":729},[1394],{"type":17,"tag":126,"props":1395,"children":1396},{},[1397],{"type":23,"value":811},{"type":17,"tag":26,"props":1399,"children":1400},{},[1401,1403,1408],{"type":23,"value":1402},"If not all data from the dictionary is needed, we can select part of the dictionary data by specifying an index when creating the ",{"type":17,"tag":146,"props":1404,"children":1406},{"className":1405},[],[1407],{"type":23,"value":94},{"type":23,"value":1175},{"type":17,"tag":299,"props":1410,"children":1412},{"code":1411,"language":302,"meta":7,"className":303,"style":7},"# Select only part of the indexes\npartial_series = pd.Series(data_dict, index=[\"A\", \"C\"])\nprint(partial_series)\n",[1413],{"type":17,"tag":146,"props":1414,"children":1415},{"__ignoreMap":7},[1416,1424,1469],{"type":17,"tag":126,"props":1417,"children":1418},{"class":310,"line":311},[1419],{"type":17,"tag":126,"props":1420,"children":1421},{"style":315},[1422],{"type":23,"value":1423},"# Select only part of the indexes\n",{"type":17,"tag":126,"props":1425,"children":1426},{"class":310,"line":321},[1427,1432,1436,1441,1445,1449,1453,1457,1461,1465],{"type":17,"tag":126,"props":1428,"children":1429},{"style":325},[1430],{"type":23,"value":1431},"partial_series ",{"type":17,"tag":126,"props":1433,"children":1434},{"style":337},[1435],{"type":23,"value":340},{"type":17,"tag":126,"props":1437,"children":1438},{"style":325},[1439],{"type":23,"value":1440}," pd.Series(data_dict, ",{"type":17,"tag":126,"props":1442,"children":1443},{"style":331},[1444],{"type":23,"value":356},{"type":17,"tag":126,"props":1446,"children":1447},{"style":337},[1448],{"type":23,"value":340},{"type":17,"tag":126,"props":1450,"children":1451},{"style":325},[1452],{"type":23,"value":971},{"type":17,"tag":126,"props":1454,"children":1455},{"style":974},[1456],{"type":23,"value":977},{"type":17,"tag":126,"props":1458,"children":1459},{"style":325},[1460],{"type":23,"value":351},{"type":17,"tag":126,"props":1462,"children":1463},{"style":974},[1464],{"type":23,"value":995},{"type":17,"tag":126,"props":1466,"children":1467},{"style":325},[1468],{"type":23,"value":726},{"type":17,"tag":126,"props":1470,"children":1471},{"class":310,"line":665},[1472,1476],{"type":17,"tag":126,"props":1473,"children":1474},{"style":343},[1475],{"type":23,"value":752},{"type":17,"tag":126,"props":1477,"children":1478},{"style":325},[1479],{"type":23,"value":1480},"(partial_series)\n",{"type":17,"tag":26,"props":1482,"children":1483},{},[1484],{"type":23,"value":762},{"type":17,"tag":299,"props":1486,"children":1488},{"code":1487,"language":766,"meta":7,"className":767,"style":7},"A    10\nC    30\ndtype: int64\n",[1489],{"type":17,"tag":146,"props":1490,"children":1491},{"__ignoreMap":7},[1492,1499,1506],{"type":17,"tag":126,"props":1493,"children":1494},{"class":310,"line":311},[1495],{"type":17,"tag":126,"props":1496,"children":1497},{},[1498],{"type":23,"value":1366},{"type":17,"tag":126,"props":1500,"children":1501},{"class":310,"line":321},[1502],{"type":17,"tag":126,"props":1503,"children":1504},{},[1505],{"type":23,"value":1382},{"type":17,"tag":126,"props":1507,"children":1508},{"class":310,"line":665},[1509],{"type":17,"tag":126,"props":1510,"children":1511},{},[1512],{"type":23,"value":811},{"type":17,"tag":26,"props":1514,"children":1515},{},[1516,1518,1523,1525,1530],{"type":23,"value":1517},"In summary, a Pandas ",{"type":17,"tag":146,"props":1519,"children":1521},{"className":1520},[],[1522],{"type":23,"value":94},{"type":23,"value":1524}," is a very flexible and powerful data structure suitable for handling one-dimensional data with indexes. Whether it is a simple data list or complex data constructed through dictionaries and arrays, a ",{"type":17,"tag":146,"props":1526,"children":1528},{"className":1527},[],[1529],{"type":23,"value":94},{"type":23,"value":1531}," provides powerful operations and retrieval functions, especially suitable for scenarios involving labeled data.",{"type":17,"tag":134,"props":1533,"children":1535},{"id":1534},"_2-pandas-dataframe",[1536],{"type":23,"value":1537},"2. Pandas DataFrame",{"type":17,"tag":26,"props":1539,"children":1540},{},[1541,1542,1547,1549,1554],{"type":23,"value":144},{"type":17,"tag":146,"props":1543,"children":1545},{"className":1544},[],[1546],{"type":23,"value":87},{"type":23,"value":1548}," is a two-dimensional, labeled data structure similar to a spreadsheet or SQL table. It can store various types of data (such as integers, floats, strings, timestamps, etc.) and can combine different types of data for processing. The ",{"type":17,"tag":146,"props":1550,"children":1552},{"className":1551},[],[1553],{"type":23,"value":87},{"type":23,"value":1555}," is one of the most commonly used data structures in the Pandas library, widely used for data analysis, cleaning, and manipulation.",{"type":17,"tag":26,"props":1557,"children":1558},{},[1559,1561,1566],{"type":23,"value":1560},"The main features of a ",{"type":17,"tag":146,"props":1562,"children":1564},{"className":1563},[],[1565],{"type":23,"value":87},{"type":23,"value":159},{"type":17,"tag":47,"props":1568,"children":1569},{},[1570,1586,1596,1606,1621,1643],{"type":17,"tag":51,"props":1571,"children":1572},{},[1573,1578,1579,1584],{"type":17,"tag":83,"props":1574,"children":1575},{},[1576],{"type":23,"value":1577},"Two-dimensional data structure",{"type":23,"value":172},{"type":17,"tag":146,"props":1580,"children":1582},{"className":1581},[],[1583],{"type":23,"value":87},{"type":23,"value":1585}," is a tabular data structure with rows and columns, supporting multiple data types.",{"type":17,"tag":51,"props":1587,"children":1588},{},[1589,1594],{"type":17,"tag":83,"props":1590,"children":1591},{},[1592],{"type":23,"value":1593},"Flexible row and column indexes",{"type":23,"value":1595},": Both rows and columns have corresponding labels (indexes), supporting custom or automatically generated integer indexes. Indexes can be used for quick data location.",{"type":17,"tag":51,"props":1597,"children":1598},{},[1599,1604],{"type":17,"tag":83,"props":1600,"children":1601},{},[1602],{"type":23,"value":1603},"Heterogeneous data types",{"type":23,"value":1605},": Different columns can store different types of data (e.g., one column can be strings, another can be floats).",{"type":17,"tag":51,"props":1607,"children":1608},{},[1609,1613,1614,1619],{"type":17,"tag":83,"props":1610,"children":1611},{},[1612],{"type":23,"value":213},{"type":23,"value":215},{"type":17,"tag":146,"props":1615,"children":1617},{"className":1616},[],[1618],{"type":23,"value":87},{"type":23,"value":1620}," objects, Pandas automatically aligns data based on row and column indexes.",{"type":17,"tag":51,"props":1622,"children":1623},{},[1624,1628,1629,1634,1636,1641],{"type":17,"tag":83,"props":1625,"children":1626},{},[1627],{"type":23,"value":230},{"type":23,"value":172},{"type":17,"tag":146,"props":1630,"children":1632},{"className":1631},[],[1633],{"type":23,"value":87},{"type":23,"value":1635}," supports missing values, usually represented by ",{"type":17,"tag":146,"props":1637,"children":1639},{"className":1638},[],[1640],{"type":23,"value":244},{"type":23,"value":1642},", and provides rich methods to handle missing data.",{"type":17,"tag":51,"props":1644,"children":1645},{},[1646,1651,1652,1657],{"type":17,"tag":83,"props":1647,"children":1648},{},[1649],{"type":23,"value":1650},"Rich operation functions",{"type":23,"value":172},{"type":17,"tag":146,"props":1653,"children":1655},{"className":1654},[],[1656],{"type":23,"value":87},{"type":23,"value":1658}," provides flexible operations on data, such as adding and deleting rows and columns, filtering, sorting, merging, and grouping.",{"type":17,"tag":26,"props":1660,"children":1661},{},[1662,1663,1668,1670,1676],{"type":23,"value":282},{"type":17,"tag":146,"props":1664,"children":1666},{"className":1665},[],[1667],{"type":23,"value":87},{"type":23,"value":1669}," using the ",{"type":17,"tag":146,"props":1671,"children":1673},{"className":1672},[],[1674],{"type":23,"value":1675},"pd.DataFrame()",{"type":23,"value":1677}," constructor, passing in data in various forms (such as dictionaries, lists, NumPy arrays, etc.).",{"type":17,"tag":299,"props":1679,"children":1681},{"code":1680,"language":302,"meta":7,"className":303,"style":7},"# Constructor and parameters\npandas.DataFrame(data=None, index=None, columns=None, dtype=None, copy=False)\n",[1682],{"type":17,"tag":146,"props":1683,"children":1684},{"__ignoreMap":7},[1685,1692],{"type":17,"tag":126,"props":1686,"children":1687},{"class":310,"line":311},[1688],{"type":17,"tag":126,"props":1689,"children":1690},{"style":315},[1691],{"type":23,"value":318},{"type":17,"tag":126,"props":1693,"children":1694},{"class":310,"line":321},[1695,1700,1704,1708,1712,1716,1720,1724,1728,1732,1737,1741,1745,1749,1753,1757,1761,1765,1769,1773,1777],{"type":17,"tag":126,"props":1696,"children":1697},{"style":325},[1698],{"type":23,"value":1699},"pandas.DataFrame(",{"type":17,"tag":126,"props":1701,"children":1702},{"style":331},[1703],{"type":23,"value":334},{"type":17,"tag":126,"props":1705,"children":1706},{"style":337},[1707],{"type":23,"value":340},{"type":17,"tag":126,"props":1709,"children":1710},{"style":343},[1711],{"type":23,"value":346},{"type":17,"tag":126,"props":1713,"children":1714},{"style":325},[1715],{"type":23,"value":351},{"type":17,"tag":126,"props":1717,"children":1718},{"style":331},[1719],{"type":23,"value":356},{"type":17,"tag":126,"props":1721,"children":1722},{"style":337},[1723],{"type":23,"value":340},{"type":17,"tag":126,"props":1725,"children":1726},{"style":343},[1727],{"type":23,"value":346},{"type":17,"tag":126,"props":1729,"children":1730},{"style":325},[1731],{"type":23,"value":351},{"type":17,"tag":126,"props":1733,"children":1734},{"style":331},[1735],{"type":23,"value":1736},"columns",{"type":17,"tag":126,"props":1738,"children":1739},{"style":337},[1740],{"type":23,"value":340},{"type":17,"tag":126,"props":1742,"children":1743},{"style":343},[1744],{"type":23,"value":346},{"type":17,"tag":126,"props":1746,"children":1747},{"style":325},[1748],{"type":23,"value":351},{"type":17,"tag":126,"props":1750,"children":1751},{"style":331},[1752],{"type":23,"value":373},{"type":17,"tag":126,"props":1754,"children":1755},{"style":337},[1756],{"type":23,"value":340},{"type":17,"tag":126,"props":1758,"children":1759},{"style":343},[1760],{"type":23,"value":346},{"type":17,"tag":126,"props":1762,"children":1763},{"style":325},[1764],{"type":23,"value":351},{"type":17,"tag":126,"props":1766,"children":1767},{"style":331},[1768],{"type":23,"value":407},{"type":17,"tag":126,"props":1770,"children":1771},{"style":337},[1772],{"type":23,"value":340},{"type":17,"tag":126,"props":1774,"children":1775},{"style":343},[1776],{"type":23,"value":416},{"type":17,"tag":126,"props":1778,"children":1779},{"style":325},[1780],{"type":23,"value":438},{"type":17,"tag":26,"props":1782,"children":1783},{},[1784],{"type":23,"value":443},{"type":17,"tag":47,"props":1786,"children":1787},{},[1788,1814,1834,1854,1873],{"type":17,"tag":51,"props":1789,"children":1790},{},[1791,1799,1800,1805,1807,1812],{"type":17,"tag":83,"props":1792,"children":1793},{},[1794],{"type":17,"tag":146,"props":1795,"children":1797},{"className":1796},[],[1798],{"type":23,"value":334},{"type":23,"value":459},{"type":17,"tag":146,"props":1801,"children":1803},{"className":1802},[],[1804],{"type":23,"value":87},{"type":23,"value":1806},", which can be a dictionary, list, two-dimensional array, NumPy array, or another ",{"type":17,"tag":146,"props":1808,"children":1810},{"className":1809},[],[1811],{"type":23,"value":87},{"type":23,"value":1813},". Different data structures have different default behaviors. For example, dictionary keys are used as column names, and lists are used as row data.",{"type":17,"tag":51,"props":1815,"children":1816},{},[1817,1825,1827,1832],{"type":17,"tag":83,"props":1818,"children":1819},{},[1820],{"type":17,"tag":146,"props":1821,"children":1823},{"className":1822},[],[1824],{"type":23,"value":356},{"type":23,"value":1826},": The row index of the ",{"type":17,"tag":146,"props":1828,"children":1830},{"className":1829},[],[1831],{"type":23,"value":87},{"type":23,"value":1833},". If not specified, Pandas will generate an integer index starting from 0.",{"type":17,"tag":51,"props":1835,"children":1836},{},[1837,1845,1847,1852],{"type":17,"tag":83,"props":1838,"children":1839},{},[1840],{"type":17,"tag":146,"props":1841,"children":1843},{"className":1842},[],[1844],{"type":23,"value":1736},{"type":23,"value":1846},": The column labels of the ",{"type":17,"tag":146,"props":1848,"children":1850},{"className":1849},[],[1851],{"type":23,"value":87},{"type":23,"value":1853},". If not specified, Pandas will automatically use the keys of the input data (e.g., dictionary keys) or integer indexes starting from 0.",{"type":17,"tag":51,"props":1855,"children":1856},{},[1857,1865,1866,1871],{"type":17,"tag":83,"props":1858,"children":1859},{},[1860],{"type":17,"tag":146,"props":1861,"children":1863},{"className":1862},[],[1864],{"type":23,"value":373},{"type":23,"value":506},{"type":17,"tag":146,"props":1867,"children":1869},{"className":1868},[],[1870],{"type":23,"value":87},{"type":23,"value":1872},". It can be a NumPy data type. If not specified, Pandas will automatically infer the type based on the input data.",{"type":17,"tag":51,"props":1874,"children":1875},{},[1876,1884,1886,1891,1893,1898],{"type":17,"tag":83,"props":1877,"children":1878},{},[1879],{"type":17,"tag":146,"props":1880,"children":1882},{"className":1881},[],[1883],{"type":23,"value":407},{"type":23,"value":1885},": Whether to copy the data. The default is ",{"type":17,"tag":146,"props":1887,"children":1889},{"className":1888},[],[1890],{"type":23,"value":416},{"type":23,"value":1892},", meaning no copy. If set to ",{"type":17,"tag":146,"props":1894,"children":1896},{"className":1895},[],[1897],{"type":23,"value":574},{"type":23,"value":1899},", the input data will be copied.",{"type":17,"tag":26,"props":1901,"children":1902},{},[1903,1905],{"type":23,"value":1904},"Here are some simple examples of creating a ",{"type":17,"tag":146,"props":1906,"children":1908},{"className":1907},[],[1909],{"type":23,"value":87},{"type":17,"tag":26,"props":1911,"children":1912},{},[1913],{"type":17,"tag":608,"props":1914,"children":1916},{"alt":7,"src":1915},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E5%88%9B%E5%BB%BAdataframe%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95en.png",[],{"type":17,"tag":26,"props":1918,"children":1919},{},[1920,1922,1927],{"type":23,"value":1921},"One of the most common ways to create a ",{"type":17,"tag":146,"props":1923,"children":1925},{"className":1924},[],[1926],{"type":23,"value":87},{"type":23,"value":1928}," is by using a dictionary, where the keys of the dictionary become the column names and the values become the column data:",{"type":17,"tag":299,"props":1930,"children":1932},{"code":1931,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create DataFrame using a dictionary\ndata = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, 22, 25],\n    \"Score\": [85, 92, 78]\n}\n\ndf = pd.DataFrame(data)\n\n# Output DataFrame\nprint(df)\n",[1933],{"type":17,"tag":146,"props":1934,"children":1935},{"__ignoreMap":7},[1936,1955,1962,1970,1986,2027,2066,2106,2113,2120,2138,2146,2155],{"type":17,"tag":126,"props":1937,"children":1938},{"class":310,"line":311},[1939,1943,1947,1951],{"type":17,"tag":126,"props":1940,"children":1941},{"style":337},[1942],{"type":23,"value":638},{"type":17,"tag":126,"props":1944,"children":1945},{"style":325},[1946],{"type":23,"value":643},{"type":17,"tag":126,"props":1948,"children":1949},{"style":337},[1950],{"type":23,"value":648},{"type":17,"tag":126,"props":1952,"children":1953},{"style":325},[1954],{"type":23,"value":653},{"type":17,"tag":126,"props":1956,"children":1957},{"class":310,"line":321},[1958],{"type":17,"tag":126,"props":1959,"children":1960},{"emptyLinePlaceholder":659},[1961],{"type":23,"value":662},{"type":17,"tag":126,"props":1963,"children":1964},{"class":310,"line":665},[1965],{"type":17,"tag":126,"props":1966,"children":1967},{"style":315},[1968],{"type":23,"value":1969},"# Create DataFrame using a dictionary\n",{"type":17,"tag":126,"props":1971,"children":1972},{"class":310,"line":674},[1973,1977,1981],{"type":17,"tag":126,"props":1974,"children":1975},{"style":325},[1976],{"type":23,"value":680},{"type":17,"tag":126,"props":1978,"children":1979},{"style":337},[1980],{"type":23,"value":340},{"type":17,"tag":126,"props":1982,"children":1983},{"style":325},[1984],{"type":23,"value":1985}," {\n",{"type":17,"tag":126,"props":1987,"children":1988},{"class":310,"line":729},[1989,1994,1999,2004,2008,2013,2017,2022],{"type":17,"tag":126,"props":1990,"children":1991},{"style":974},[1992],{"type":23,"value":1993},"    \"Name\"",{"type":17,"tag":126,"props":1995,"children":1996},{"style":325},[1997],{"type":23,"value":1998},": [",{"type":17,"tag":126,"props":2000,"children":2001},{"style":974},[2002],{"type":23,"value":2003},"\"Tom\"",{"type":17,"tag":126,"props":2005,"children":2006},{"style":325},[2007],{"type":23,"value":351},{"type":17,"tag":126,"props":2009,"children":2010},{"style":974},[2011],{"type":23,"value":2012},"\"Jerry\"",{"type":17,"tag":126,"props":2014,"children":2015},{"style":325},[2016],{"type":23,"value":351},{"type":17,"tag":126,"props":2018,"children":2019},{"style":974},[2020],{"type":23,"value":2021},"\"Spike\"",{"type":17,"tag":126,"props":2023,"children":2024},{"style":325},[2025],{"type":23,"value":2026},"],\n",{"type":17,"tag":126,"props":2028,"children":2029},{"class":310,"line":737},[2030,2035,2039,2044,2048,2053,2057,2062],{"type":17,"tag":126,"props":2031,"children":2032},{"style":974},[2033],{"type":23,"value":2034},"    \"Age\"",{"type":17,"tag":126,"props":2036,"children":2037},{"style":325},[2038],{"type":23,"value":1998},{"type":17,"tag":126,"props":2040,"children":2041},{"style":343},[2042],{"type":23,"value":2043},"28",{"type":17,"tag":126,"props":2045,"children":2046},{"style":325},[2047],{"type":23,"value":351},{"type":17,"tag":126,"props":2049,"children":2050},{"style":343},[2051],{"type":23,"value":2052},"22",{"type":17,"tag":126,"props":2054,"children":2055},{"style":325},[2056],{"type":23,"value":351},{"type":17,"tag":126,"props":2058,"children":2059},{"style":343},[2060],{"type":23,"value":2061},"25",{"type":17,"tag":126,"props":2063,"children":2064},{"style":325},[2065],{"type":23,"value":2026},{"type":17,"tag":126,"props":2067,"children":2068},{"class":310,"line":746},[2069,2074,2078,2083,2087,2092,2096,2101],{"type":17,"tag":126,"props":2070,"children":2071},{"style":974},[2072],{"type":23,"value":2073},"    \"Score\"",{"type":17,"tag":126,"props":2075,"children":2076},{"style":325},[2077],{"type":23,"value":1998},{"type":17,"tag":126,"props":2079,"children":2080},{"style":343},[2081],{"type":23,"value":2082},"85",{"type":17,"tag":126,"props":2084,"children":2085},{"style":325},[2086],{"type":23,"value":351},{"type":17,"tag":126,"props":2088,"children":2089},{"style":343},[2090],{"type":23,"value":2091},"92",{"type":17,"tag":126,"props":2093,"children":2094},{"style":325},[2095],{"type":23,"value":351},{"type":17,"tag":126,"props":2097,"children":2098},{"style":343},[2099],{"type":23,"value":2100},"78",{"type":17,"tag":126,"props":2102,"children":2103},{"style":325},[2104],{"type":23,"value":2105},"]\n",{"type":17,"tag":126,"props":2107,"children":2108},{"class":310,"line":1337},[2109],{"type":17,"tag":126,"props":2110,"children":2111},{"style":325},[2112],{"type":23,"value":1303},{"type":17,"tag":126,"props":2114,"children":2115},{"class":310,"line":11},[2116],{"type":17,"tag":126,"props":2117,"children":2118},{"emptyLinePlaceholder":659},[2119],{"type":23,"value":662},{"type":17,"tag":126,"props":2121,"children":2123},{"class":310,"line":2122},10,[2124,2129,2133],{"type":17,"tag":126,"props":2125,"children":2126},{"style":325},[2127],{"type":23,"value":2128},"df ",{"type":17,"tag":126,"props":2130,"children":2131},{"style":337},[2132],{"type":23,"value":340},{"type":17,"tag":126,"props":2134,"children":2135},{"style":325},[2136],{"type":23,"value":2137}," pd.DataFrame(data)\n",{"type":17,"tag":126,"props":2139,"children":2141},{"class":310,"line":2140},11,[2142],{"type":17,"tag":126,"props":2143,"children":2144},{"emptyLinePlaceholder":659},[2145],{"type":23,"value":662},{"type":17,"tag":126,"props":2147,"children":2149},{"class":310,"line":2148},12,[2150],{"type":17,"tag":126,"props":2151,"children":2152},{"style":315},[2153],{"type":23,"value":2154},"# Output DataFrame\n",{"type":17,"tag":126,"props":2156,"children":2158},{"class":310,"line":2157},13,[2159,2163],{"type":17,"tag":126,"props":2160,"children":2161},{"style":343},[2162],{"type":23,"value":752},{"type":17,"tag":126,"props":2164,"children":2165},{"style":325},[2166],{"type":23,"value":2167},"(df)\n",{"type":17,"tag":26,"props":2169,"children":2170},{},[2171],{"type":23,"value":762},{"type":17,"tag":299,"props":2173,"children":2175},{"code":2174,"language":766,"meta":7,"className":767,"style":7},"    Name  Age  Score\n0    Tom   28     85\n1  Jerry   22     92\n2  Spike   25     78\n",[2176],{"type":17,"tag":146,"props":2177,"children":2178},{"__ignoreMap":7},[2179,2187,2195,2203],{"type":17,"tag":126,"props":2180,"children":2181},{"class":310,"line":311},[2182],{"type":17,"tag":126,"props":2183,"children":2184},{},[2185],{"type":23,"value":2186},"    Name  Age  Score\n",{"type":17,"tag":126,"props":2188,"children":2189},{"class":310,"line":321},[2190],{"type":17,"tag":126,"props":2191,"children":2192},{},[2193],{"type":23,"value":2194},"0    Tom   28     85\n",{"type":17,"tag":126,"props":2196,"children":2197},{"class":310,"line":665},[2198],{"type":17,"tag":126,"props":2199,"children":2200},{},[2201],{"type":23,"value":2202},"1  Jerry   22     92\n",{"type":17,"tag":126,"props":2204,"children":2205},{"class":310,"line":674},[2206],{"type":17,"tag":126,"props":2207,"children":2208},{},[2209],{"type":23,"value":2210},"2  Spike   25     78\n",{"type":17,"tag":26,"props":2212,"children":2213},{},[2214,2216,2222,2223,2229,2230,2236],{"type":23,"value":2215},"In this example, the keys ",{"type":17,"tag":146,"props":2217,"children":2219},{"className":2218},[],[2220],{"type":23,"value":2221},"Name",{"type":23,"value":351},{"type":17,"tag":146,"props":2224,"children":2226},{"className":2225},[],[2227],{"type":23,"value":2228},"Age",{"type":23,"value":1110},{"type":17,"tag":146,"props":2231,"children":2233},{"className":2232},[],[2234],{"type":23,"value":2235},"Score",{"type":23,"value":2237}," of the dictionary become the column names, and the list data becomes the values of each column. Pandas automatically generates integer indexes starting from 0.",{"type":17,"tag":26,"props":2239,"children":2240},{},[2241,2243,2248],{"type":23,"value":2242},"Besides using a dictionary, we can also create a ",{"type":17,"tag":146,"props":2244,"children":2246},{"className":2245},[],[2247],{"type":23,"value":87},{"type":23,"value":2249}," using a list of nested lists, where each nested list represents a row of data:",{"type":17,"tag":2251,"props":2252,"children":2255},"code-mirror-run",{":editable":2253,":show-in-col":2253,"max-height":2254},"true","20rem",[2256],{"type":17,"tag":299,"props":2257,"children":2259},{"code":2258,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create DataFrame using nested lists\ndata = [\n    [\"Tom\", 28, 85],\n    [\"Jerry\", 22, 92],\n    [\"Spike\", 25, 78]\n]\n\ndf = pd.DataFrame(data, columns=[\"Name\", \"Age\", \"Score\"])\n\n# Output DataFrame\nprint(df)\n",[2260],{"type":17,"tag":146,"props":2261,"children":2262},{"__ignoreMap":7},[2263,2282,2289,2297,2313,2345,2376,2407,2414,2421,2476,2483,2490],{"type":17,"tag":126,"props":2264,"children":2265},{"class":310,"line":311},[2266,2270,2274,2278],{"type":17,"tag":126,"props":2267,"children":2268},{"style":337},[2269],{"type":23,"value":638},{"type":17,"tag":126,"props":2271,"children":2272},{"style":325},[2273],{"type":23,"value":643},{"type":17,"tag":126,"props":2275,"children":2276},{"style":337},[2277],{"type":23,"value":648},{"type":17,"tag":126,"props":2279,"children":2280},{"style":325},[2281],{"type":23,"value":653},{"type":17,"tag":126,"props":2283,"children":2284},{"class":310,"line":321},[2285],{"type":17,"tag":126,"props":2286,"children":2287},{"emptyLinePlaceholder":659},[2288],{"type":23,"value":662},{"type":17,"tag":126,"props":2290,"children":2291},{"class":310,"line":665},[2292],{"type":17,"tag":126,"props":2293,"children":2294},{"style":315},[2295],{"type":23,"value":2296},"# Create DataFrame using nested lists\n",{"type":17,"tag":126,"props":2298,"children":2299},{"class":310,"line":674},[2300,2304,2308],{"type":17,"tag":126,"props":2301,"children":2302},{"style":325},[2303],{"type":23,"value":680},{"type":17,"tag":126,"props":2305,"children":2306},{"style":337},[2307],{"type":23,"value":340},{"type":17,"tag":126,"props":2309,"children":2310},{"style":325},[2311],{"type":23,"value":2312}," [\n",{"type":17,"tag":126,"props":2314,"children":2315},{"class":310,"line":729},[2316,2321,2325,2329,2333,2337,2341],{"type":17,"tag":126,"props":2317,"children":2318},{"style":325},[2319],{"type":23,"value":2320},"    [",{"type":17,"tag":126,"props":2322,"children":2323},{"style":974},[2324],{"type":23,"value":2003},{"type":17,"tag":126,"props":2326,"children":2327},{"style":325},[2328],{"type":23,"value":351},{"type":17,"tag":126,"props":2330,"children":2331},{"style":343},[2332],{"type":23,"value":2043},{"type":17,"tag":126,"props":2334,"children":2335},{"style":325},[2336],{"type":23,"value":351},{"type":17,"tag":126,"props":2338,"children":2339},{"style":343},[2340],{"type":23,"value":2082},{"type":17,"tag":126,"props":2342,"children":2343},{"style":325},[2344],{"type":23,"value":2026},{"type":17,"tag":126,"props":2346,"children":2347},{"class":310,"line":737},[2348,2352,2356,2360,2364,2368,2372],{"type":17,"tag":126,"props":2349,"children":2350},{"style":325},[2351],{"type":23,"value":2320},{"type":17,"tag":126,"props":2353,"children":2354},{"style":974},[2355],{"type":23,"value":2012},{"type":17,"tag":126,"props":2357,"children":2358},{"style":325},[2359],{"type":23,"value":351},{"type":17,"tag":126,"props":2361,"children":2362},{"style":343},[2363],{"type":23,"value":2052},{"type":17,"tag":126,"props":2365,"children":2366},{"style":325},[2367],{"type":23,"value":351},{"type":17,"tag":126,"props":2369,"children":2370},{"style":343},[2371],{"type":23,"value":2091},{"type":17,"tag":126,"props":2373,"children":2374},{"style":325},[2375],{"type":23,"value":2026},{"type":17,"tag":126,"props":2377,"children":2378},{"class":310,"line":746},[2379,2383,2387,2391,2395,2399,2403],{"type":17,"tag":126,"props":2380,"children":2381},{"style":325},[2382],{"type":23,"value":2320},{"type":17,"tag":126,"props":2384,"children":2385},{"style":974},[2386],{"type":23,"value":2021},{"type":17,"tag":126,"props":2388,"children":2389},{"style":325},[2390],{"type":23,"value":351},{"type":17,"tag":126,"props":2392,"children":2393},{"style":343},[2394],{"type":23,"value":2061},{"type":17,"tag":126,"props":2396,"children":2397},{"style":325},[2398],{"type":23,"value":351},{"type":17,"tag":126,"props":2400,"children":2401},{"style":343},[2402],{"type":23,"value":2100},{"type":17,"tag":126,"props":2404,"children":2405},{"style":325},[2406],{"type":23,"value":2105},{"type":17,"tag":126,"props":2408,"children":2409},{"class":310,"line":1337},[2410],{"type":17,"tag":126,"props":2411,"children":2412},{"style":325},[2413],{"type":23,"value":2105},{"type":17,"tag":126,"props":2415,"children":2416},{"class":310,"line":11},[2417],{"type":17,"tag":126,"props":2418,"children":2419},{"emptyLinePlaceholder":659},[2420],{"type":23,"value":662},{"type":17,"tag":126,"props":2422,"children":2423},{"class":310,"line":2122},[2424,2428,2432,2437,2441,2445,2449,2454,2458,2463,2467,2472],{"type":17,"tag":126,"props":2425,"children":2426},{"style":325},[2427],{"type":23,"value":2128},{"type":17,"tag":126,"props":2429,"children":2430},{"style":337},[2431],{"type":23,"value":340},{"type":17,"tag":126,"props":2433,"children":2434},{"style":325},[2435],{"type":23,"value":2436}," pd.DataFrame(data, ",{"type":17,"tag":126,"props":2438,"children":2439},{"style":331},[2440],{"type":23,"value":1736},{"type":17,"tag":126,"props":2442,"children":2443},{"style":337},[2444],{"type":23,"value":340},{"type":17,"tag":126,"props":2446,"children":2447},{"style":325},[2448],{"type":23,"value":971},{"type":17,"tag":126,"props":2450,"children":2451},{"style":974},[2452],{"type":23,"value":2453},"\"Name\"",{"type":17,"tag":126,"props":2455,"children":2456},{"style":325},[2457],{"type":23,"value":351},{"type":17,"tag":126,"props":2459,"children":2460},{"style":974},[2461],{"type":23,"value":2462},"\"Age\"",{"type":17,"tag":126,"props":2464,"children":2465},{"style":325},[2466],{"type":23,"value":351},{"type":17,"tag":126,"props":2468,"children":2469},{"style":974},[2470],{"type":23,"value":2471},"\"Score\"",{"type":17,"tag":126,"props":2473,"children":2474},{"style":325},[2475],{"type":23,"value":726},{"type":17,"tag":126,"props":2477,"children":2478},{"class":310,"line":2140},[2479],{"type":17,"tag":126,"props":2480,"children":2481},{"emptyLinePlaceholder":659},[2482],{"type":23,"value":662},{"type":17,"tag":126,"props":2484,"children":2485},{"class":310,"line":2148},[2486],{"type":17,"tag":126,"props":2487,"children":2488},{"style":315},[2489],{"type":23,"value":2154},{"type":17,"tag":126,"props":2491,"children":2492},{"class":310,"line":2157},[2493,2497],{"type":17,"tag":126,"props":2494,"children":2495},{"style":343},[2496],{"type":23,"value":752},{"type":17,"tag":126,"props":2498,"children":2499},{"style":325},[2500],{"type":23,"value":2167},{"type":17,"tag":26,"props":2502,"children":2503},{},[2504,2506,2511,2513,2518],{"type":23,"value":2505},"Here, the ",{"type":17,"tag":146,"props":2507,"children":2509},{"className":2508},[],[2510],{"type":23,"value":1736},{"type":23,"value":2512}," parameter explicitly specifies the column names, and each sublist in the list corresponds to a row in the ",{"type":17,"tag":146,"props":2514,"children":2516},{"className":2515},[],[2517],{"type":23,"value":87},{"type":23,"value":96},{"type":17,"tag":26,"props":2520,"children":2521},{},[2522],{"type":23,"value":2523},"Based on the flexibility of pandas, we can also create a DataFrame using a NumPy array, which is suitable for large numerical datasets:",{"type":17,"tag":2251,"props":2525,"children":2526},{":editable":2253,":show-in-col":2253,"max-height":2254},[2527],{"type":17,"tag":299,"props":2528,"children":2530},{"code":2529,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\nimport numpy as np\n\n# Create DataFrame using a NumPy array\ndata = np.array([[85, 28], [92, 22], [78, 25]])\n\ndf = pd.DataFrame(data, columns=[\"Score\", \"Age\"], index=[\"Tom\", \"Jerry\", \"Spike\"])\n\n# Output DataFrame\nprint(df)\n",[2531],{"type":17,"tag":146,"props":2532,"children":2533},{"__ignoreMap":7},[2534,2553,2574,2581,2589,2655,2662,2741,2748,2755],{"type":17,"tag":126,"props":2535,"children":2536},{"class":310,"line":311},[2537,2541,2545,2549],{"type":17,"tag":126,"props":2538,"children":2539},{"style":337},[2540],{"type":23,"value":638},{"type":17,"tag":126,"props":2542,"children":2543},{"style":325},[2544],{"type":23,"value":643},{"type":17,"tag":126,"props":2546,"children":2547},{"style":337},[2548],{"type":23,"value":648},{"type":17,"tag":126,"props":2550,"children":2551},{"style":325},[2552],{"type":23,"value":653},{"type":17,"tag":126,"props":2554,"children":2555},{"class":310,"line":321},[2556,2560,2565,2569],{"type":17,"tag":126,"props":2557,"children":2558},{"style":337},[2559],{"type":23,"value":638},{"type":17,"tag":126,"props":2561,"children":2562},{"style":325},[2563],{"type":23,"value":2564}," numpy ",{"type":17,"tag":126,"props":2566,"children":2567},{"style":337},[2568],{"type":23,"value":648},{"type":17,"tag":126,"props":2570,"children":2571},{"style":325},[2572],{"type":23,"value":2573}," np\n",{"type":17,"tag":126,"props":2575,"children":2576},{"class":310,"line":665},[2577],{"type":17,"tag":126,"props":2578,"children":2579},{"emptyLinePlaceholder":659},[2580],{"type":23,"value":662},{"type":17,"tag":126,"props":2582,"children":2583},{"class":310,"line":674},[2584],{"type":17,"tag":126,"props":2585,"children":2586},{"style":315},[2587],{"type":23,"value":2588},"# Create DataFrame using a NumPy array\n",{"type":17,"tag":126,"props":2590,"children":2591},{"class":310,"line":729},[2592,2596,2600,2605,2609,2613,2617,2622,2626,2630,2634,2638,2642,2646,2650],{"type":17,"tag":126,"props":2593,"children":2594},{"style":325},[2595],{"type":23,"value":680},{"type":17,"tag":126,"props":2597,"children":2598},{"style":337},[2599],{"type":23,"value":340},{"type":17,"tag":126,"props":2601,"children":2602},{"style":325},[2603],{"type":23,"value":2604}," np.array([[",{"type":17,"tag":126,"props":2606,"children":2607},{"style":343},[2608],{"type":23,"value":2082},{"type":17,"tag":126,"props":2610,"children":2611},{"style":325},[2612],{"type":23,"value":351},{"type":17,"tag":126,"props":2614,"children":2615},{"style":343},[2616],{"type":23,"value":2043},{"type":17,"tag":126,"props":2618,"children":2619},{"style":325},[2620],{"type":23,"value":2621},"], [",{"type":17,"tag":126,"props":2623,"children":2624},{"style":343},[2625],{"type":23,"value":2091},{"type":17,"tag":126,"props":2627,"children":2628},{"style":325},[2629],{"type":23,"value":351},{"type":17,"tag":126,"props":2631,"children":2632},{"style":343},[2633],{"type":23,"value":2052},{"type":17,"tag":126,"props":2635,"children":2636},{"style":325},[2637],{"type":23,"value":2621},{"type":17,"tag":126,"props":2639,"children":2640},{"style":343},[2641],{"type":23,"value":2100},{"type":17,"tag":126,"props":2643,"children":2644},{"style":325},[2645],{"type":23,"value":351},{"type":17,"tag":126,"props":2647,"children":2648},{"style":343},[2649],{"type":23,"value":2061},{"type":17,"tag":126,"props":2651,"children":2652},{"style":325},[2653],{"type":23,"value":2654},"]])\n",{"type":17,"tag":126,"props":2656,"children":2657},{"class":310,"line":737},[2658],{"type":17,"tag":126,"props":2659,"children":2660},{"emptyLinePlaceholder":659},[2661],{"type":23,"value":662},{"type":17,"tag":126,"props":2663,"children":2664},{"class":310,"line":746},[2665,2669,2673,2677,2681,2685,2689,2693,2697,2701,2705,2709,2713,2717,2721,2725,2729,2733,2737],{"type":17,"tag":126,"props":2666,"children":2667},{"style":325},[2668],{"type":23,"value":2128},{"type":17,"tag":126,"props":2670,"children":2671},{"style":337},[2672],{"type":23,"value":340},{"type":17,"tag":126,"props":2674,"children":2675},{"style":325},[2676],{"type":23,"value":2436},{"type":17,"tag":126,"props":2678,"children":2679},{"style":331},[2680],{"type":23,"value":1736},{"type":17,"tag":126,"props":2682,"children":2683},{"style":337},[2684],{"type":23,"value":340},{"type":17,"tag":126,"props":2686,"children":2687},{"style":325},[2688],{"type":23,"value":971},{"type":17,"tag":126,"props":2690,"children":2691},{"style":974},[2692],{"type":23,"value":2471},{"type":17,"tag":126,"props":2694,"children":2695},{"style":325},[2696],{"type":23,"value":351},{"type":17,"tag":126,"props":2698,"children":2699},{"style":974},[2700],{"type":23,"value":2462},{"type":17,"tag":126,"props":2702,"children":2703},{"style":325},[2704],{"type":23,"value":958},{"type":17,"tag":126,"props":2706,"children":2707},{"style":331},[2708],{"type":23,"value":356},{"type":17,"tag":126,"props":2710,"children":2711},{"style":337},[2712],{"type":23,"value":340},{"type":17,"tag":126,"props":2714,"children":2715},{"style":325},[2716],{"type":23,"value":971},{"type":17,"tag":126,"props":2718,"children":2719},{"style":974},[2720],{"type":23,"value":2003},{"type":17,"tag":126,"props":2722,"children":2723},{"style":325},[2724],{"type":23,"value":351},{"type":17,"tag":126,"props":2726,"children":2727},{"style":974},[2728],{"type":23,"value":2012},{"type":17,"tag":126,"props":2730,"children":2731},{"style":325},[2732],{"type":23,"value":351},{"type":17,"tag":126,"props":2734,"children":2735},{"style":974},[2736],{"type":23,"value":2021},{"type":17,"tag":126,"props":2738,"children":2739},{"style":325},[2740],{"type":23,"value":726},{"type":17,"tag":126,"props":2742,"children":2743},{"class":310,"line":1337},[2744],{"type":17,"tag":126,"props":2745,"children":2746},{"emptyLinePlaceholder":659},[2747],{"type":23,"value":662},{"type":17,"tag":126,"props":2749,"children":2750},{"class":310,"line":11},[2751],{"type":17,"tag":126,"props":2752,"children":2753},{"style":315},[2754],{"type":23,"value":2154},{"type":17,"tag":126,"props":2756,"children":2757},{"class":310,"line":2122},[2758,2762],{"type":17,"tag":126,"props":2759,"children":2760},{"style":343},[2761],{"type":23,"value":752},{"type":17,"tag":126,"props":2763,"children":2764},{"style":325},[2765],{"type":23,"value":2167},{"type":17,"tag":26,"props":2767,"children":2768},{},[2769,2771,2776,2778,2783],{"type":23,"value":2770},"In this example, we use the ",{"type":17,"tag":146,"props":2772,"children":2774},{"className":2773},[],[2775],{"type":23,"value":356},{"type":23,"value":2777}," parameter to specify custom labels for the rows of the ",{"type":17,"tag":146,"props":2779,"children":2781},{"className":2780},[],[2782],{"type":23,"value":87},{"type":23,"value":96},{"type":17,"tag":26,"props":2785,"children":2786},{},[2787],{"type":23,"value":2788},"Finally, if the data is stored in the form of a list of dictionaries (such as JSON), we can directly pass the list of dictionaries:",{"type":17,"tag":2251,"props":2790,"children":2791},{":editable":2253,":show-in-col":2253,"max-height":2254},[2792],{"type":17,"tag":299,"props":2793,"children":2795},{"code":2794,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create DataFrame using a list of dictionaries\ndata = [\n    {\"Name\": \"Tom\", \"Age\": 28, \"Score\": 85},\n    {\"Name\": \"Jerry\", \"Age\": 22, \"Score\": 92},\n    {\"Name\": \"Spike\", \"Age\": 25, \"Score\": 78}\n]\n\ndf = pd.DataFrame(data)\n\n# Output DataFrame\nprint(df)\n",[2796],{"type":17,"tag":146,"props":2797,"children":2798},{"__ignoreMap":7},[2799,2818,2825,2833,2848,2905,2960,3015,3022,3029,3044,3051,3058],{"type":17,"tag":126,"props":2800,"children":2801},{"class":310,"line":311},[2802,2806,2810,2814],{"type":17,"tag":126,"props":2803,"children":2804},{"style":337},[2805],{"type":23,"value":638},{"type":17,"tag":126,"props":2807,"children":2808},{"style":325},[2809],{"type":23,"value":643},{"type":17,"tag":126,"props":2811,"children":2812},{"style":337},[2813],{"type":23,"value":648},{"type":17,"tag":126,"props":2815,"children":2816},{"style":325},[2817],{"type":23,"value":653},{"type":17,"tag":126,"props":2819,"children":2820},{"class":310,"line":321},[2821],{"type":17,"tag":126,"props":2822,"children":2823},{"emptyLinePlaceholder":659},[2824],{"type":23,"value":662},{"type":17,"tag":126,"props":2826,"children":2827},{"class":310,"line":665},[2828],{"type":17,"tag":126,"props":2829,"children":2830},{"style":315},[2831],{"type":23,"value":2832},"# Create DataFrame using a list of dictionaries\n",{"type":17,"tag":126,"props":2834,"children":2835},{"class":310,"line":674},[2836,2840,2844],{"type":17,"tag":126,"props":2837,"children":2838},{"style":325},[2839],{"type":23,"value":680},{"type":17,"tag":126,"props":2841,"children":2842},{"style":337},[2843],{"type":23,"value":340},{"type":17,"tag":126,"props":2845,"children":2846},{"style":325},[2847],{"type":23,"value":2312},{"type":17,"tag":126,"props":2849,"children":2850},{"class":310,"line":729},[2851,2856,2860,2864,2868,2872,2876,2880,2884,2888,2892,2896,2900],{"type":17,"tag":126,"props":2852,"children":2853},{"style":325},[2854],{"type":23,"value":2855},"    {",{"type":17,"tag":126,"props":2857,"children":2858},{"style":974},[2859],{"type":23,"value":2453},{"type":17,"tag":126,"props":2861,"children":2862},{"style":325},[2863],{"type":23,"value":1242},{"type":17,"tag":126,"props":2865,"children":2866},{"style":974},[2867],{"type":23,"value":2003},{"type":17,"tag":126,"props":2869,"children":2870},{"style":325},[2871],{"type":23,"value":351},{"type":17,"tag":126,"props":2873,"children":2874},{"style":974},[2875],{"type":23,"value":2462},{"type":17,"tag":126,"props":2877,"children":2878},{"style":325},[2879],{"type":23,"value":1242},{"type":17,"tag":126,"props":2881,"children":2882},{"style":343},[2883],{"type":23,"value":2043},{"type":17,"tag":126,"props":2885,"children":2886},{"style":325},[2887],{"type":23,"value":351},{"type":17,"tag":126,"props":2889,"children":2890},{"style":974},[2891],{"type":23,"value":2471},{"type":17,"tag":126,"props":2893,"children":2894},{"style":325},[2895],{"type":23,"value":1242},{"type":17,"tag":126,"props":2897,"children":2898},{"style":343},[2899],{"type":23,"value":2082},{"type":17,"tag":126,"props":2901,"children":2902},{"style":325},[2903],{"type":23,"value":2904},"},\n",{"type":17,"tag":126,"props":2906,"children":2907},{"class":310,"line":737},[2908,2912,2916,2920,2924,2928,2932,2936,2940,2944,2948,2952,2956],{"type":17,"tag":126,"props":2909,"children":2910},{"style":325},[2911],{"type":23,"value":2855},{"type":17,"tag":126,"props":2913,"children":2914},{"style":974},[2915],{"type":23,"value":2453},{"type":17,"tag":126,"props":2917,"children":2918},{"style":325},[2919],{"type":23,"value":1242},{"type":17,"tag":126,"props":2921,"children":2922},{"style":974},[2923],{"type":23,"value":2012},{"type":17,"tag":126,"props":2925,"children":2926},{"style":325},[2927],{"type":23,"value":351},{"type":17,"tag":126,"props":2929,"children":2930},{"style":974},[2931],{"type":23,"value":2462},{"type":17,"tag":126,"props":2933,"children":2934},{"style":325},[2935],{"type":23,"value":1242},{"type":17,"tag":126,"props":2937,"children":2938},{"style":343},[2939],{"type":23,"value":2052},{"type":17,"tag":126,"props":2941,"children":2942},{"style":325},[2943],{"type":23,"value":351},{"type":17,"tag":126,"props":2945,"children":2946},{"style":974},[2947],{"type":23,"value":2471},{"type":17,"tag":126,"props":2949,"children":2950},{"style":325},[2951],{"type":23,"value":1242},{"type":17,"tag":126,"props":2953,"children":2954},{"style":343},[2955],{"type":23,"value":2091},{"type":17,"tag":126,"props":2957,"children":2958},{"style":325},[2959],{"type":23,"value":2904},{"type":17,"tag":126,"props":2961,"children":2962},{"class":310,"line":746},[2963,2967,2971,2975,2979,2983,2987,2991,2995,2999,3003,3007,3011],{"type":17,"tag":126,"props":2964,"children":2965},{"style":325},[2966],{"type":23,"value":2855},{"type":17,"tag":126,"props":2968,"children":2969},{"style":974},[2970],{"type":23,"value":2453},{"type":17,"tag":126,"props":2972,"children":2973},{"style":325},[2974],{"type":23,"value":1242},{"type":17,"tag":126,"props":2976,"children":2977},{"style":974},[2978],{"type":23,"value":2021},{"type":17,"tag":126,"props":2980,"children":2981},{"style":325},[2982],{"type":23,"value":351},{"type":17,"tag":126,"props":2984,"children":2985},{"style":974},[2986],{"type":23,"value":2462},{"type":17,"tag":126,"props":2988,"children":2989},{"style":325},[2990],{"type":23,"value":1242},{"type":17,"tag":126,"props":2992,"children":2993},{"style":343},[2994],{"type":23,"value":2061},{"type":17,"tag":126,"props":2996,"children":2997},{"style":325},[2998],{"type":23,"value":351},{"type":17,"tag":126,"props":3000,"children":3001},{"style":974},[3002],{"type":23,"value":2471},{"type":17,"tag":126,"props":3004,"children":3005},{"style":325},[3006],{"type":23,"value":1242},{"type":17,"tag":126,"props":3008,"children":3009},{"style":343},[3010],{"type":23,"value":2100},{"type":17,"tag":126,"props":3012,"children":3013},{"style":325},[3014],{"type":23,"value":1303},{"type":17,"tag":126,"props":3016,"children":3017},{"class":310,"line":1337},[3018],{"type":17,"tag":126,"props":3019,"children":3020},{"style":325},[3021],{"type":23,"value":2105},{"type":17,"tag":126,"props":3023,"children":3024},{"class":310,"line":11},[3025],{"type":17,"tag":126,"props":3026,"children":3027},{"emptyLinePlaceholder":659},[3028],{"type":23,"value":662},{"type":17,"tag":126,"props":3030,"children":3031},{"class":310,"line":2122},[3032,3036,3040],{"type":17,"tag":126,"props":3033,"children":3034},{"style":325},[3035],{"type":23,"value":2128},{"type":17,"tag":126,"props":3037,"children":3038},{"style":337},[3039],{"type":23,"value":340},{"type":17,"tag":126,"props":3041,"children":3042},{"style":325},[3043],{"type":23,"value":2137},{"type":17,"tag":126,"props":3045,"children":3046},{"class":310,"line":2140},[3047],{"type":17,"tag":126,"props":3048,"children":3049},{"emptyLinePlaceholder":659},[3050],{"type":23,"value":662},{"type":17,"tag":126,"props":3052,"children":3053},{"class":310,"line":2148},[3054],{"type":17,"tag":126,"props":3055,"children":3056},{"style":315},[3057],{"type":23,"value":2154},{"type":17,"tag":126,"props":3059,"children":3060},{"class":310,"line":2157},[3061,3065],{"type":17,"tag":126,"props":3062,"children":3063},{"style":343},[3064],{"type":23,"value":752},{"type":17,"tag":126,"props":3066,"children":3067},{"style":325},[3068],{"type":23,"value":2167},{"type":17,"tag":26,"props":3070,"children":3071},{},[3072,3074,3079],{"type":23,"value":3073},"For ",{"type":17,"tag":146,"props":3075,"children":3077},{"className":3076},[],[3078],{"type":23,"value":87},{"type":23,"value":3080},", the following common operations are available:",{"type":17,"tag":3082,"props":3083,"children":3084},"ol",{},[3085],{"type":17,"tag":51,"props":3086,"children":3087},{},[3088],{"type":23,"value":3089},"Accessing columns: You can access specific columns by column name.",{"type":17,"tag":2251,"props":3091,"children":3092},{":editable":2253,":show-in-col":2253,"max-height":2254},[3093],{"type":17,"tag":299,"props":3094,"children":3096},{"code":3095,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create DataFrame\ndata = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, 22, 25],\n    \"Score\": [85, 92, 78]\n}\ndf = pd.DataFrame(data)\n\n# Access the Name column\nprint(df[\"Name\"])\n",[3097],{"type":17,"tag":146,"props":3098,"children":3099},{"__ignoreMap":7},[3100,3119,3126,3134,3149,3184,3219,3254,3261,3276,3283,3291],{"type":17,"tag":126,"props":3101,"children":3102},{"class":310,"line":311},[3103,3107,3111,3115],{"type":17,"tag":126,"props":3104,"children":3105},{"style":337},[3106],{"type":23,"value":638},{"type":17,"tag":126,"props":3108,"children":3109},{"style":325},[3110],{"type":23,"value":643},{"type":17,"tag":126,"props":3112,"children":3113},{"style":337},[3114],{"type":23,"value":648},{"type":17,"tag":126,"props":3116,"children":3117},{"style":325},[3118],{"type":23,"value":653},{"type":17,"tag":126,"props":3120,"children":3121},{"class":310,"line":321},[3122],{"type":17,"tag":126,"props":3123,"children":3124},{"emptyLinePlaceholder":659},[3125],{"type":23,"value":662},{"type":17,"tag":126,"props":3127,"children":3128},{"class":310,"line":665},[3129],{"type":17,"tag":126,"props":3130,"children":3131},{"style":315},[3132],{"type":23,"value":3133},"# Create DataFrame\n",{"type":17,"tag":126,"props":3135,"children":3136},{"class":310,"line":674},[3137,3141,3145],{"type":17,"tag":126,"props":3138,"children":3139},{"style":325},[3140],{"type":23,"value":680},{"type":17,"tag":126,"props":3142,"children":3143},{"style":337},[3144],{"type":23,"value":340},{"type":17,"tag":126,"props":3146,"children":3147},{"style":325},[3148],{"type":23,"value":1985},{"type":17,"tag":126,"props":3150,"children":3151},{"class":310,"line":729},[3152,3156,3160,3164,3168,3172,3176,3180],{"type":17,"tag":126,"props":3153,"children":3154},{"style":974},[3155],{"type":23,"value":1993},{"type":17,"tag":126,"props":3157,"children":3158},{"style":325},[3159],{"type":23,"value":1998},{"type":17,"tag":126,"props":3161,"children":3162},{"style":974},[3163],{"type":23,"value":2003},{"type":17,"tag":126,"props":3165,"children":3166},{"style":325},[3167],{"type":23,"value":351},{"type":17,"tag":126,"props":3169,"children":3170},{"style":974},[3171],{"type":23,"value":2012},{"type":17,"tag":126,"props":3173,"children":3174},{"style":325},[3175],{"type":23,"value":351},{"type":17,"tag":126,"props":3177,"children":3178},{"style":974},[3179],{"type":23,"value":2021},{"type":17,"tag":126,"props":3181,"children":3182},{"style":325},[3183],{"type":23,"value":2026},{"type":17,"tag":126,"props":3185,"children":3186},{"class":310,"line":737},[3187,3191,3195,3199,3203,3207,3211,3215],{"type":17,"tag":126,"props":3188,"children":3189},{"style":974},[3190],{"type":23,"value":2034},{"type":17,"tag":126,"props":3192,"children":3193},{"style":325},[3194],{"type":23,"value":1998},{"type":17,"tag":126,"props":3196,"children":3197},{"style":343},[3198],{"type":23,"value":2043},{"type":17,"tag":126,"props":3200,"children":3201},{"style":325},[3202],{"type":23,"value":351},{"type":17,"tag":126,"props":3204,"children":3205},{"style":343},[3206],{"type":23,"value":2052},{"type":17,"tag":126,"props":3208,"children":3209},{"style":325},[3210],{"type":23,"value":351},{"type":17,"tag":126,"props":3212,"children":3213},{"style":343},[3214],{"type":23,"value":2061},{"type":17,"tag":126,"props":3216,"children":3217},{"style":325},[3218],{"type":23,"value":2026},{"type":17,"tag":126,"props":3220,"children":3221},{"class":310,"line":746},[3222,3226,3230,3234,3238,3242,3246,3250],{"type":17,"tag":126,"props":3223,"children":3224},{"style":974},[3225],{"type":23,"value":2073},{"type":17,"tag":126,"props":3227,"children":3228},{"style":325},[3229],{"type":23,"value":1998},{"type":17,"tag":126,"props":3231,"children":3232},{"style":343},[3233],{"type":23,"value":2082},{"type":17,"tag":126,"props":3235,"children":3236},{"style":325},[3237],{"type":23,"value":351},{"type":17,"tag":126,"props":3239,"children":3240},{"style":343},[3241],{"type":23,"value":2091},{"type":17,"tag":126,"props":3243,"children":3244},{"style":325},[3245],{"type":23,"value":351},{"type":17,"tag":126,"props":3247,"children":3248},{"style":343},[3249],{"type":23,"value":2100},{"type":17,"tag":126,"props":3251,"children":3252},{"style":325},[3253],{"type":23,"value":2105},{"type":17,"tag":126,"props":3255,"children":3256},{"class":310,"line":1337},[3257],{"type":17,"tag":126,"props":3258,"children":3259},{"style":325},[3260],{"type":23,"value":1303},{"type":17,"tag":126,"props":3262,"children":3263},{"class":310,"line":11},[3264,3268,3272],{"type":17,"tag":126,"props":3265,"children":3266},{"style":325},[3267],{"type":23,"value":2128},{"type":17,"tag":126,"props":3269,"children":3270},{"style":337},[3271],{"type":23,"value":340},{"type":17,"tag":126,"props":3273,"children":3274},{"style":325},[3275],{"type":23,"value":2137},{"type":17,"tag":126,"props":3277,"children":3278},{"class":310,"line":2122},[3279],{"type":17,"tag":126,"props":3280,"children":3281},{"emptyLinePlaceholder":659},[3282],{"type":23,"value":662},{"type":17,"tag":126,"props":3284,"children":3285},{"class":310,"line":2140},[3286],{"type":17,"tag":126,"props":3287,"children":3288},{"style":315},[3289],{"type":23,"value":3290},"# Access the Name column\n",{"type":17,"tag":126,"props":3292,"children":3293},{"class":310,"line":2148},[3294,3298,3303,3307],{"type":17,"tag":126,"props":3295,"children":3296},{"style":343},[3297],{"type":23,"value":752},{"type":17,"tag":126,"props":3299,"children":3300},{"style":325},[3301],{"type":23,"value":3302},"(df[",{"type":17,"tag":126,"props":3304,"children":3305},{"style":974},[3306],{"type":23,"value":2453},{"type":17,"tag":126,"props":3308,"children":3309},{"style":325},[3310],{"type":23,"value":726},{"type":17,"tag":3082,"props":3312,"children":3313},{"start":321},[3314],{"type":17,"tag":51,"props":3315,"children":3316},{},[3317],{"type":23,"value":3318},"Adding new columns: You can easily add new columns using assignment statements.",{"type":17,"tag":2251,"props":3320,"children":3321},{":editable":2253,":show-in-col":2253,"max-height":2254},[3322],{"type":17,"tag":299,"props":3323,"children":3325},{"code":3324,"language":302,"meta":7,"className":303,"style":7},"# Add a new column City\ndf[\"City\"] = [\"NY\", \"LA\", \"SF\"]\n\n# Output DataFrame\nprint(df)\n",[3326],{"type":17,"tag":146,"props":3327,"children":3328},{"__ignoreMap":7},[3329,3337,3391,3398,3405],{"type":17,"tag":126,"props":3330,"children":3331},{"class":310,"line":311},[3332],{"type":17,"tag":126,"props":3333,"children":3334},{"style":315},[3335],{"type":23,"value":3336},"# Add a new column City\n",{"type":17,"tag":126,"props":3338,"children":3339},{"class":310,"line":321},[3340,3345,3350,3355,3359,3364,3369,3373,3378,3382,3387],{"type":17,"tag":126,"props":3341,"children":3342},{"style":325},[3343],{"type":23,"value":3344},"df[",{"type":17,"tag":126,"props":3346,"children":3347},{"style":974},[3348],{"type":23,"value":3349},"\"City\"",{"type":17,"tag":126,"props":3351,"children":3352},{"style":325},[3353],{"type":23,"value":3354},"] ",{"type":17,"tag":126,"props":3356,"children":3357},{"style":337},[3358],{"type":23,"value":340},{"type":17,"tag":126,"props":3360,"children":3361},{"style":325},[3362],{"type":23,"value":3363}," [",{"type":17,"tag":126,"props":3365,"children":3366},{"style":974},[3367],{"type":23,"value":3368},"\"NY\"",{"type":17,"tag":126,"props":3370,"children":3371},{"style":325},[3372],{"type":23,"value":351},{"type":17,"tag":126,"props":3374,"children":3375},{"style":974},[3376],{"type":23,"value":3377},"\"LA\"",{"type":17,"tag":126,"props":3379,"children":3380},{"style":325},[3381],{"type":23,"value":351},{"type":17,"tag":126,"props":3383,"children":3384},{"style":974},[3385],{"type":23,"value":3386},"\"SF\"",{"type":17,"tag":126,"props":3388,"children":3389},{"style":325},[3390],{"type":23,"value":2105},{"type":17,"tag":126,"props":3392,"children":3393},{"class":310,"line":665},[3394],{"type":17,"tag":126,"props":3395,"children":3396},{"emptyLinePlaceholder":659},[3397],{"type":23,"value":662},{"type":17,"tag":126,"props":3399,"children":3400},{"class":310,"line":674},[3401],{"type":17,"tag":126,"props":3402,"children":3403},{"style":315},[3404],{"type":23,"value":2154},{"type":17,"tag":126,"props":3406,"children":3407},{"class":310,"line":729},[3408,3412],{"type":17,"tag":126,"props":3409,"children":3410},{"style":343},[3411],{"type":23,"value":752},{"type":17,"tag":126,"props":3413,"children":3414},{"style":325},[3415],{"type":23,"value":2167},{"type":17,"tag":3082,"props":3417,"children":3418},{"start":665},[3419],{"type":17,"tag":51,"props":3420,"children":3421},{},[3422,3424,3430],{"type":23,"value":3423},"Deleting columns: Use the ",{"type":17,"tag":146,"props":3425,"children":3427},{"className":3426},[],[3428],{"type":23,"value":3429},"drop()",{"type":23,"value":3431}," method to delete columns.",{"type":17,"tag":2251,"props":3433,"children":3434},{":editable":2253,":show-in-col":2253,"max-height":2254},[3435],{"type":17,"tag":299,"props":3436,"children":3438},{"code":3437,"language":302,"meta":7,"className":303,"style":7},"# Delete the Age column\ndf_dropped = df.drop(\"Age\", axis=1)\n\n# Output the DataFrame after deletion\nprint(df_dropped)\n",[3439],{"type":17,"tag":146,"props":3440,"children":3441},{"__ignoreMap":7},[3442,3450,3492,3499,3507],{"type":17,"tag":126,"props":3443,"children":3444},{"class":310,"line":311},[3445],{"type":17,"tag":126,"props":3446,"children":3447},{"style":315},[3448],{"type":23,"value":3449},"# Delete the Age column\n",{"type":17,"tag":126,"props":3451,"children":3452},{"class":310,"line":321},[3453,3458,3462,3467,3471,3475,3480,3484,3488],{"type":17,"tag":126,"props":3454,"children":3455},{"style":325},[3456],{"type":23,"value":3457},"df_dropped ",{"type":17,"tag":126,"props":3459,"children":3460},{"style":337},[3461],{"type":23,"value":340},{"type":17,"tag":126,"props":3463,"children":3464},{"style":325},[3465],{"type":23,"value":3466}," df.drop(",{"type":17,"tag":126,"props":3468,"children":3469},{"style":974},[3470],{"type":23,"value":2462},{"type":17,"tag":126,"props":3472,"children":3473},{"style":325},[3474],{"type":23,"value":351},{"type":17,"tag":126,"props":3476,"children":3477},{"style":331},[3478],{"type":23,"value":3479},"axis",{"type":17,"tag":126,"props":3481,"children":3482},{"style":337},[3483],{"type":23,"value":340},{"type":17,"tag":126,"props":3485,"children":3486},{"style":343},[3487],{"type":23,"value":847},{"type":17,"tag":126,"props":3489,"children":3490},{"style":325},[3491],{"type":23,"value":438},{"type":17,"tag":126,"props":3493,"children":3494},{"class":310,"line":665},[3495],{"type":17,"tag":126,"props":3496,"children":3497},{"emptyLinePlaceholder":659},[3498],{"type":23,"value":662},{"type":17,"tag":126,"props":3500,"children":3501},{"class":310,"line":674},[3502],{"type":17,"tag":126,"props":3503,"children":3504},{"style":315},[3505],{"type":23,"value":3506},"# Output the DataFrame after deletion\n",{"type":17,"tag":126,"props":3508,"children":3509},{"class":310,"line":729},[3510,3514],{"type":17,"tag":126,"props":3511,"children":3512},{"style":343},[3513],{"type":23,"value":752},{"type":17,"tag":126,"props":3515,"children":3516},{"style":325},[3517],{"type":23,"value":3518},"(df_dropped)\n",{"type":17,"tag":3082,"props":3520,"children":3521},{"start":674},[3522],{"type":17,"tag":51,"props":3523,"children":3524},{},[3525],{"type":23,"value":3526},"Filtering data: You can filter data using conditional expressions.",{"type":17,"tag":2251,"props":3528,"children":3529},{":editable":2253,":show-in-col":2253,"max-height":2254},[3530],{"type":17,"tag":299,"props":3531,"children":3533},{"code":3532,"language":302,"meta":7,"className":303,"style":7},"# Filter data with Score greater than 80\nfiltered_df = df[df[\"Score\"] > 80]\n\n# Output the filtered results\nprint(filtered_df)\n",[3534],{"type":17,"tag":146,"props":3535,"children":3536},{"__ignoreMap":7},[3537,3545,3584,3591,3599],{"type":17,"tag":126,"props":3538,"children":3539},{"class":310,"line":311},[3540],{"type":17,"tag":126,"props":3541,"children":3542},{"style":315},[3543],{"type":23,"value":3544},"# Filter data with Score greater than 80\n",{"type":17,"tag":126,"props":3546,"children":3547},{"class":310,"line":321},[3548,3553,3557,3562,3566,3570,3575,3580],{"type":17,"tag":126,"props":3549,"children":3550},{"style":325},[3551],{"type":23,"value":3552},"filtered_df ",{"type":17,"tag":126,"props":3554,"children":3555},{"style":337},[3556],{"type":23,"value":340},{"type":17,"tag":126,"props":3558,"children":3559},{"style":325},[3560],{"type":23,"value":3561}," df[df[",{"type":17,"tag":126,"props":3563,"children":3564},{"style":974},[3565],{"type":23,"value":2471},{"type":17,"tag":126,"props":3567,"children":3568},{"style":325},[3569],{"type":23,"value":3354},{"type":17,"tag":126,"props":3571,"children":3572},{"style":337},[3573],{"type":23,"value":3574},">",{"type":17,"tag":126,"props":3576,"children":3577},{"style":343},[3578],{"type":23,"value":3579}," 80",{"type":17,"tag":126,"props":3581,"children":3582},{"style":325},[3583],{"type":23,"value":2105},{"type":17,"tag":126,"props":3585,"children":3586},{"class":310,"line":665},[3587],{"type":17,"tag":126,"props":3588,"children":3589},{"emptyLinePlaceholder":659},[3590],{"type":23,"value":662},{"type":17,"tag":126,"props":3592,"children":3593},{"class":310,"line":674},[3594],{"type":17,"tag":126,"props":3595,"children":3596},{"style":315},[3597],{"type":23,"value":3598},"# Output the filtered results\n",{"type":17,"tag":126,"props":3600,"children":3601},{"class":310,"line":729},[3602,3606],{"type":17,"tag":126,"props":3603,"children":3604},{"style":343},[3605],{"type":23,"value":752},{"type":17,"tag":126,"props":3607,"children":3608},{"style":325},[3609],{"type":23,"value":3610},"(filtered_df)\n",{"type":17,"tag":3082,"props":3612,"children":3613},{"start":729},[3614],{"type":17,"tag":51,"props":3615,"children":3616},{},[3617,3619,3624],{"type":23,"value":3618},"Calculating statistical information: ",{"type":17,"tag":146,"props":3620,"children":3622},{"className":3621},[],[3623],{"type":23,"value":87},{"type":23,"value":3625}," provides rich statistical methods. The following example shows how to calculate the mean and descriptive statistics:",{"type":17,"tag":2251,"props":3627,"children":3628},{":editable":2253,":show-in-col":2253,"max-height":2254},[3629],{"type":17,"tag":299,"props":3630,"children":3632},{"code":3631,"language":302,"meta":7,"className":303,"style":7},"# Calculate the mean\nmean_score = df[\"Score\"].mean()\nprint(f\"Average Score: {mean_score}\")\n\n# Output descriptive statistics of the DataFrame\nprint(df.describe())\n",[3633],{"type":17,"tag":146,"props":3634,"children":3635},{"__ignoreMap":7},[3636,3644,3670,3716,3723,3731],{"type":17,"tag":126,"props":3637,"children":3638},{"class":310,"line":311},[3639],{"type":17,"tag":126,"props":3640,"children":3641},{"style":315},[3642],{"type":23,"value":3643},"# Calculate the mean\n",{"type":17,"tag":126,"props":3645,"children":3646},{"class":310,"line":321},[3647,3652,3656,3661,3665],{"type":17,"tag":126,"props":3648,"children":3649},{"style":325},[3650],{"type":23,"value":3651},"mean_score ",{"type":17,"tag":126,"props":3653,"children":3654},{"style":337},[3655],{"type":23,"value":340},{"type":17,"tag":126,"props":3657,"children":3658},{"style":325},[3659],{"type":23,"value":3660}," df[",{"type":17,"tag":126,"props":3662,"children":3663},{"style":974},[3664],{"type":23,"value":2471},{"type":17,"tag":126,"props":3666,"children":3667},{"style":325},[3668],{"type":23,"value":3669},"].mean()\n",{"type":17,"tag":126,"props":3671,"children":3672},{"class":310,"line":665},[3673,3677,3682,3687,3692,3697,3702,3707,3712],{"type":17,"tag":126,"props":3674,"children":3675},{"style":343},[3676],{"type":23,"value":752},{"type":17,"tag":126,"props":3678,"children":3679},{"style":325},[3680],{"type":23,"value":3681},"(",{"type":17,"tag":126,"props":3683,"children":3684},{"style":337},[3685],{"type":23,"value":3686},"f",{"type":17,"tag":126,"props":3688,"children":3689},{"style":974},[3690],{"type":23,"value":3691},"\"Average Score: ",{"type":17,"tag":126,"props":3693,"children":3694},{"style":343},[3695],{"type":23,"value":3696},"{",{"type":17,"tag":126,"props":3698,"children":3699},{"style":325},[3700],{"type":23,"value":3701},"mean_score",{"type":17,"tag":126,"props":3703,"children":3704},{"style":343},[3705],{"type":23,"value":3706},"}",{"type":17,"tag":126,"props":3708,"children":3709},{"style":974},[3710],{"type":23,"value":3711},"\"",{"type":17,"tag":126,"props":3713,"children":3714},{"style":325},[3715],{"type":23,"value":438},{"type":17,"tag":126,"props":3717,"children":3718},{"class":310,"line":674},[3719],{"type":17,"tag":126,"props":3720,"children":3721},{"emptyLinePlaceholder":659},[3722],{"type":23,"value":662},{"type":17,"tag":126,"props":3724,"children":3725},{"class":310,"line":729},[3726],{"type":17,"tag":126,"props":3727,"children":3728},{"style":315},[3729],{"type":23,"value":3730},"# Output descriptive statistics of the DataFrame\n",{"type":17,"tag":126,"props":3732,"children":3733},{"class":310,"line":737},[3734,3738],{"type":17,"tag":126,"props":3735,"children":3736},{"style":343},[3737],{"type":23,"value":752},{"type":17,"tag":126,"props":3739,"children":3740},{"style":325},[3741],{"type":23,"value":3742},"(df.describe())\n",{"type":17,"tag":3082,"props":3744,"children":3745},{"start":737},[3746],{"type":17,"tag":51,"props":3747,"children":3748},{},[3749,3751,3757,3759,3765],{"type":23,"value":3750},"Handling missing values: You can check for missing values using ",{"type":17,"tag":146,"props":3752,"children":3754},{"className":3753},[],[3755],{"type":23,"value":3756},"isna()",{"type":23,"value":3758}," and fill missing values using ",{"type":17,"tag":146,"props":3760,"children":3762},{"className":3761},[],[3763],{"type":23,"value":3764},"fillna()",{"type":23,"value":3766},". The following example shows how to handle missing data:",{"type":17,"tag":2251,"props":3768,"children":3769},{":editable":2253,":show-in-col":2253,"max-height":2254},[3770],{"type":17,"tag":299,"props":3771,"children":3773},{"code":3772,"language":302,"meta":7,"className":303,"style":7},"# Create a DataFrame with missing values\ndata_with_na = {\n    \"Name\": [\"Tom\", \"Jerry\", \"Spike\"],\n    \"Age\": [28, None, 25],\n    \"Score\": [85, 92, None]\n}\ndf_with_na = pd.DataFrame(data_with_na)\n\n# Check for missing values\nprint(df_with_na.isna())\n\n# Fill missing values\ndf_filled = df_with_na.fillna(0)\n\n# Output the DataFrame after filling missing values\nprint(df_filled)\n",[3774],{"type":17,"tag":146,"props":3775,"children":3776},{"__ignoreMap":7},[3777,3785,3801,3836,3871,3906,3913,3930,3937,3945,3957,3964,3972,3998,4006,4015],{"type":17,"tag":126,"props":3778,"children":3779},{"class":310,"line":311},[3780],{"type":17,"tag":126,"props":3781,"children":3782},{"style":315},[3783],{"type":23,"value":3784},"# Create a DataFrame with missing values\n",{"type":17,"tag":126,"props":3786,"children":3787},{"class":310,"line":321},[3788,3793,3797],{"type":17,"tag":126,"props":3789,"children":3790},{"style":325},[3791],{"type":23,"value":3792},"data_with_na ",{"type":17,"tag":126,"props":3794,"children":3795},{"style":337},[3796],{"type":23,"value":340},{"type":17,"tag":126,"props":3798,"children":3799},{"style":325},[3800],{"type":23,"value":1985},{"type":17,"tag":126,"props":3802,"children":3803},{"class":310,"line":665},[3804,3808,3812,3816,3820,3824,3828,3832],{"type":17,"tag":126,"props":3805,"children":3806},{"style":974},[3807],{"type":23,"value":1993},{"type":17,"tag":126,"props":3809,"children":3810},{"style":325},[3811],{"type":23,"value":1998},{"type":17,"tag":126,"props":3813,"children":3814},{"style":974},[3815],{"type":23,"value":2003},{"type":17,"tag":126,"props":3817,"children":3818},{"style":325},[3819],{"type":23,"value":351},{"type":17,"tag":126,"props":3821,"children":3822},{"style":974},[3823],{"type":23,"value":2012},{"type":17,"tag":126,"props":3825,"children":3826},{"style":325},[3827],{"type":23,"value":351},{"type":17,"tag":126,"props":3829,"children":3830},{"style":974},[3831],{"type":23,"value":2021},{"type":17,"tag":126,"props":3833,"children":3834},{"style":325},[3835],{"type":23,"value":2026},{"type":17,"tag":126,"props":3837,"children":3838},{"class":310,"line":674},[3839,3843,3847,3851,3855,3859,3863,3867],{"type":17,"tag":126,"props":3840,"children":3841},{"style":974},[3842],{"type":23,"value":2034},{"type":17,"tag":126,"props":3844,"children":3845},{"style":325},[3846],{"type":23,"value":1998},{"type":17,"tag":126,"props":3848,"children":3849},{"style":343},[3850],{"type":23,"value":2043},{"type":17,"tag":126,"props":3852,"children":3853},{"style":325},[3854],{"type":23,"value":351},{"type":17,"tag":126,"props":3856,"children":3857},{"style":343},[3858],{"type":23,"value":346},{"type":17,"tag":126,"props":3860,"children":3861},{"style":325},[3862],{"type":23,"value":351},{"type":17,"tag":126,"props":3864,"children":3865},{"style":343},[3866],{"type":23,"value":2061},{"type":17,"tag":126,"props":3868,"children":3869},{"style":325},[3870],{"type":23,"value":2026},{"type":17,"tag":126,"props":3872,"children":3873},{"class":310,"line":729},[3874,3878,3882,3886,3890,3894,3898,3902],{"type":17,"tag":126,"props":3875,"children":3876},{"style":974},[3877],{"type":23,"value":2073},{"type":17,"tag":126,"props":3879,"children":3880},{"style":325},[3881],{"type":23,"value":1998},{"type":17,"tag":126,"props":3883,"children":3884},{"style":343},[3885],{"type":23,"value":2082},{"type":17,"tag":126,"props":3887,"children":3888},{"style":325},[3889],{"type":23,"value":351},{"type":17,"tag":126,"props":3891,"children":3892},{"style":343},[3893],{"type":23,"value":2091},{"type":17,"tag":126,"props":3895,"children":3896},{"style":325},[3897],{"type":23,"value":351},{"type":17,"tag":126,"props":3899,"children":3900},{"style":343},[3901],{"type":23,"value":346},{"type":17,"tag":126,"props":3903,"children":3904},{"style":325},[3905],{"type":23,"value":2105},{"type":17,"tag":126,"props":3907,"children":3908},{"class":310,"line":737},[3909],{"type":17,"tag":126,"props":3910,"children":3911},{"style":325},[3912],{"type":23,"value":1303},{"type":17,"tag":126,"props":3914,"children":3915},{"class":310,"line":746},[3916,3921,3925],{"type":17,"tag":126,"props":3917,"children":3918},{"style":325},[3919],{"type":23,"value":3920},"df_with_na ",{"type":17,"tag":126,"props":3922,"children":3923},{"style":337},[3924],{"type":23,"value":340},{"type":17,"tag":126,"props":3926,"children":3927},{"style":325},[3928],{"type":23,"value":3929}," pd.DataFrame(data_with_na)\n",{"type":17,"tag":126,"props":3931,"children":3932},{"class":310,"line":1337},[3933],{"type":17,"tag":126,"props":3934,"children":3935},{"emptyLinePlaceholder":659},[3936],{"type":23,"value":662},{"type":17,"tag":126,"props":3938,"children":3939},{"class":310,"line":11},[3940],{"type":17,"tag":126,"props":3941,"children":3942},{"style":315},[3943],{"type":23,"value":3944},"# Check for missing values\n",{"type":17,"tag":126,"props":3946,"children":3947},{"class":310,"line":2122},[3948,3952],{"type":17,"tag":126,"props":3949,"children":3950},{"style":343},[3951],{"type":23,"value":752},{"type":17,"tag":126,"props":3953,"children":3954},{"style":325},[3955],{"type":23,"value":3956},"(df_with_na.isna())\n",{"type":17,"tag":126,"props":3958,"children":3959},{"class":310,"line":2140},[3960],{"type":17,"tag":126,"props":3961,"children":3962},{"emptyLinePlaceholder":659},[3963],{"type":23,"value":662},{"type":17,"tag":126,"props":3965,"children":3966},{"class":310,"line":2148},[3967],{"type":17,"tag":126,"props":3968,"children":3969},{"style":315},[3970],{"type":23,"value":3971},"# Fill missing values\n",{"type":17,"tag":126,"props":3973,"children":3974},{"class":310,"line":2157},[3975,3980,3984,3989,3994],{"type":17,"tag":126,"props":3976,"children":3977},{"style":325},[3978],{"type":23,"value":3979},"df_filled ",{"type":17,"tag":126,"props":3981,"children":3982},{"style":337},[3983],{"type":23,"value":340},{"type":17,"tag":126,"props":3985,"children":3986},{"style":325},[3987],{"type":23,"value":3988}," df_with_na.fillna(",{"type":17,"tag":126,"props":3990,"children":3991},{"style":343},[3992],{"type":23,"value":3993},"0",{"type":17,"tag":126,"props":3995,"children":3996},{"style":325},[3997],{"type":23,"value":438},{"type":17,"tag":126,"props":3999,"children":4001},{"class":310,"line":4000},14,[4002],{"type":17,"tag":126,"props":4003,"children":4004},{"emptyLinePlaceholder":659},[4005],{"type":23,"value":662},{"type":17,"tag":126,"props":4007,"children":4009},{"class":310,"line":4008},15,[4010],{"type":17,"tag":126,"props":4011,"children":4012},{"style":315},[4013],{"type":23,"value":4014},"# Output the DataFrame after filling missing values\n",{"type":17,"tag":126,"props":4016,"children":4018},{"class":310,"line":4017},16,[4019,4023],{"type":17,"tag":126,"props":4020,"children":4021},{"style":343},[4022],{"type":23,"value":752},{"type":17,"tag":126,"props":4024,"children":4025},{"style":325},[4026],{"type":23,"value":4027},"(df_filled)\n",{"type":17,"tag":26,"props":4029,"children":4030},{},[4031,4033,4038,4040,4045],{"type":23,"value":4032},"In summary, the Pandas ",{"type":17,"tag":146,"props":4034,"children":4036},{"className":4035},[],[4037],{"type":23,"value":87},{"type":23,"value":4039}," is a powerful and flexible two-dimensional data structure widely used in various data analysis tasks. Whether handling numerical data, time series, or structured tabular data, the ",{"type":17,"tag":146,"props":4041,"children":4043},{"className":4042},[],[4044],{"type":23,"value":87},{"type":23,"value":4046}," provides efficient and convenient methods for operations and processing.",{"type":17,"tag":134,"props":4048,"children":4050},{"id":4049},"_3-case-study",[4051],{"type":23,"value":4052},"3. Case Study",{"type":17,"tag":26,"props":4054,"children":4055},{},[4056],{"type":23,"value":4057},"Solidify the data structures and basic operations in Pandas through the case exercises in the link below.",{"type":17,"tag":26,"props":4059,"children":4060},{},[4061],{"type":17,"tag":4062,"props":4063,"children":4067},"a",{"href":4064,"rel":4065},"https://www.kaggle.com/code/zhaowenxi/pandas-for-python-1",[4066],"nofollow",[4068],{"type":23,"value":4064},{"type":17,"tag":18,"props":4070,"children":4072},{"id":4071},"_3-pandas-and-common-file-formats",[4073],{"type":23,"value":4074},"3. Pandas and Common File Formats",{"type":17,"tag":134,"props":4076,"children":4078},{"id":4077},"_1-pandas-and-csv",[4079],{"type":23,"value":4080},"1. Pandas and CSV",{"type":17,"tag":26,"props":4082,"children":4083},{},[4084,4086,4092],{"type":23,"value":4085},"CSV (Comma-Separated Values) is a common file format known for its simplicity and lightweight nature, widely used for data transfer and storage. Pandas is a powerful tool in Python for data analysis and processing, which can easily read, analyze, and process CSV files. This article uses a classic ",{"type":17,"tag":146,"props":4087,"children":4089},{"className":4088},[],[4090],{"type":23,"value":4091},"example.csv",{"type":23,"value":4093}," file as an example to demonstrate common Pandas operations. Save the following data locally and store it in .csv format, and perform operations with the code.",{"type":17,"tag":299,"props":4095,"children":4099},{"code":4096,"language":4097,"meta":7,"className":4098,"style":7},"ID,Name,Age,Gender,Department,Salary,HireDate,PerformanceScore,City\n1,John Smith,28,Male,Sales,50000,2018-05-21,85,New York\n2,Mary Johnson,34,Female,HR,62000,2017-03-15,92,Los Angeles\n3,James Brown,45,Male,IT,72000,2015-09-30,78,Chicago\n4,Patricia Garcia,29,Female,Finance,55000,2019-07-11,88,Houston\n5,Robert Martinez,41,Male,Marketing,68000,2016-04-20,80,Miami\n6,Linda Anderson,36,Female,Sales,59000,2018-11-12,90,Boston\n7,Michael Wilson,38,Male,HR,63000,2017-06-07,86,San Francisco\n8,Elizabeth Taylor,30,Female,IT,74000,2019-02-23,75,Dallas\n9,David Lee,25,Male,Finance,52000,2020-08-14,82,Austin\n10,Barbara Hernandez,32,Female,Marketing,67000,2017-10-19,83,Seattle\n11,William Clark,29,Male,Sales,56000,2019-12-01,81,Denver\n12,Jennifer Lewis,35,Female,HR,60000,2018-01-27,87,Las Vegas\n13,Joseph Walker,40,Male,IT,73000,2015-05-10,76,San Diego\n14,Susan Hall,33,Female,Finance,56000,2018-09-18,89,New Orleans\n15,Charles Young,50,Male,Marketing,78000,2014-11-05,90,Portland\n16,Karen King,26,Female,Sales,48000,2020-02-10,84,Columbus\n17,Thomas Wright,37,Male,HR,61000,2016-07-15,82,Charlotte\n18,Lisa Scott,31,Female,IT,75000,2019-04-29,74,Detroit\n19,Christopher Green,47,Male,Finance,70000,2014-06-19,79,Indianapolis\n20,Amy Adams,27,Female,Marketing,53000,2019-01-20,85,Nashville\n21,Mark Baker,44,Male,Sales,68000,2015-10-03,88,Jacksonville\n22,Sarah Gonzalez,39,Female,HR,62000,2017-08-23,81,Memphis\n23,Paul Nelson,33,Male,IT,72000,2016-05-09,77,Fort Worth\n24,Donna Mitchell,42,Female,Finance,69000,2016-12-27,91,El Paso\n25,Steven Perez,28,Male,Marketing,55000,2020-03-05,80,Milwaukee\n26,Nancy Roberts,31,Female,Sales,52000,2019-10-15,86,Baltimore\n27,Matthew Turner,46,Male,HR,60000,2014-08-21,82,Louisville\n28,Dorothy Phillips,34,Female,IT,76000,2016-01-12,74,Oklahoma City\n29,Ronald Campbell,43,Male,Finance,72000,2015-03-19,87,Albuquerque\n30,Laura Parker,30,Female,Marketing,57000,2020-06-07,80,Kansas City\n","csv","language-csv shiki shiki-themes github-light github-dark",[4100],{"type":17,"tag":146,"props":4101,"children":4102},{"__ignoreMap":7},[4103,4111,4119,4127,4135,4143,4151,4159,4167,4175,4183,4191,4199,4207,4215,4223,4231,4240,4249,4258,4267,4276,4285,4294,4303,4312,4321,4330,4339,4348,4357],{"type":17,"tag":126,"props":4104,"children":4105},{"class":310,"line":311},[4106],{"type":17,"tag":126,"props":4107,"children":4108},{},[4109],{"type":23,"value":4110},"ID,Name,Age,Gender,Department,Salary,HireDate,PerformanceScore,City\n",{"type":17,"tag":126,"props":4112,"children":4113},{"class":310,"line":321},[4114],{"type":17,"tag":126,"props":4115,"children":4116},{},[4117],{"type":23,"value":4118},"1,John Smith,28,Male,Sales,50000,2018-05-21,85,New York\n",{"type":17,"tag":126,"props":4120,"children":4121},{"class":310,"line":665},[4122],{"type":17,"tag":126,"props":4123,"children":4124},{},[4125],{"type":23,"value":4126},"2,Mary Johnson,34,Female,HR,62000,2017-03-15,92,Los Angeles\n",{"type":17,"tag":126,"props":4128,"children":4129},{"class":310,"line":674},[4130],{"type":17,"tag":126,"props":4131,"children":4132},{},[4133],{"type":23,"value":4134},"3,James Brown,45,Male,IT,72000,2015-09-30,78,Chicago\n",{"type":17,"tag":126,"props":4136,"children":4137},{"class":310,"line":729},[4138],{"type":17,"tag":126,"props":4139,"children":4140},{},[4141],{"type":23,"value":4142},"4,Patricia Garcia,29,Female,Finance,55000,2019-07-11,88,Houston\n",{"type":17,"tag":126,"props":4144,"children":4145},{"class":310,"line":737},[4146],{"type":17,"tag":126,"props":4147,"children":4148},{},[4149],{"type":23,"value":4150},"5,Robert Martinez,41,Male,Marketing,68000,2016-04-20,80,Miami\n",{"type":17,"tag":126,"props":4152,"children":4153},{"class":310,"line":746},[4154],{"type":17,"tag":126,"props":4155,"children":4156},{},[4157],{"type":23,"value":4158},"6,Linda Anderson,36,Female,Sales,59000,2018-11-12,90,Boston\n",{"type":17,"tag":126,"props":4160,"children":4161},{"class":310,"line":1337},[4162],{"type":17,"tag":126,"props":4163,"children":4164},{},[4165],{"type":23,"value":4166},"7,Michael Wilson,38,Male,HR,63000,2017-06-07,86,San Francisco\n",{"type":17,"tag":126,"props":4168,"children":4169},{"class":310,"line":11},[4170],{"type":17,"tag":126,"props":4171,"children":4172},{},[4173],{"type":23,"value":4174},"8,Elizabeth Taylor,30,Female,IT,74000,2019-02-23,75,Dallas\n",{"type":17,"tag":126,"props":4176,"children":4177},{"class":310,"line":2122},[4178],{"type":17,"tag":126,"props":4179,"children":4180},{},[4181],{"type":23,"value":4182},"9,David Lee,25,Male,Finance,52000,2020-08-14,82,Austin\n",{"type":17,"tag":126,"props":4184,"children":4185},{"class":310,"line":2140},[4186],{"type":17,"tag":126,"props":4187,"children":4188},{},[4189],{"type":23,"value":4190},"10,Barbara Hernandez,32,Female,Marketing,67000,2017-10-19,83,Seattle\n",{"type":17,"tag":126,"props":4192,"children":4193},{"class":310,"line":2148},[4194],{"type":17,"tag":126,"props":4195,"children":4196},{},[4197],{"type":23,"value":4198},"11,William Clark,29,Male,Sales,56000,2019-12-01,81,Denver\n",{"type":17,"tag":126,"props":4200,"children":4201},{"class":310,"line":2157},[4202],{"type":17,"tag":126,"props":4203,"children":4204},{},[4205],{"type":23,"value":4206},"12,Jennifer Lewis,35,Female,HR,60000,2018-01-27,87,Las Vegas\n",{"type":17,"tag":126,"props":4208,"children":4209},{"class":310,"line":4000},[4210],{"type":17,"tag":126,"props":4211,"children":4212},{},[4213],{"type":23,"value":4214},"13,Joseph Walker,40,Male,IT,73000,2015-05-10,76,San Diego\n",{"type":17,"tag":126,"props":4216,"children":4217},{"class":310,"line":4008},[4218],{"type":17,"tag":126,"props":4219,"children":4220},{},[4221],{"type":23,"value":4222},"14,Susan Hall,33,Female,Finance,56000,2018-09-18,89,New Orleans\n",{"type":17,"tag":126,"props":4224,"children":4225},{"class":310,"line":4017},[4226],{"type":17,"tag":126,"props":4227,"children":4228},{},[4229],{"type":23,"value":4230},"15,Charles Young,50,Male,Marketing,78000,2014-11-05,90,Portland\n",{"type":17,"tag":126,"props":4232,"children":4234},{"class":310,"line":4233},17,[4235],{"type":17,"tag":126,"props":4236,"children":4237},{},[4238],{"type":23,"value":4239},"16,Karen King,26,Female,Sales,48000,2020-02-10,84,Columbus\n",{"type":17,"tag":126,"props":4241,"children":4243},{"class":310,"line":4242},18,[4244],{"type":17,"tag":126,"props":4245,"children":4246},{},[4247],{"type":23,"value":4248},"17,Thomas Wright,37,Male,HR,61000,2016-07-15,82,Charlotte\n",{"type":17,"tag":126,"props":4250,"children":4252},{"class":310,"line":4251},19,[4253],{"type":17,"tag":126,"props":4254,"children":4255},{},[4256],{"type":23,"value":4257},"18,Lisa Scott,31,Female,IT,75000,2019-04-29,74,Detroit\n",{"type":17,"tag":126,"props":4259,"children":4261},{"class":310,"line":4260},20,[4262],{"type":17,"tag":126,"props":4263,"children":4264},{},[4265],{"type":23,"value":4266},"19,Christopher Green,47,Male,Finance,70000,2014-06-19,79,Indianapolis\n",{"type":17,"tag":126,"props":4268,"children":4270},{"class":310,"line":4269},21,[4271],{"type":17,"tag":126,"props":4272,"children":4273},{},[4274],{"type":23,"value":4275},"20,Amy Adams,27,Female,Marketing,53000,2019-01-20,85,Nashville\n",{"type":17,"tag":126,"props":4277,"children":4279},{"class":310,"line":4278},22,[4280],{"type":17,"tag":126,"props":4281,"children":4282},{},[4283],{"type":23,"value":4284},"21,Mark Baker,44,Male,Sales,68000,2015-10-03,88,Jacksonville\n",{"type":17,"tag":126,"props":4286,"children":4288},{"class":310,"line":4287},23,[4289],{"type":17,"tag":126,"props":4290,"children":4291},{},[4292],{"type":23,"value":4293},"22,Sarah Gonzalez,39,Female,HR,62000,2017-08-23,81,Memphis\n",{"type":17,"tag":126,"props":4295,"children":4297},{"class":310,"line":4296},24,[4298],{"type":17,"tag":126,"props":4299,"children":4300},{},[4301],{"type":23,"value":4302},"23,Paul Nelson,33,Male,IT,72000,2016-05-09,77,Fort Worth\n",{"type":17,"tag":126,"props":4304,"children":4306},{"class":310,"line":4305},25,[4307],{"type":17,"tag":126,"props":4308,"children":4309},{},[4310],{"type":23,"value":4311},"24,Donna Mitchell,42,Female,Finance,69000,2016-12-27,91,El Paso\n",{"type":17,"tag":126,"props":4313,"children":4315},{"class":310,"line":4314},26,[4316],{"type":17,"tag":126,"props":4317,"children":4318},{},[4319],{"type":23,"value":4320},"25,Steven Perez,28,Male,Marketing,55000,2020-03-05,80,Milwaukee\n",{"type":17,"tag":126,"props":4322,"children":4324},{"class":310,"line":4323},27,[4325],{"type":17,"tag":126,"props":4326,"children":4327},{},[4328],{"type":23,"value":4329},"26,Nancy Roberts,31,Female,Sales,52000,2019-10-15,86,Baltimore\n",{"type":17,"tag":126,"props":4331,"children":4333},{"class":310,"line":4332},28,[4334],{"type":17,"tag":126,"props":4335,"children":4336},{},[4337],{"type":23,"value":4338},"27,Matthew Turner,46,Male,HR,60000,2014-08-21,82,Louisville\n",{"type":17,"tag":126,"props":4340,"children":4342},{"class":310,"line":4341},29,[4343],{"type":17,"tag":126,"props":4344,"children":4345},{},[4346],{"type":23,"value":4347},"28,Dorothy Phillips,34,Female,IT,76000,2016-01-12,74,Oklahoma City\n",{"type":17,"tag":126,"props":4349,"children":4351},{"class":310,"line":4350},30,[4352],{"type":17,"tag":126,"props":4353,"children":4354},{},[4355],{"type":23,"value":4356},"29,Ronald Campbell,43,Male,Finance,72000,2015-03-19,87,Albuquerque\n",{"type":17,"tag":126,"props":4358,"children":4360},{"class":310,"line":4359},31,[4361],{"type":17,"tag":126,"props":4362,"children":4363},{},[4364],{"type":23,"value":4365},"30,Laura Parker,30,Female,Marketing,57000,2020-06-07,80,Kansas City\n",{"type":17,"tag":26,"props":4367,"children":4368},{},[4369],{"type":17,"tag":608,"props":4370,"children":4372},{"alt":7,"src":4371},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E4%B8%80%E8%88%AC%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8Ben.png",[],{"type":17,"tag":3082,"props":4374,"children":4375},{},[4376],{"type":17,"tag":51,"props":4377,"children":4378},{},[4379,4381,4387,4389,4394],{"type":23,"value":4380},"Read CSV file: Use ",{"type":17,"tag":146,"props":4382,"children":4384},{"className":4383},[],[4385],{"type":23,"value":4386},"pd.read_csv()",{"type":23,"value":4388}," to read a CSV file into a Pandas ",{"type":17,"tag":146,"props":4390,"children":4392},{"className":4391},[],[4393],{"type":23,"value":87},{"type":23,"value":4395}," object.",{"type":17,"tag":299,"props":4397,"children":4399},{"code":4398,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('example.csv')\n\n# Display the first few rows of data\nprint(df.to_string())\n",[4400],{"type":17,"tag":146,"props":4401,"children":4402},{"__ignoreMap":7},[4403,4422,4429,4437,4462,4469,4477],{"type":17,"tag":126,"props":4404,"children":4405},{"class":310,"line":311},[4406,4410,4414,4418],{"type":17,"tag":126,"props":4407,"children":4408},{"style":337},[4409],{"type":23,"value":638},{"type":17,"tag":126,"props":4411,"children":4412},{"style":325},[4413],{"type":23,"value":643},{"type":17,"tag":126,"props":4415,"children":4416},{"style":337},[4417],{"type":23,"value":648},{"type":17,"tag":126,"props":4419,"children":4420},{"style":325},[4421],{"type":23,"value":653},{"type":17,"tag":126,"props":4423,"children":4424},{"class":310,"line":321},[4425],{"type":17,"tag":126,"props":4426,"children":4427},{"emptyLinePlaceholder":659},[4428],{"type":23,"value":662},{"type":17,"tag":126,"props":4430,"children":4431},{"class":310,"line":665},[4432],{"type":17,"tag":126,"props":4433,"children":4434},{"style":315},[4435],{"type":23,"value":4436},"# Read CSV file\n",{"type":17,"tag":126,"props":4438,"children":4439},{"class":310,"line":674},[4440,4444,4448,4453,4458],{"type":17,"tag":126,"props":4441,"children":4442},{"style":325},[4443],{"type":23,"value":2128},{"type":17,"tag":126,"props":4445,"children":4446},{"style":337},[4447],{"type":23,"value":340},{"type":17,"tag":126,"props":4449,"children":4450},{"style":325},[4451],{"type":23,"value":4452}," pd.read_csv(",{"type":17,"tag":126,"props":4454,"children":4455},{"style":974},[4456],{"type":23,"value":4457},"'example.csv'",{"type":17,"tag":126,"props":4459,"children":4460},{"style":325},[4461],{"type":23,"value":438},{"type":17,"tag":126,"props":4463,"children":4464},{"class":310,"line":729},[4465],{"type":17,"tag":126,"props":4466,"children":4467},{"emptyLinePlaceholder":659},[4468],{"type":23,"value":662},{"type":17,"tag":126,"props":4470,"children":4471},{"class":310,"line":737},[4472],{"type":17,"tag":126,"props":4473,"children":4474},{"style":315},[4475],{"type":23,"value":4476},"# Display the first few rows of data\n",{"type":17,"tag":126,"props":4478,"children":4479},{"class":310,"line":746},[4480,4484],{"type":17,"tag":126,"props":4481,"children":4482},{"style":343},[4483],{"type":23,"value":752},{"type":17,"tag":126,"props":4485,"children":4486},{"style":325},[4487],{"type":23,"value":4488},"(df.to_string())\n",{"type":17,"tag":119,"props":4490,"children":4491},{},[4492],{"type":17,"tag":26,"props":4493,"children":4494},{},[4495,4499,4505],{"type":17,"tag":126,"props":4496,"children":4497},{},[4498],{"type":23,"value":130},{"type":17,"tag":146,"props":4500,"children":4502},{"className":4501},[],[4503],{"type":23,"value":4504},"to_string()",{"type":23,"value":4506}," is used to print the entire DataFrame, avoiding Pandas' default behavior of displaying only the first and last 5 rows. If the file is large, it is not recommended to use this method as the output can be very large.",{"type":17,"tag":3082,"props":4508,"children":4509},{"start":321},[4510],{"type":17,"tag":51,"props":4511,"children":4512},{},[4513,4515],{"type":23,"value":4514},"View specified head and tail rows:",{"type":17,"tag":47,"props":4516,"children":4517},{},[4518,4546],{"type":17,"tag":51,"props":4519,"children":4520},{},[4521,4523,4529,4531,4537,4539,4544],{"type":23,"value":4522},"Use ",{"type":17,"tag":146,"props":4524,"children":4526},{"className":4525},[],[4527],{"type":23,"value":4528},"head(n)",{"type":23,"value":4530}," to display the first ",{"type":17,"tag":146,"props":4532,"children":4534},{"className":4533},[],[4535],{"type":23,"value":4536},"n",{"type":23,"value":4538}," rows of the dataset. If ",{"type":17,"tag":146,"props":4540,"children":4542},{"className":4541},[],[4543],{"type":23,"value":4536},{"type":23,"value":4545}," is not specified, the first 5 rows are returned by default.",{"type":17,"tag":51,"props":4547,"children":4548},{},[4549,4550,4556,4558,4563,4564,4569],{"type":23,"value":4522},{"type":17,"tag":146,"props":4551,"children":4553},{"className":4552},[],[4554],{"type":23,"value":4555},"tail(n)",{"type":23,"value":4557}," to display the last ",{"type":17,"tag":146,"props":4559,"children":4561},{"className":4560},[],[4562],{"type":23,"value":4536},{"type":23,"value":4538},{"type":17,"tag":146,"props":4565,"children":4567},{"className":4566},[],[4568],{"type":23,"value":4536},{"type":23,"value":4570}," is not specified, the last 5 rows are returned by default.",{"type":17,"tag":299,"props":4572,"children":4574},{"code":4573,"language":302,"meta":7,"className":303,"style":7},"# Display the first 5 rows (default)\nprint(df.head())\n\n# Display the first 10 rows\nprint(df.head(10))\n\n# Display the last 5 rows (default)\nprint(df.tail())\n\n# Display the last 10 rows\nprint(df.tail(10))\n\n",[4575],{"type":17,"tag":146,"props":4576,"children":4577},{"__ignoreMap":7},[4578,4586,4598,4605,4613,4634,4641,4649,4661,4668,4676],{"type":17,"tag":126,"props":4579,"children":4580},{"class":310,"line":311},[4581],{"type":17,"tag":126,"props":4582,"children":4583},{"style":315},[4584],{"type":23,"value":4585},"# Display the first 5 rows (default)\n",{"type":17,"tag":126,"props":4587,"children":4588},{"class":310,"line":321},[4589,4593],{"type":17,"tag":126,"props":4590,"children":4591},{"style":343},[4592],{"type":23,"value":752},{"type":17,"tag":126,"props":4594,"children":4595},{"style":325},[4596],{"type":23,"value":4597},"(df.head())\n",{"type":17,"tag":126,"props":4599,"children":4600},{"class":310,"line":665},[4601],{"type":17,"tag":126,"props":4602,"children":4603},{"emptyLinePlaceholder":659},[4604],{"type":23,"value":662},{"type":17,"tag":126,"props":4606,"children":4607},{"class":310,"line":674},[4608],{"type":17,"tag":126,"props":4609,"children":4610},{"style":315},[4611],{"type":23,"value":4612},"# Display the first 10 rows\n",{"type":17,"tag":126,"props":4614,"children":4615},{"class":310,"line":729},[4616,4620,4625,4629],{"type":17,"tag":126,"props":4617,"children":4618},{"style":343},[4619],{"type":23,"value":752},{"type":17,"tag":126,"props":4621,"children":4622},{"style":325},[4623],{"type":23,"value":4624},"(df.head(",{"type":17,"tag":126,"props":4626,"children":4627},{"style":343},[4628],{"type":23,"value":1247},{"type":17,"tag":126,"props":4630,"children":4631},{"style":325},[4632],{"type":23,"value":4633},"))\n",{"type":17,"tag":126,"props":4635,"children":4636},{"class":310,"line":737},[4637],{"type":17,"tag":126,"props":4638,"children":4639},{"emptyLinePlaceholder":659},[4640],{"type":23,"value":662},{"type":17,"tag":126,"props":4642,"children":4643},{"class":310,"line":746},[4644],{"type":17,"tag":126,"props":4645,"children":4646},{"style":315},[4647],{"type":23,"value":4648},"# Display the last 5 rows (default)\n",{"type":17,"tag":126,"props":4650,"children":4651},{"class":310,"line":1337},[4652,4656],{"type":17,"tag":126,"props":4653,"children":4654},{"style":343},[4655],{"type":23,"value":752},{"type":17,"tag":126,"props":4657,"children":4658},{"style":325},[4659],{"type":23,"value":4660},"(df.tail())\n",{"type":17,"tag":126,"props":4662,"children":4663},{"class":310,"line":11},[4664],{"type":17,"tag":126,"props":4665,"children":4666},{"emptyLinePlaceholder":659},[4667],{"type":23,"value":662},{"type":17,"tag":126,"props":4669,"children":4670},{"class":310,"line":2122},[4671],{"type":17,"tag":126,"props":4672,"children":4673},{"style":315},[4674],{"type":23,"value":4675},"# Display the last 10 rows\n",{"type":17,"tag":126,"props":4677,"children":4678},{"class":310,"line":2140},[4679,4683,4688,4692],{"type":17,"tag":126,"props":4680,"children":4681},{"style":343},[4682],{"type":23,"value":752},{"type":17,"tag":126,"props":4684,"children":4685},{"style":325},[4686],{"type":23,"value":4687},"(df.tail(",{"type":17,"tag":126,"props":4689,"children":4690},{"style":343},[4691],{"type":23,"value":1247},{"type":17,"tag":126,"props":4693,"children":4694},{"style":325},[4695],{"type":23,"value":4633},{"type":17,"tag":3082,"props":4697,"children":4698},{"start":665},[4699],{"type":17,"tag":51,"props":4700,"children":4701},{},[4702,4704,4710],{"type":23,"value":4703},"Get basic information: Use the ",{"type":17,"tag":146,"props":4705,"children":4707},{"className":4706},[],[4708],{"type":23,"value":4709},"info()",{"type":23,"value":4711}," method to get basic information about the data, such as column names, data types, and the number of non-null values.",{"type":17,"tag":299,"props":4713,"children":4715},{"code":4714,"language":302,"meta":7,"className":303,"style":7},"# Get basic information about the data\ndf.info()\n",[4716],{"type":17,"tag":146,"props":4717,"children":4718},{"__ignoreMap":7},[4719,4727],{"type":17,"tag":126,"props":4720,"children":4721},{"class":310,"line":311},[4722],{"type":17,"tag":126,"props":4723,"children":4724},{"style":315},[4725],{"type":23,"value":4726},"# Get basic information about the data\n",{"type":17,"tag":126,"props":4728,"children":4729},{"class":310,"line":321},[4730],{"type":17,"tag":126,"props":4731,"children":4732},{"style":325},[4733],{"type":23,"value":4734},"df.info()\n",{"type":17,"tag":3082,"props":4736,"children":4737},{"start":674},[4738],{"type":17,"tag":51,"props":4739,"children":4740},{},[4741,4743,4749],{"type":23,"value":4742},"Calculate statistics: The ",{"type":17,"tag":146,"props":4744,"children":4746},{"className":4745},[],[4747],{"type":23,"value":4748},"describe()",{"type":23,"value":4750}," method can quickly get statistical information for numerical columns, such as mean, standard deviation, minimum, and maximum values.",{"type":17,"tag":299,"props":4752,"children":4754},{"code":4753,"language":302,"meta":7,"className":303,"style":7},"# Calculate statistical information for numerical columns\nprint(df.describe())\n",[4755],{"type":17,"tag":146,"props":4756,"children":4757},{"__ignoreMap":7},[4758,4766],{"type":17,"tag":126,"props":4759,"children":4760},{"class":310,"line":311},[4761],{"type":17,"tag":126,"props":4762,"children":4763},{"style":315},[4764],{"type":23,"value":4765},"# Calculate statistical information for numerical columns\n",{"type":17,"tag":126,"props":4767,"children":4768},{"class":310,"line":321},[4769,4773],{"type":17,"tag":126,"props":4770,"children":4771},{"style":343},[4772],{"type":23,"value":752},{"type":17,"tag":126,"props":4774,"children":4775},{"style":325},[4776],{"type":23,"value":3742},{"type":17,"tag":3082,"props":4778,"children":4779},{"start":729},[4780],{"type":17,"tag":51,"props":4781,"children":4782},{},[4783],{"type":23,"value":4784},"Filter data: You can filter data based on conditions, such as filtering employees older than 30 and with a salary over 60000.",{"type":17,"tag":299,"props":4786,"children":4788},{"code":4787,"language":302,"meta":7,"className":303,"style":7},"filtered_df = df[(df[\"Age\"] > 30) & (df[\"Salary\"] > 60000)]\nprint(filtered_df)\n",[4789],{"type":17,"tag":146,"props":4790,"children":4791},{"__ignoreMap":7},[4792,4863],{"type":17,"tag":126,"props":4793,"children":4794},{"class":310,"line":311},[4795,4799,4803,4808,4812,4816,4820,4825,4830,4835,4840,4845,4849,4853,4858],{"type":17,"tag":126,"props":4796,"children":4797},{"style":325},[4798],{"type":23,"value":3552},{"type":17,"tag":126,"props":4800,"children":4801},{"style":337},[4802],{"type":23,"value":340},{"type":17,"tag":126,"props":4804,"children":4805},{"style":325},[4806],{"type":23,"value":4807}," df[(df[",{"type":17,"tag":126,"props":4809,"children":4810},{"style":974},[4811],{"type":23,"value":2462},{"type":17,"tag":126,"props":4813,"children":4814},{"style":325},[4815],{"type":23,"value":3354},{"type":17,"tag":126,"props":4817,"children":4818},{"style":337},[4819],{"type":23,"value":3574},{"type":17,"tag":126,"props":4821,"children":4822},{"style":343},[4823],{"type":23,"value":4824}," 30",{"type":17,"tag":126,"props":4826,"children":4827},{"style":325},[4828],{"type":23,"value":4829},") ",{"type":17,"tag":126,"props":4831,"children":4832},{"style":337},[4833],{"type":23,"value":4834},"&",{"type":17,"tag":126,"props":4836,"children":4837},{"style":325},[4838],{"type":23,"value":4839}," (df[",{"type":17,"tag":126,"props":4841,"children":4842},{"style":974},[4843],{"type":23,"value":4844},"\"Salary\"",{"type":17,"tag":126,"props":4846,"children":4847},{"style":325},[4848],{"type":23,"value":3354},{"type":17,"tag":126,"props":4850,"children":4851},{"style":337},[4852],{"type":23,"value":3574},{"type":17,"tag":126,"props":4854,"children":4855},{"style":343},[4856],{"type":23,"value":4857}," 60000",{"type":17,"tag":126,"props":4859,"children":4860},{"style":325},[4861],{"type":23,"value":4862},")]\n",{"type":17,"tag":126,"props":4864,"children":4865},{"class":310,"line":321},[4866,4870],{"type":17,"tag":126,"props":4867,"children":4868},{"style":343},[4869],{"type":23,"value":752},{"type":17,"tag":126,"props":4871,"children":4872},{"style":325},[4873],{"type":23,"value":3610},{"type":17,"tag":3082,"props":4875,"children":4876},{"start":737},[4877],{"type":17,"tag":51,"props":4878,"children":4879},{},[4880],{"type":23,"value":4881},"Save the modified DataFrame",{"type":17,"tag":299,"props":4883,"children":4885},{"code":4884,"language":302,"meta":7,"className":303,"style":7},"# Save as a new CSV file\ndf.to_csv('example_modified.csv', index=False)\n",[4886],{"type":17,"tag":146,"props":4887,"children":4888},{"__ignoreMap":7},[4889,4897],{"type":17,"tag":126,"props":4890,"children":4891},{"class":310,"line":311},[4892],{"type":17,"tag":126,"props":4893,"children":4894},{"style":315},[4895],{"type":23,"value":4896},"# Save as a new CSV file\n",{"type":17,"tag":126,"props":4898,"children":4899},{"class":310,"line":321},[4900,4905,4910,4914,4918,4922,4926],{"type":17,"tag":126,"props":4901,"children":4902},{"style":325},[4903],{"type":23,"value":4904},"df.to_csv(",{"type":17,"tag":126,"props":4906,"children":4907},{"style":974},[4908],{"type":23,"value":4909},"'example_modified.csv'",{"type":17,"tag":126,"props":4911,"children":4912},{"style":325},[4913],{"type":23,"value":351},{"type":17,"tag":126,"props":4915,"children":4916},{"style":331},[4917],{"type":23,"value":356},{"type":17,"tag":126,"props":4919,"children":4920},{"style":337},[4921],{"type":23,"value":340},{"type":17,"tag":126,"props":4923,"children":4924},{"style":343},[4925],{"type":23,"value":416},{"type":17,"tag":126,"props":4927,"children":4928},{"style":325},[4929],{"type":23,"value":438},{"type":17,"tag":134,"props":4931,"children":4933},{"id":4932},"_2-pandas-and-json",[4934],{"type":23,"value":4935},"2. Pandas and JSON",{"type":17,"tag":26,"props":4937,"children":4938},{},[4939],{"type":23,"value":4940},"Pandas is also very efficient at handling JSON data, converting JSON data structures into DataFrames, thereby simplifying complex nested data formats. JSON (JavaScript Object Notation) is a lightweight data interchange format widely used in web development and API responses. This article will demonstrate how to use Pandas to handle JSON data.",{"type":17,"tag":26,"props":4942,"children":4943},{},[4944],{"type":23,"value":4945},"We use a JSON data example containing employee information:",{"type":17,"tag":299,"props":4947,"children":4951},{"code":4948,"language":4949,"meta":7,"className":4950,"style":7},"[\n    {\"ID\": 1, \"Name\": \"John Smith\", \"Age\": 28, \"Gender\": \"Male\", \"Department\": \"Sales\", \"Salary\": 50000, \"HireDate\": \"2018-05-21\", \"PerformanceScore\": 85, \"City\": \"New York\"},\n    {\"ID\": 2, \"Name\": \"Mary Johnson\", \"Age\": 34, \"Gender\": \"Female\", \"Department\": \"HR\", \"Salary\": 62000, \"HireDate\": \"2017-03-15\", \"PerformanceScore\": 92, \"City\": \"Los Angeles\"},\n    {\"ID\": 3, \"Name\": \"James Brown\", \"Age\": 45, \"Gender\": \"Male\", \"Department\": \"IT\", \"Salary\": 72000, \"HireDate\": \"2015-09-30\", \"PerformanceScore\": 78, \"City\": \"Chicago\"}\n]\n","json","language-json shiki shiki-themes github-light github-dark",[4952],{"type":17,"tag":146,"props":4953,"children":4954},{"__ignoreMap":7},[4955,4963,4971,4979,4987],{"type":17,"tag":126,"props":4956,"children":4957},{"class":310,"line":311},[4958],{"type":17,"tag":126,"props":4959,"children":4960},{},[4961],{"type":23,"value":4962},"[\n",{"type":17,"tag":126,"props":4964,"children":4965},{"class":310,"line":321},[4966],{"type":17,"tag":126,"props":4967,"children":4968},{},[4969],{"type":23,"value":4970},"    {\"ID\": 1, \"Name\": \"John Smith\", \"Age\": 28, \"Gender\": \"Male\", \"Department\": \"Sales\", \"Salary\": 50000, \"HireDate\": \"2018-05-21\", \"PerformanceScore\": 85, \"City\": \"New York\"},\n",{"type":17,"tag":126,"props":4972,"children":4973},{"class":310,"line":665},[4974],{"type":17,"tag":126,"props":4975,"children":4976},{},[4977],{"type":23,"value":4978},"    {\"ID\": 2, \"Name\": \"Mary Johnson\", \"Age\": 34, \"Gender\": \"Female\", \"Department\": \"HR\", \"Salary\": 62000, \"HireDate\": \"2017-03-15\", \"PerformanceScore\": 92, \"City\": \"Los Angeles\"},\n",{"type":17,"tag":126,"props":4980,"children":4981},{"class":310,"line":674},[4982],{"type":17,"tag":126,"props":4983,"children":4984},{},[4985],{"type":23,"value":4986},"    {\"ID\": 3, \"Name\": \"James Brown\", \"Age\": 45, \"Gender\": \"Male\", \"Department\": \"IT\", \"Salary\": 72000, \"HireDate\": \"2015-09-30\", \"PerformanceScore\": 78, \"City\": \"Chicago\"}\n",{"type":17,"tag":126,"props":4988,"children":4989},{"class":310,"line":729},[4990],{"type":17,"tag":126,"props":4991,"children":4992},{},[4993],{"type":23,"value":2105},{"type":17,"tag":3082,"props":4995,"children":4996},{},[4997],{"type":17,"tag":51,"props":4998,"children":4999},{},[5000,5002,5008],{"type":23,"value":5001},"Read JSON file: Pandas can directly read JSON files using ",{"type":17,"tag":146,"props":5003,"children":5005},{"className":5004},[],[5006],{"type":23,"value":5007},"pd.read_json()",{"type":23,"value":5009},". The JSON data format supports lists, dictionaries, and more complex nested structures.",{"type":17,"tag":299,"props":5011,"children":5013},{"code":5012,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Read JSON file\ndf = pd.read_json('example.json')\n\n# Display data\nprint(df.to_string())\n",[5014],{"type":17,"tag":146,"props":5015,"children":5016},{"__ignoreMap":7},[5017,5036,5043,5051,5076,5083,5091],{"type":17,"tag":126,"props":5018,"children":5019},{"class":310,"line":311},[5020,5024,5028,5032],{"type":17,"tag":126,"props":5021,"children":5022},{"style":337},[5023],{"type":23,"value":638},{"type":17,"tag":126,"props":5025,"children":5026},{"style":325},[5027],{"type":23,"value":643},{"type":17,"tag":126,"props":5029,"children":5030},{"style":337},[5031],{"type":23,"value":648},{"type":17,"tag":126,"props":5033,"children":5034},{"style":325},[5035],{"type":23,"value":653},{"type":17,"tag":126,"props":5037,"children":5038},{"class":310,"line":321},[5039],{"type":17,"tag":126,"props":5040,"children":5041},{"emptyLinePlaceholder":659},[5042],{"type":23,"value":662},{"type":17,"tag":126,"props":5044,"children":5045},{"class":310,"line":665},[5046],{"type":17,"tag":126,"props":5047,"children":5048},{"style":315},[5049],{"type":23,"value":5050},"# Read JSON file\n",{"type":17,"tag":126,"props":5052,"children":5053},{"class":310,"line":674},[5054,5058,5062,5067,5072],{"type":17,"tag":126,"props":5055,"children":5056},{"style":325},[5057],{"type":23,"value":2128},{"type":17,"tag":126,"props":5059,"children":5060},{"style":337},[5061],{"type":23,"value":340},{"type":17,"tag":126,"props":5063,"children":5064},{"style":325},[5065],{"type":23,"value":5066}," pd.read_json(",{"type":17,"tag":126,"props":5068,"children":5069},{"style":974},[5070],{"type":23,"value":5071},"'example.json'",{"type":17,"tag":126,"props":5073,"children":5074},{"style":325},[5075],{"type":23,"value":438},{"type":17,"tag":126,"props":5077,"children":5078},{"class":310,"line":729},[5079],{"type":17,"tag":126,"props":5080,"children":5081},{"emptyLinePlaceholder":659},[5082],{"type":23,"value":662},{"type":17,"tag":126,"props":5084,"children":5085},{"class":310,"line":737},[5086],{"type":17,"tag":126,"props":5087,"children":5088},{"style":315},[5089],{"type":23,"value":5090},"# Display data\n",{"type":17,"tag":126,"props":5092,"children":5093},{"class":310,"line":746},[5094,5098],{"type":17,"tag":126,"props":5095,"children":5096},{"style":343},[5097],{"type":23,"value":752},{"type":17,"tag":126,"props":5099,"children":5100},{"style":325},[5101],{"type":23,"value":4488},{"type":17,"tag":3082,"props":5103,"children":5104},{"start":321},[5105],{"type":17,"tag":51,"props":5106,"children":5107},{},[5108],{"type":23,"value":5109},"Handle JSON with nested structures: JSON files may contain nested structures, and Pandas can handle these nested fields. For deeply nested JSON structures, it is usually necessary to first flatten or extract the nested fields into separate columns.",{"type":17,"tag":26,"props":5111,"children":5112},{},[5113,5115,5121],{"type":23,"value":5114},"Assume the JSON data has a nested ",{"type":17,"tag":146,"props":5116,"children":5118},{"className":5117},[],[5119],{"type":23,"value":5120},"Address",{"type":23,"value":5122}," field:",{"type":17,"tag":299,"props":5124,"children":5126},{"code":5125,"language":4949,"meta":7,"className":4950,"style":7},"{\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Age\": 28,\n    \"Address\": {\"City\": \"New York\", \"PostalCode\": \"10001\"},\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n",[5127],{"type":17,"tag":146,"props":5128,"children":5129},{"__ignoreMap":7},[5130,5138,5146,5154,5162,5170,5178,5186,5194],{"type":17,"tag":126,"props":5131,"children":5132},{"class":310,"line":311},[5133],{"type":17,"tag":126,"props":5134,"children":5135},{},[5136],{"type":23,"value":5137},"{\n",{"type":17,"tag":126,"props":5139,"children":5140},{"class":310,"line":321},[5141],{"type":17,"tag":126,"props":5142,"children":5143},{},[5144],{"type":23,"value":5145},"    \"ID\": 1,\n",{"type":17,"tag":126,"props":5147,"children":5148},{"class":310,"line":665},[5149],{"type":17,"tag":126,"props":5150,"children":5151},{},[5152],{"type":23,"value":5153},"    \"Name\": \"John Smith\",\n",{"type":17,"tag":126,"props":5155,"children":5156},{"class":310,"line":674},[5157],{"type":17,"tag":126,"props":5158,"children":5159},{},[5160],{"type":23,"value":5161},"    \"Age\": 28,\n",{"type":17,"tag":126,"props":5163,"children":5164},{"class":310,"line":729},[5165],{"type":17,"tag":126,"props":5166,"children":5167},{},[5168],{"type":23,"value":5169},"    \"Address\": {\"City\": \"New York\", \"PostalCode\": \"10001\"},\n",{"type":17,"tag":126,"props":5171,"children":5172},{"class":310,"line":737},[5173],{"type":17,"tag":126,"props":5174,"children":5175},{},[5176],{"type":23,"value":5177},"    \"Department\": \"Sales\",\n",{"type":17,"tag":126,"props":5179,"children":5180},{"class":310,"line":746},[5181],{"type":17,"tag":126,"props":5182,"children":5183},{},[5184],{"type":23,"value":5185},"    \"Salary\": 50000,\n",{"type":17,"tag":126,"props":5187,"children":5188},{"class":310,"line":1337},[5189],{"type":17,"tag":126,"props":5190,"children":5191},{},[5192],{"type":23,"value":5193},"    \"HireDate\": \"2018-05-21\"\n",{"type":17,"tag":126,"props":5195,"children":5196},{"class":310,"line":11},[5197],{"type":17,"tag":126,"props":5198,"children":5199},{},[5200],{"type":23,"value":1303},{"type":17,"tag":26,"props":5202,"children":5203},{},[5204,5206,5212],{"type":23,"value":5205},"You can use Pandas' ",{"type":17,"tag":146,"props":5207,"children":5209},{"className":5208},[],[5210],{"type":23,"value":5211},"json_normalize",{"type":23,"value":5213}," method to flatten the nested fields:",{"type":17,"tag":299,"props":5215,"children":5217},{"code":5216,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\nfrom pandas import json_normalize\n\n# Nested JSON data\ndata = {\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Age\": 28,\n    \"Address\": {\"City\": \"New York\", \"PostalCode\": \"10001\"},\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n\n# Use json_normalize to flatten nested fields\ndf = json_normalize(data)\nprint(df.to_string())\n",[5218],{"type":17,"tag":146,"props":5219,"children":5220},{"__ignoreMap":7},[5221,5240,5261,5268,5276,5291,5312,5332,5351,5399,5420,5441,5458,5465,5472,5480,5496],{"type":17,"tag":126,"props":5222,"children":5223},{"class":310,"line":311},[5224,5228,5232,5236],{"type":17,"tag":126,"props":5225,"children":5226},{"style":337},[5227],{"type":23,"value":638},{"type":17,"tag":126,"props":5229,"children":5230},{"style":325},[5231],{"type":23,"value":643},{"type":17,"tag":126,"props":5233,"children":5234},{"style":337},[5235],{"type":23,"value":648},{"type":17,"tag":126,"props":5237,"children":5238},{"style":325},[5239],{"type":23,"value":653},{"type":17,"tag":126,"props":5241,"children":5242},{"class":310,"line":321},[5243,5248,5252,5256],{"type":17,"tag":126,"props":5244,"children":5245},{"style":337},[5246],{"type":23,"value":5247},"from",{"type":17,"tag":126,"props":5249,"children":5250},{"style":325},[5251],{"type":23,"value":643},{"type":17,"tag":126,"props":5253,"children":5254},{"style":337},[5255],{"type":23,"value":638},{"type":17,"tag":126,"props":5257,"children":5258},{"style":325},[5259],{"type":23,"value":5260}," json_normalize\n",{"type":17,"tag":126,"props":5262,"children":5263},{"class":310,"line":665},[5264],{"type":17,"tag":126,"props":5265,"children":5266},{"emptyLinePlaceholder":659},[5267],{"type":23,"value":662},{"type":17,"tag":126,"props":5269,"children":5270},{"class":310,"line":674},[5271],{"type":17,"tag":126,"props":5272,"children":5273},{"style":315},[5274],{"type":23,"value":5275},"# Nested JSON data\n",{"type":17,"tag":126,"props":5277,"children":5278},{"class":310,"line":729},[5279,5283,5287],{"type":17,"tag":126,"props":5280,"children":5281},{"style":325},[5282],{"type":23,"value":680},{"type":17,"tag":126,"props":5284,"children":5285},{"style":337},[5286],{"type":23,"value":340},{"type":17,"tag":126,"props":5288,"children":5289},{"style":325},[5290],{"type":23,"value":1985},{"type":17,"tag":126,"props":5292,"children":5293},{"class":310,"line":737},[5294,5299,5303,5307],{"type":17,"tag":126,"props":5295,"children":5296},{"style":974},[5297],{"type":23,"value":5298},"    \"ID\"",{"type":17,"tag":126,"props":5300,"children":5301},{"style":325},[5302],{"type":23,"value":1242},{"type":17,"tag":126,"props":5304,"children":5305},{"style":343},[5306],{"type":23,"value":847},{"type":17,"tag":126,"props":5308,"children":5309},{"style":325},[5310],{"type":23,"value":5311},",\n",{"type":17,"tag":126,"props":5313,"children":5314},{"class":310,"line":746},[5315,5319,5323,5328],{"type":17,"tag":126,"props":5316,"children":5317},{"style":974},[5318],{"type":23,"value":1993},{"type":17,"tag":126,"props":5320,"children":5321},{"style":325},[5322],{"type":23,"value":1242},{"type":17,"tag":126,"props":5324,"children":5325},{"style":974},[5326],{"type":23,"value":5327},"\"John Smith\"",{"type":17,"tag":126,"props":5329,"children":5330},{"style":325},[5331],{"type":23,"value":5311},{"type":17,"tag":126,"props":5333,"children":5334},{"class":310,"line":1337},[5335,5339,5343,5347],{"type":17,"tag":126,"props":5336,"children":5337},{"style":974},[5338],{"type":23,"value":2034},{"type":17,"tag":126,"props":5340,"children":5341},{"style":325},[5342],{"type":23,"value":1242},{"type":17,"tag":126,"props":5344,"children":5345},{"style":343},[5346],{"type":23,"value":2043},{"type":17,"tag":126,"props":5348,"children":5349},{"style":325},[5350],{"type":23,"value":5311},{"type":17,"tag":126,"props":5352,"children":5353},{"class":310,"line":11},[5354,5359,5364,5368,5372,5377,5381,5386,5390,5395],{"type":17,"tag":126,"props":5355,"children":5356},{"style":974},[5357],{"type":23,"value":5358},"    \"Address\"",{"type":17,"tag":126,"props":5360,"children":5361},{"style":325},[5362],{"type":23,"value":5363},": {",{"type":17,"tag":126,"props":5365,"children":5366},{"style":974},[5367],{"type":23,"value":3349},{"type":17,"tag":126,"props":5369,"children":5370},{"style":325},[5371],{"type":23,"value":1242},{"type":17,"tag":126,"props":5373,"children":5374},{"style":974},[5375],{"type":23,"value":5376},"\"New York\"",{"type":17,"tag":126,"props":5378,"children":5379},{"style":325},[5380],{"type":23,"value":351},{"type":17,"tag":126,"props":5382,"children":5383},{"style":974},[5384],{"type":23,"value":5385},"\"PostalCode\"",{"type":17,"tag":126,"props":5387,"children":5388},{"style":325},[5389],{"type":23,"value":1242},{"type":17,"tag":126,"props":5391,"children":5392},{"style":974},[5393],{"type":23,"value":5394},"\"10001\"",{"type":17,"tag":126,"props":5396,"children":5397},{"style":325},[5398],{"type":23,"value":2904},{"type":17,"tag":126,"props":5400,"children":5401},{"class":310,"line":2122},[5402,5407,5411,5416],{"type":17,"tag":126,"props":5403,"children":5404},{"style":974},[5405],{"type":23,"value":5406},"    \"Department\"",{"type":17,"tag":126,"props":5408,"children":5409},{"style":325},[5410],{"type":23,"value":1242},{"type":17,"tag":126,"props":5412,"children":5413},{"style":974},[5414],{"type":23,"value":5415},"\"Sales\"",{"type":17,"tag":126,"props":5417,"children":5418},{"style":325},[5419],{"type":23,"value":5311},{"type":17,"tag":126,"props":5421,"children":5422},{"class":310,"line":2140},[5423,5428,5432,5437],{"type":17,"tag":126,"props":5424,"children":5425},{"style":974},[5426],{"type":23,"value":5427},"    \"Salary\"",{"type":17,"tag":126,"props":5429,"children":5430},{"style":325},[5431],{"type":23,"value":1242},{"type":17,"tag":126,"props":5433,"children":5434},{"style":343},[5435],{"type":23,"value":5436},"50000",{"type":17,"tag":126,"props":5438,"children":5439},{"style":325},[5440],{"type":23,"value":5311},{"type":17,"tag":126,"props":5442,"children":5443},{"class":310,"line":2148},[5444,5449,5453],{"type":17,"tag":126,"props":5445,"children":5446},{"style":974},[5447],{"type":23,"value":5448},"    \"HireDate\"",{"type":17,"tag":126,"props":5450,"children":5451},{"style":325},[5452],{"type":23,"value":1242},{"type":17,"tag":126,"props":5454,"children":5455},{"style":974},[5456],{"type":23,"value":5457},"\"2018-05-21\"\n",{"type":17,"tag":126,"props":5459,"children":5460},{"class":310,"line":2157},[5461],{"type":17,"tag":126,"props":5462,"children":5463},{"style":325},[5464],{"type":23,"value":1303},{"type":17,"tag":126,"props":5466,"children":5467},{"class":310,"line":4000},[5468],{"type":17,"tag":126,"props":5469,"children":5470},{"emptyLinePlaceholder":659},[5471],{"type":23,"value":662},{"type":17,"tag":126,"props":5473,"children":5474},{"class":310,"line":4008},[5475],{"type":17,"tag":126,"props":5476,"children":5477},{"style":315},[5478],{"type":23,"value":5479},"# Use json_normalize to flatten nested fields\n",{"type":17,"tag":126,"props":5481,"children":5482},{"class":310,"line":4017},[5483,5487,5491],{"type":17,"tag":126,"props":5484,"children":5485},{"style":325},[5486],{"type":23,"value":2128},{"type":17,"tag":126,"props":5488,"children":5489},{"style":337},[5490],{"type":23,"value":340},{"type":17,"tag":126,"props":5492,"children":5493},{"style":325},[5494],{"type":23,"value":5495}," json_normalize(data)\n",{"type":17,"tag":126,"props":5497,"children":5498},{"class":310,"line":4233},[5499,5503],{"type":17,"tag":126,"props":5500,"children":5501},{"style":343},[5502],{"type":23,"value":752},{"type":17,"tag":126,"props":5504,"children":5505},{"style":325},[5506],{"type":23,"value":4488},{"type":17,"tag":26,"props":5508,"children":5509},{},[5510],{"type":23,"value":762},{"type":17,"tag":299,"props":5512,"children":5514},{"code":5513,"language":766,"meta":7,"className":767,"style":7},"   ID        Name  Age  Department  Salary    HireDate  Address.City  Address.PostalCode\n0   1  John Smith   28      Sales    50000  2018-05-21     New York              10001\n",[5515],{"type":17,"tag":146,"props":5516,"children":5517},{"__ignoreMap":7},[5518,5526],{"type":17,"tag":126,"props":5519,"children":5520},{"class":310,"line":311},[5521],{"type":17,"tag":126,"props":5522,"children":5523},{},[5524],{"type":23,"value":5525},"   ID        Name  Age  Department  Salary    HireDate  Address.City  Address.PostalCode\n",{"type":17,"tag":126,"props":5527,"children":5528},{"class":310,"line":321},[5529],{"type":17,"tag":126,"props":5530,"children":5531},{},[5532],{"type":23,"value":5533},"0   1  John Smith   28      Sales    50000  2018-05-21     New York              10001\n",{"type":17,"tag":26,"props":5535,"children":5536},{},[5537,5539,5544],{"type":23,"value":5538},"For complex JSON files, such as multi-layer nested JSON data from APIs, ",{"type":17,"tag":146,"props":5540,"children":5542},{"className":5541},[],[5543],{"type":23,"value":5211},{"type":23,"value":5545}," can also flatten multiple nested layers based on the path. For example, assume the JSON data has more nested levels:",{"type":17,"tag":299,"props":5547,"children":5549},{"code":5548,"language":4949,"meta":7,"className":4950,"style":7},"{\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Details\": {\n        \"Age\": 28,\n        \"Address\": {\n            \"City\": \"New York\",\n            \"PostalCode\": \"10001\"\n        }\n    },\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n",[5550],{"type":17,"tag":146,"props":5551,"children":5552},{"__ignoreMap":7},[5553,5560,5567,5574,5582,5590,5598,5606,5614,5622,5630,5637,5644,5651],{"type":17,"tag":126,"props":5554,"children":5555},{"class":310,"line":311},[5556],{"type":17,"tag":126,"props":5557,"children":5558},{},[5559],{"type":23,"value":5137},{"type":17,"tag":126,"props":5561,"children":5562},{"class":310,"line":321},[5563],{"type":17,"tag":126,"props":5564,"children":5565},{},[5566],{"type":23,"value":5145},{"type":17,"tag":126,"props":5568,"children":5569},{"class":310,"line":665},[5570],{"type":17,"tag":126,"props":5571,"children":5572},{},[5573],{"type":23,"value":5153},{"type":17,"tag":126,"props":5575,"children":5576},{"class":310,"line":674},[5577],{"type":17,"tag":126,"props":5578,"children":5579},{},[5580],{"type":23,"value":5581},"    \"Details\": {\n",{"type":17,"tag":126,"props":5583,"children":5584},{"class":310,"line":729},[5585],{"type":17,"tag":126,"props":5586,"children":5587},{},[5588],{"type":23,"value":5589},"        \"Age\": 28,\n",{"type":17,"tag":126,"props":5591,"children":5592},{"class":310,"line":737},[5593],{"type":17,"tag":126,"props":5594,"children":5595},{},[5596],{"type":23,"value":5597},"        \"Address\": {\n",{"type":17,"tag":126,"props":5599,"children":5600},{"class":310,"line":746},[5601],{"type":17,"tag":126,"props":5602,"children":5603},{},[5604],{"type":23,"value":5605},"            \"City\": \"New York\",\n",{"type":17,"tag":126,"props":5607,"children":5608},{"class":310,"line":1337},[5609],{"type":17,"tag":126,"props":5610,"children":5611},{},[5612],{"type":23,"value":5613},"            \"PostalCode\": \"10001\"\n",{"type":17,"tag":126,"props":5615,"children":5616},{"class":310,"line":11},[5617],{"type":17,"tag":126,"props":5618,"children":5619},{},[5620],{"type":23,"value":5621},"        }\n",{"type":17,"tag":126,"props":5623,"children":5624},{"class":310,"line":2122},[5625],{"type":17,"tag":126,"props":5626,"children":5627},{},[5628],{"type":23,"value":5629},"    },\n",{"type":17,"tag":126,"props":5631,"children":5632},{"class":310,"line":2140},[5633],{"type":17,"tag":126,"props":5634,"children":5635},{},[5636],{"type":23,"value":5177},{"type":17,"tag":126,"props":5638,"children":5639},{"class":310,"line":2148},[5640],{"type":17,"tag":126,"props":5641,"children":5642},{},[5643],{"type":23,"value":5185},{"type":17,"tag":126,"props":5645,"children":5646},{"class":310,"line":2157},[5647],{"type":17,"tag":126,"props":5648,"children":5649},{},[5650],{"type":23,"value":5193},{"type":17,"tag":126,"props":5652,"children":5653},{"class":310,"line":4000},[5654],{"type":17,"tag":126,"props":5655,"children":5656},{},[5657],{"type":23,"value":1303},{"type":17,"tag":26,"props":5659,"children":5660},{},[5661],{"type":23,"value":5662},"You can specify the path to flatten multiple nested layers:",{"type":17,"tag":299,"props":5664,"children":5666},{"code":5665,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\nfrom pandas import json_normalize\n\n# Complex nested JSON data\ndata = {\n    \"ID\": 1,\n    \"Name\": \"John Smith\",\n    \"Details\": {\n        \"Age\": 28,\n        \"Address\": {\n            \"City\": \"New York\",\n            \"PostalCode\": \"10001\"\n        }\n    },\n    \"Department\": \"Sales\",\n    \"Salary\": 50000,\n    \"HireDate\": \"2018-05-21\"\n}\n\n# Flatten nested layers\ndf = json_normalize(data, sep='_')\nprint(df.to_string())\n",[5667],{"type":17,"tag":146,"props":5668,"children":5669},{"__ignoreMap":7},[5670,5689,5708,5715,5723,5738,5757,5776,5789,5809,5821,5841,5858,5865,5872,5891,5910,5925,5932,5939,5947,5981],{"type":17,"tag":126,"props":5671,"children":5672},{"class":310,"line":311},[5673,5677,5681,5685],{"type":17,"tag":126,"props":5674,"children":5675},{"style":337},[5676],{"type":23,"value":638},{"type":17,"tag":126,"props":5678,"children":5679},{"style":325},[5680],{"type":23,"value":643},{"type":17,"tag":126,"props":5682,"children":5683},{"style":337},[5684],{"type":23,"value":648},{"type":17,"tag":126,"props":5686,"children":5687},{"style":325},[5688],{"type":23,"value":653},{"type":17,"tag":126,"props":5690,"children":5691},{"class":310,"line":321},[5692,5696,5700,5704],{"type":17,"tag":126,"props":5693,"children":5694},{"style":337},[5695],{"type":23,"value":5247},{"type":17,"tag":126,"props":5697,"children":5698},{"style":325},[5699],{"type":23,"value":643},{"type":17,"tag":126,"props":5701,"children":5702},{"style":337},[5703],{"type":23,"value":638},{"type":17,"tag":126,"props":5705,"children":5706},{"style":325},[5707],{"type":23,"value":5260},{"type":17,"tag":126,"props":5709,"children":5710},{"class":310,"line":665},[5711],{"type":17,"tag":126,"props":5712,"children":5713},{"emptyLinePlaceholder":659},[5714],{"type":23,"value":662},{"type":17,"tag":126,"props":5716,"children":5717},{"class":310,"line":674},[5718],{"type":17,"tag":126,"props":5719,"children":5720},{"style":315},[5721],{"type":23,"value":5722},"# Complex nested JSON data\n",{"type":17,"tag":126,"props":5724,"children":5725},{"class":310,"line":729},[5726,5730,5734],{"type":17,"tag":126,"props":5727,"children":5728},{"style":325},[5729],{"type":23,"value":680},{"type":17,"tag":126,"props":5731,"children":5732},{"style":337},[5733],{"type":23,"value":340},{"type":17,"tag":126,"props":5735,"children":5736},{"style":325},[5737],{"type":23,"value":1985},{"type":17,"tag":126,"props":5739,"children":5740},{"class":310,"line":737},[5741,5745,5749,5753],{"type":17,"tag":126,"props":5742,"children":5743},{"style":974},[5744],{"type":23,"value":5298},{"type":17,"tag":126,"props":5746,"children":5747},{"style":325},[5748],{"type":23,"value":1242},{"type":17,"tag":126,"props":5750,"children":5751},{"style":343},[5752],{"type":23,"value":847},{"type":17,"tag":126,"props":5754,"children":5755},{"style":325},[5756],{"type":23,"value":5311},{"type":17,"tag":126,"props":5758,"children":5759},{"class":310,"line":746},[5760,5764,5768,5772],{"type":17,"tag":126,"props":5761,"children":5762},{"style":974},[5763],{"type":23,"value":1993},{"type":17,"tag":126,"props":5765,"children":5766},{"style":325},[5767],{"type":23,"value":1242},{"type":17,"tag":126,"props":5769,"children":5770},{"style":974},[5771],{"type":23,"value":5327},{"type":17,"tag":126,"props":5773,"children":5774},{"style":325},[5775],{"type":23,"value":5311},{"type":17,"tag":126,"props":5777,"children":5778},{"class":310,"line":1337},[5779,5784],{"type":17,"tag":126,"props":5780,"children":5781},{"style":974},[5782],{"type":23,"value":5783},"    \"Details\"",{"type":17,"tag":126,"props":5785,"children":5786},{"style":325},[5787],{"type":23,"value":5788},": {\n",{"type":17,"tag":126,"props":5790,"children":5791},{"class":310,"line":11},[5792,5797,5801,5805],{"type":17,"tag":126,"props":5793,"children":5794},{"style":974},[5795],{"type":23,"value":5796},"        \"Age\"",{"type":17,"tag":126,"props":5798,"children":5799},{"style":325},[5800],{"type":23,"value":1242},{"type":17,"tag":126,"props":5802,"children":5803},{"style":343},[5804],{"type":23,"value":2043},{"type":17,"tag":126,"props":5806,"children":5807},{"style":325},[5808],{"type":23,"value":5311},{"type":17,"tag":126,"props":5810,"children":5811},{"class":310,"line":2122},[5812,5817],{"type":17,"tag":126,"props":5813,"children":5814},{"style":974},[5815],{"type":23,"value":5816},"        \"Address\"",{"type":17,"tag":126,"props":5818,"children":5819},{"style":325},[5820],{"type":23,"value":5788},{"type":17,"tag":126,"props":5822,"children":5823},{"class":310,"line":2140},[5824,5829,5833,5837],{"type":17,"tag":126,"props":5825,"children":5826},{"style":974},[5827],{"type":23,"value":5828},"            \"City\"",{"type":17,"tag":126,"props":5830,"children":5831},{"style":325},[5832],{"type":23,"value":1242},{"type":17,"tag":126,"props":5834,"children":5835},{"style":974},[5836],{"type":23,"value":5376},{"type":17,"tag":126,"props":5838,"children":5839},{"style":325},[5840],{"type":23,"value":5311},{"type":17,"tag":126,"props":5842,"children":5843},{"class":310,"line":2148},[5844,5849,5853],{"type":17,"tag":126,"props":5845,"children":5846},{"style":974},[5847],{"type":23,"value":5848},"            \"PostalCode\"",{"type":17,"tag":126,"props":5850,"children":5851},{"style":325},[5852],{"type":23,"value":1242},{"type":17,"tag":126,"props":5854,"children":5855},{"style":974},[5856],{"type":23,"value":5857},"\"10001\"\n",{"type":17,"tag":126,"props":5859,"children":5860},{"class":310,"line":2157},[5861],{"type":17,"tag":126,"props":5862,"children":5863},{"style":325},[5864],{"type":23,"value":5621},{"type":17,"tag":126,"props":5866,"children":5867},{"class":310,"line":4000},[5868],{"type":17,"tag":126,"props":5869,"children":5870},{"style":325},[5871],{"type":23,"value":5629},{"type":17,"tag":126,"props":5873,"children":5874},{"class":310,"line":4008},[5875,5879,5883,5887],{"type":17,"tag":126,"props":5876,"children":5877},{"style":974},[5878],{"type":23,"value":5406},{"type":17,"tag":126,"props":5880,"children":5881},{"style":325},[5882],{"type":23,"value":1242},{"type":17,"tag":126,"props":5884,"children":5885},{"style":974},[5886],{"type":23,"value":5415},{"type":17,"tag":126,"props":5888,"children":5889},{"style":325},[5890],{"type":23,"value":5311},{"type":17,"tag":126,"props":5892,"children":5893},{"class":310,"line":4017},[5894,5898,5902,5906],{"type":17,"tag":126,"props":5895,"children":5896},{"style":974},[5897],{"type":23,"value":5427},{"type":17,"tag":126,"props":5899,"children":5900},{"style":325},[5901],{"type":23,"value":1242},{"type":17,"tag":126,"props":5903,"children":5904},{"style":343},[5905],{"type":23,"value":5436},{"type":17,"tag":126,"props":5907,"children":5908},{"style":325},[5909],{"type":23,"value":5311},{"type":17,"tag":126,"props":5911,"children":5912},{"class":310,"line":4233},[5913,5917,5921],{"type":17,"tag":126,"props":5914,"children":5915},{"style":974},[5916],{"type":23,"value":5448},{"type":17,"tag":126,"props":5918,"children":5919},{"style":325},[5920],{"type":23,"value":1242},{"type":17,"tag":126,"props":5922,"children":5923},{"style":974},[5924],{"type":23,"value":5457},{"type":17,"tag":126,"props":5926,"children":5927},{"class":310,"line":4242},[5928],{"type":17,"tag":126,"props":5929,"children":5930},{"style":325},[5931],{"type":23,"value":1303},{"type":17,"tag":126,"props":5933,"children":5934},{"class":310,"line":4251},[5935],{"type":17,"tag":126,"props":5936,"children":5937},{"emptyLinePlaceholder":659},[5938],{"type":23,"value":662},{"type":17,"tag":126,"props":5940,"children":5941},{"class":310,"line":4260},[5942],{"type":17,"tag":126,"props":5943,"children":5944},{"style":315},[5945],{"type":23,"value":5946},"# Flatten nested layers\n",{"type":17,"tag":126,"props":5948,"children":5949},{"class":310,"line":4269},[5950,5954,5958,5963,5968,5972,5977],{"type":17,"tag":126,"props":5951,"children":5952},{"style":325},[5953],{"type":23,"value":2128},{"type":17,"tag":126,"props":5955,"children":5956},{"style":337},[5957],{"type":23,"value":340},{"type":17,"tag":126,"props":5959,"children":5960},{"style":325},[5961],{"type":23,"value":5962}," json_normalize(data, ",{"type":17,"tag":126,"props":5964,"children":5965},{"style":331},[5966],{"type":23,"value":5967},"sep",{"type":17,"tag":126,"props":5969,"children":5970},{"style":337},[5971],{"type":23,"value":340},{"type":17,"tag":126,"props":5973,"children":5974},{"style":974},[5975],{"type":23,"value":5976},"'_'",{"type":17,"tag":126,"props":5978,"children":5979},{"style":325},[5980],{"type":23,"value":438},{"type":17,"tag":126,"props":5982,"children":5983},{"class":310,"line":4278},[5984,5988],{"type":17,"tag":126,"props":5985,"children":5986},{"style":343},[5987],{"type":23,"value":752},{"type":17,"tag":126,"props":5989,"children":5990},{"style":325},[5991],{"type":23,"value":4488},{"type":17,"tag":26,"props":5993,"children":5994},{},[5995],{"type":23,"value":762},{"type":17,"tag":299,"props":5997,"children":5999},{"code":5998,"language":766,"meta":7,"className":767,"style":7},"   ID        Name  Details_Age  Details_Address_City  Details_Address_PostalCode  Department  Salary    HireDate\n0   1  John Smith           28              New York                      10001       Sales   50000  2018-05-21\n",[6000],{"type":17,"tag":146,"props":6001,"children":6002},{"__ignoreMap":7},[6003,6011],{"type":17,"tag":126,"props":6004,"children":6005},{"class":310,"line":311},[6006],{"type":17,"tag":126,"props":6007,"children":6008},{},[6009],{"type":23,"value":6010},"   ID        Name  Details_Age  Details_Address_City  Details_Address_PostalCode  Department  Salary    HireDate\n",{"type":17,"tag":126,"props":6012,"children":6013},{"class":310,"line":321},[6014],{"type":17,"tag":126,"props":6015,"children":6016},{},[6017],{"type":23,"value":6018},"0   1  John Smith           28              New York                      10001       Sales   50000  2018-05-21\n",{"type":17,"tag":26,"props":6020,"children":6021},{},[6022,6024,6030],{"type":23,"value":6023},"Here we used ",{"type":17,"tag":146,"props":6025,"children":6027},{"className":6026},[],[6028],{"type":23,"value":6029},"sep='_'",{"type":23,"value":6031}," to control the naming format of the flattened nested fields, making the DataFrame clearer and easier to read.",{"type":17,"tag":3082,"props":6033,"children":6034},{"start":665},[6035],{"type":17,"tag":51,"props":6036,"children":6037},{},[6038,6040,6046],{"type":23,"value":6039},"Save DataFrame as JSON: After processing the JSON data, you can save it back to JSON format. Pandas provides the ",{"type":17,"tag":146,"props":6041,"children":6043},{"className":6042},[],[6044],{"type":23,"value":6045},"to_json()",{"type":23,"value":6047}," method to accomplish this task.",{"type":17,"tag":299,"props":6049,"children":6051},{"code":6050,"language":302,"meta":7,"className":303,"style":7},"# Save DataFrame as JSON file\ndf.to_json('output.json', orient='records', lines=True)\n",[6052],{"type":17,"tag":146,"props":6053,"children":6054},{"__ignoreMap":7},[6055,6063],{"type":17,"tag":126,"props":6056,"children":6057},{"class":310,"line":311},[6058],{"type":17,"tag":126,"props":6059,"children":6060},{"style":315},[6061],{"type":23,"value":6062},"# Save DataFrame as JSON file\n",{"type":17,"tag":126,"props":6064,"children":6065},{"class":310,"line":321},[6066,6071,6076,6080,6085,6089,6094,6098,6103,6107,6111],{"type":17,"tag":126,"props":6067,"children":6068},{"style":325},[6069],{"type":23,"value":6070},"df.to_json(",{"type":17,"tag":126,"props":6072,"children":6073},{"style":974},[6074],{"type":23,"value":6075},"'output.json'",{"type":17,"tag":126,"props":6077,"children":6078},{"style":325},[6079],{"type":23,"value":351},{"type":17,"tag":126,"props":6081,"children":6082},{"style":331},[6083],{"type":23,"value":6084},"orient",{"type":17,"tag":126,"props":6086,"children":6087},{"style":337},[6088],{"type":23,"value":340},{"type":17,"tag":126,"props":6090,"children":6091},{"style":974},[6092],{"type":23,"value":6093},"'records'",{"type":17,"tag":126,"props":6095,"children":6096},{"style":325},[6097],{"type":23,"value":351},{"type":17,"tag":126,"props":6099,"children":6100},{"style":331},[6101],{"type":23,"value":6102},"lines",{"type":17,"tag":126,"props":6104,"children":6105},{"style":337},[6106],{"type":23,"value":340},{"type":17,"tag":126,"props":6108,"children":6109},{"style":343},[6110],{"type":23,"value":574},{"type":17,"tag":126,"props":6112,"children":6113},{"style":325},[6114],{"type":23,"value":438},{"type":17,"tag":47,"props":6116,"children":6117},{},[6118,6129],{"type":17,"tag":51,"props":6119,"children":6120},{},[6121,6127],{"type":17,"tag":146,"props":6122,"children":6124},{"className":6123},[],[6125],{"type":23,"value":6126},"orient='records'",{"type":23,"value":6128}," specifies to output each row as a JSON object.",{"type":17,"tag":51,"props":6130,"children":6131},{},[6132,6138],{"type":17,"tag":146,"props":6133,"children":6135},{"className":6134},[],[6136],{"type":23,"value":6137},"lines=True",{"type":23,"value":6139}," is used to output a multi-line JSON file, with each line being a separate JSON record, suitable for handling large datasets.",{"type":17,"tag":26,"props":6141,"children":6142},{},[6143],{"type":23,"value":6144},"In summary, Pandas is a powerful tool for handling JSON data, especially for complex nested JSON. Pandas provides convenient tools to convert data into tabular format for easy analysis and manipulation. With Pandas, we can easily read, process, and store JSON data, simplifying the data analysis process.",{"type":17,"tag":18,"props":6146,"children":6148},{"id":6147},"_4-pandas-and-data-cleaning",[6149],{"type":23,"value":6150},"4. Pandas and Data Cleaning",{"type":17,"tag":26,"props":6152,"children":6153},{},[6154],{"type":23,"value":6155},"Data cleaning is the process of handling useless data. In practice, it is common to encounter missing data, incorrect data formats, erroneous data, or duplicate data. To make the results of data analysis more accurate, these useless data need to be processed. Pandas provides a variety of functions to help clean, inspect, and correct issues in the data.",{"type":17,"tag":134,"props":6157,"children":6159},{"id":6158},"_1-handling-missing-values",[6160],{"type":23,"value":6161},"1. Handling Missing Values",{"type":17,"tag":26,"props":6163,"children":6164},{},[6165],{"type":23,"value":6166},"Handling missing values is a very common and fundamental task in data cleaning. Pandas provides rich methods to find, count, and handle these missing values. Below, we will explain in detail how to effectively use Pandas to handle missing values, especially the best practices for deleting missing values.",{"type":17,"tag":26,"props":6168,"children":6169},{},[6170],{"type":17,"tag":608,"props":6171,"children":6173},{"alt":7,"src":6172},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E7%A9%BA%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86en.png",[],{"type":17,"tag":3082,"props":6175,"children":6176},{},[6177],{"type":17,"tag":51,"props":6178,"children":6179},{},[6180,6182,6187,6189,6195,6197,6202],{"type":23,"value":6181},"Find Missing Values: To find missing values in the data, you can use the ",{"type":17,"tag":146,"props":6183,"children":6185},{"className":6184},[],[6186],{"type":23,"value":3756},{"type":23,"value":6188}," or ",{"type":17,"tag":146,"props":6190,"children":6192},{"className":6191},[],[6193],{"type":23,"value":6194},"isnull()",{"type":23,"value":6196}," methods. These two methods are equivalent and will return a boolean DataFrame where ",{"type":17,"tag":146,"props":6198,"children":6200},{"className":6199},[],[6201],{"type":23,"value":574},{"type":23,"value":6203}," indicates the value is missing.",{"type":17,"tag":299,"props":6205,"children":6207},{"code":6206,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create data with missing values\ndata = {\n    \"Name\": [\"Alice\", \"Bob\", None],\n    \"Age\": [25, None, 30],\n    \"Salary\": [50000, 60000, None]\n}\ndf = pd.DataFrame(data)\n\n# Find missing values\nprint(df.isna())\n",[6208],{"type":17,"tag":146,"props":6209,"children":6210},{"__ignoreMap":7},[6211,6230,6237,6245,6260,6297,6332,6368,6375,6390,6397,6405],{"type":17,"tag":126,"props":6212,"children":6213},{"class":310,"line":311},[6214,6218,6222,6226],{"type":17,"tag":126,"props":6215,"children":6216},{"style":337},[6217],{"type":23,"value":638},{"type":17,"tag":126,"props":6219,"children":6220},{"style":325},[6221],{"type":23,"value":643},{"type":17,"tag":126,"props":6223,"children":6224},{"style":337},[6225],{"type":23,"value":648},{"type":17,"tag":126,"props":6227,"children":6228},{"style":325},[6229],{"type":23,"value":653},{"type":17,"tag":126,"props":6231,"children":6232},{"class":310,"line":321},[6233],{"type":17,"tag":126,"props":6234,"children":6235},{"emptyLinePlaceholder":659},[6236],{"type":23,"value":662},{"type":17,"tag":126,"props":6238,"children":6239},{"class":310,"line":665},[6240],{"type":17,"tag":126,"props":6241,"children":6242},{"style":315},[6243],{"type":23,"value":6244},"# Create data with missing values\n",{"type":17,"tag":126,"props":6246,"children":6247},{"class":310,"line":674},[6248,6252,6256],{"type":17,"tag":126,"props":6249,"children":6250},{"style":325},[6251],{"type":23,"value":680},{"type":17,"tag":126,"props":6253,"children":6254},{"style":337},[6255],{"type":23,"value":340},{"type":17,"tag":126,"props":6257,"children":6258},{"style":325},[6259],{"type":23,"value":1985},{"type":17,"tag":126,"props":6261,"children":6262},{"class":310,"line":729},[6263,6267,6271,6276,6280,6285,6289,6293],{"type":17,"tag":126,"props":6264,"children":6265},{"style":974},[6266],{"type":23,"value":1993},{"type":17,"tag":126,"props":6268,"children":6269},{"style":325},[6270],{"type":23,"value":1998},{"type":17,"tag":126,"props":6272,"children":6273},{"style":974},[6274],{"type":23,"value":6275},"\"Alice\"",{"type":17,"tag":126,"props":6277,"children":6278},{"style":325},[6279],{"type":23,"value":351},{"type":17,"tag":126,"props":6281,"children":6282},{"style":974},[6283],{"type":23,"value":6284},"\"Bob\"",{"type":17,"tag":126,"props":6286,"children":6287},{"style":325},[6288],{"type":23,"value":351},{"type":17,"tag":126,"props":6290,"children":6291},{"style":343},[6292],{"type":23,"value":346},{"type":17,"tag":126,"props":6294,"children":6295},{"style":325},[6296],{"type":23,"value":2026},{"type":17,"tag":126,"props":6298,"children":6299},{"class":310,"line":737},[6300,6304,6308,6312,6316,6320,6324,6328],{"type":17,"tag":126,"props":6301,"children":6302},{"style":974},[6303],{"type":23,"value":2034},{"type":17,"tag":126,"props":6305,"children":6306},{"style":325},[6307],{"type":23,"value":1998},{"type":17,"tag":126,"props":6309,"children":6310},{"style":343},[6311],{"type":23,"value":2061},{"type":17,"tag":126,"props":6313,"children":6314},{"style":325},[6315],{"type":23,"value":351},{"type":17,"tag":126,"props":6317,"children":6318},{"style":343},[6319],{"type":23,"value":346},{"type":17,"tag":126,"props":6321,"children":6322},{"style":325},[6323],{"type":23,"value":351},{"type":17,"tag":126,"props":6325,"children":6326},{"style":343},[6327],{"type":23,"value":1281},{"type":17,"tag":126,"props":6329,"children":6330},{"style":325},[6331],{"type":23,"value":2026},{"type":17,"tag":126,"props":6333,"children":6334},{"class":310,"line":746},[6335,6339,6343,6347,6351,6356,6360,6364],{"type":17,"tag":126,"props":6336,"children":6337},{"style":974},[6338],{"type":23,"value":5427},{"type":17,"tag":126,"props":6340,"children":6341},{"style":325},[6342],{"type":23,"value":1998},{"type":17,"tag":126,"props":6344,"children":6345},{"style":343},[6346],{"type":23,"value":5436},{"type":17,"tag":126,"props":6348,"children":6349},{"style":325},[6350],{"type":23,"value":351},{"type":17,"tag":126,"props":6352,"children":6353},{"style":343},[6354],{"type":23,"value":6355},"60000",{"type":17,"tag":126,"props":6357,"children":6358},{"style":325},[6359],{"type":23,"value":351},{"type":17,"tag":126,"props":6361,"children":6362},{"style":343},[6363],{"type":23,"value":346},{"type":17,"tag":126,"props":6365,"children":6366},{"style":325},[6367],{"type":23,"value":2105},{"type":17,"tag":126,"props":6369,"children":6370},{"class":310,"line":1337},[6371],{"type":17,"tag":126,"props":6372,"children":6373},{"style":325},[6374],{"type":23,"value":1303},{"type":17,"tag":126,"props":6376,"children":6377},{"class":310,"line":11},[6378,6382,6386],{"type":17,"tag":126,"props":6379,"children":6380},{"style":325},[6381],{"type":23,"value":2128},{"type":17,"tag":126,"props":6383,"children":6384},{"style":337},[6385],{"type":23,"value":340},{"type":17,"tag":126,"props":6387,"children":6388},{"style":325},[6389],{"type":23,"value":2137},{"type":17,"tag":126,"props":6391,"children":6392},{"class":310,"line":2122},[6393],{"type":17,"tag":126,"props":6394,"children":6395},{"emptyLinePlaceholder":659},[6396],{"type":23,"value":662},{"type":17,"tag":126,"props":6398,"children":6399},{"class":310,"line":2140},[6400],{"type":17,"tag":126,"props":6401,"children":6402},{"style":315},[6403],{"type":23,"value":6404},"# Find missing values\n",{"type":17,"tag":126,"props":6406,"children":6407},{"class":310,"line":2148},[6408,6412],{"type":17,"tag":126,"props":6409,"children":6410},{"style":343},[6411],{"type":23,"value":752},{"type":17,"tag":126,"props":6413,"children":6414},{"style":325},[6415],{"type":23,"value":6416},"(df.isna())\n",{"type":17,"tag":26,"props":6418,"children":6419},{},[6420],{"type":23,"value":762},{"type":17,"tag":299,"props":6422,"children":6424},{"code":6423,"language":766,"meta":7,"className":767,"style":7},"    Name    Age  Salary\n0  False  False   False\n1  False   True   False\n2   True  False    True\n",[6425],{"type":17,"tag":146,"props":6426,"children":6427},{"__ignoreMap":7},[6428,6436,6444,6452],{"type":17,"tag":126,"props":6429,"children":6430},{"class":310,"line":311},[6431],{"type":17,"tag":126,"props":6432,"children":6433},{},[6434],{"type":23,"value":6435},"    Name    Age  Salary\n",{"type":17,"tag":126,"props":6437,"children":6438},{"class":310,"line":321},[6439],{"type":17,"tag":126,"props":6440,"children":6441},{},[6442],{"type":23,"value":6443},"0  False  False   False\n",{"type":17,"tag":126,"props":6445,"children":6446},{"class":310,"line":665},[6447],{"type":17,"tag":126,"props":6448,"children":6449},{},[6450],{"type":23,"value":6451},"1  False   True   False\n",{"type":17,"tag":126,"props":6453,"children":6454},{"class":310,"line":674},[6455],{"type":17,"tag":126,"props":6456,"children":6457},{},[6458],{"type":23,"value":6459},"2   True  False    True\n",{"type":17,"tag":119,"props":6461,"children":6462},{},[6463,6502],{"type":17,"tag":26,"props":6464,"children":6465},{},[6466,6470,6472,6477,6479,6485,6486,6492,6494,6500],{"type":17,"tag":126,"props":6467,"children":6468},{},[6469],{"type":23,"value":130},{"type":23,"value":6471},"\nIt should be noted that in some cases, missing values may not only appear as standard ",{"type":17,"tag":146,"props":6473,"children":6475},{"className":6474},[],[6476],{"type":23,"value":244},{"type":23,"value":6478},", but also in other forms such as ",{"type":17,"tag":146,"props":6480,"children":6482},{"className":6481},[],[6483],{"type":23,"value":6484},"\"n/a\"",{"type":23,"value":6188},{"type":17,"tag":146,"props":6487,"children":6489},{"className":6488},[],[6490],{"type":23,"value":6491},"\"--\"",{"type":23,"value":6493},". Pandas provides the ",{"type":17,"tag":146,"props":6495,"children":6497},{"className":6496},[],[6498],{"type":23,"value":6499},"na_values",{"type":23,"value":6501}," parameter, allowing us to specify these custom missing value types when reading data.",{"type":17,"tag":299,"props":6503,"children":6505},{"code":6504,"language":302,"meta":7,"className":303,"style":7},"# Custom missing value forms\nmissing_values = [\"n/a\", \"na\", \"--\"]\ndf = pd.read_csv('example.csv', na_values=missing_values)\n",[6506],{"type":17,"tag":146,"props":6507,"children":6508},{"__ignoreMap":7},[6509,6517,6558],{"type":17,"tag":126,"props":6510,"children":6511},{"class":310,"line":311},[6512],{"type":17,"tag":126,"props":6513,"children":6514},{"style":315},[6515],{"type":23,"value":6516},"# Custom missing value forms\n",{"type":17,"tag":126,"props":6518,"children":6519},{"class":310,"line":321},[6520,6525,6529,6533,6537,6541,6546,6550,6554],{"type":17,"tag":126,"props":6521,"children":6522},{"style":325},[6523],{"type":23,"value":6524},"missing_values ",{"type":17,"tag":126,"props":6526,"children":6527},{"style":337},[6528],{"type":23,"value":340},{"type":17,"tag":126,"props":6530,"children":6531},{"style":325},[6532],{"type":23,"value":3363},{"type":17,"tag":126,"props":6534,"children":6535},{"style":974},[6536],{"type":23,"value":6484},{"type":17,"tag":126,"props":6538,"children":6539},{"style":325},[6540],{"type":23,"value":351},{"type":17,"tag":126,"props":6542,"children":6543},{"style":974},[6544],{"type":23,"value":6545},"\"na\"",{"type":17,"tag":126,"props":6547,"children":6548},{"style":325},[6549],{"type":23,"value":351},{"type":17,"tag":126,"props":6551,"children":6552},{"style":974},[6553],{"type":23,"value":6491},{"type":17,"tag":126,"props":6555,"children":6556},{"style":325},[6557],{"type":23,"value":2105},{"type":17,"tag":126,"props":6559,"children":6560},{"class":310,"line":665},[6561,6565,6569,6573,6577,6581,6585,6589],{"type":17,"tag":126,"props":6562,"children":6563},{"style":325},[6564],{"type":23,"value":2128},{"type":17,"tag":126,"props":6566,"children":6567},{"style":337},[6568],{"type":23,"value":340},{"type":17,"tag":126,"props":6570,"children":6571},{"style":325},[6572],{"type":23,"value":4452},{"type":17,"tag":126,"props":6574,"children":6575},{"style":974},[6576],{"type":23,"value":4457},{"type":17,"tag":126,"props":6578,"children":6579},{"style":325},[6580],{"type":23,"value":351},{"type":17,"tag":126,"props":6582,"children":6583},{"style":331},[6584],{"type":23,"value":6499},{"type":17,"tag":126,"props":6586,"children":6587},{"style":337},[6588],{"type":23,"value":340},{"type":17,"tag":126,"props":6590,"children":6591},{"style":325},[6592],{"type":23,"value":6593},"missing_values)\n",{"type":17,"tag":3082,"props":6595,"children":6596},{"start":321},[6597],{"type":17,"tag":51,"props":6598,"children":6599},{},[6600,6602,6607,6608,6614,6616,6621,6623,6628],{"type":23,"value":6601},"Count Missing Values: You can combine the ",{"type":17,"tag":146,"props":6603,"children":6605},{"className":6604},[],[6606],{"type":23,"value":3756},{"type":23,"value":89},{"type":17,"tag":146,"props":6609,"children":6611},{"className":6610},[],[6612],{"type":23,"value":6613},"sum()",{"type":23,"value":6615}," methods to count the number of missing values in each column. The boolean values returned by ",{"type":17,"tag":146,"props":6617,"children":6619},{"className":6618},[],[6620],{"type":23,"value":3756},{"type":23,"value":6622}," can be summed using ",{"type":17,"tag":146,"props":6624,"children":6626},{"className":6625},[],[6627],{"type":23,"value":6613},{"type":23,"value":6629},", showing the number of missing values in each column.",{"type":17,"tag":299,"props":6631,"children":6633},{"code":6632,"language":302,"meta":7,"className":303,"style":7},"# Count the number of missing values in each column\nprint(df.isna().sum())\n",[6634],{"type":17,"tag":146,"props":6635,"children":6636},{"__ignoreMap":7},[6637,6645],{"type":17,"tag":126,"props":6638,"children":6639},{"class":310,"line":311},[6640],{"type":17,"tag":126,"props":6641,"children":6642},{"style":315},[6643],{"type":23,"value":6644},"# Count the number of missing values in each column\n",{"type":17,"tag":126,"props":6646,"children":6647},{"class":310,"line":321},[6648,6652],{"type":17,"tag":126,"props":6649,"children":6650},{"style":343},[6651],{"type":23,"value":752},{"type":17,"tag":126,"props":6653,"children":6654},{"style":325},[6655],{"type":23,"value":6656},"(df.isna().sum())\n",{"type":17,"tag":26,"props":6658,"children":6659},{},[6660],{"type":23,"value":762},{"type":17,"tag":299,"props":6662,"children":6664},{"code":6663,"language":766,"meta":7,"className":767,"style":7},"Name      1\nAge       1\nSalary    1\ndtype: int64\n",[6665],{"type":17,"tag":146,"props":6666,"children":6667},{"__ignoreMap":7},[6668,6676,6684,6692],{"type":17,"tag":126,"props":6669,"children":6670},{"class":310,"line":311},[6671],{"type":17,"tag":126,"props":6672,"children":6673},{},[6674],{"type":23,"value":6675},"Name      1\n",{"type":17,"tag":126,"props":6677,"children":6678},{"class":310,"line":321},[6679],{"type":17,"tag":126,"props":6680,"children":6681},{},[6682],{"type":23,"value":6683},"Age       1\n",{"type":17,"tag":126,"props":6685,"children":6686},{"class":310,"line":665},[6687],{"type":17,"tag":126,"props":6688,"children":6689},{},[6690],{"type":23,"value":6691},"Salary    1\n",{"type":17,"tag":126,"props":6693,"children":6694},{"class":310,"line":674},[6695],{"type":17,"tag":126,"props":6696,"children":6697},{},[6698],{"type":23,"value":811},{"type":17,"tag":3082,"props":6700,"children":6701},{"start":665},[6702],{"type":17,"tag":51,"props":6703,"children":6704},{},[6705,6707,6713,6715,6720],{"type":23,"value":6706},"Delete Missing Values: When handling missing values, deleting rows or columns containing missing values is a common operation, especially when the proportion of missing data is large. You can use the ",{"type":17,"tag":146,"props":6708,"children":6710},{"className":6709},[],[6711],{"type":23,"value":6712},"dropna()",{"type":23,"value":6714}," method to delete missing values. ",{"type":17,"tag":146,"props":6716,"children":6718},{"className":6717},[],[6719],{"type":23,"value":6712},{"type":23,"value":6721}," provides a variety of flexible parameters to decide whether to delete entire rows or columns, or only under certain conditions.",{"type":17,"tag":299,"props":6723,"children":6725},{"code":6724,"language":302,"meta":7,"className":303,"style":7},"# Syntax:\nDataFrame.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\n",[6726],{"type":17,"tag":146,"props":6727,"children":6728},{"__ignoreMap":7},[6729,6737],{"type":17,"tag":126,"props":6730,"children":6731},{"class":310,"line":311},[6732],{"type":17,"tag":126,"props":6733,"children":6734},{"style":315},[6735],{"type":23,"value":6736},"# Syntax:\n",{"type":17,"tag":126,"props":6738,"children":6739},{"class":310,"line":321},[6740,6745,6749,6753,6757,6761,6766,6770,6775,6779,6784,6788,6792,6796,6801,6805,6809,6813,6818,6822,6826],{"type":17,"tag":126,"props":6741,"children":6742},{"style":325},[6743],{"type":23,"value":6744},"DataFrame.dropna(",{"type":17,"tag":126,"props":6746,"children":6747},{"style":331},[6748],{"type":23,"value":3479},{"type":17,"tag":126,"props":6750,"children":6751},{"style":337},[6752],{"type":23,"value":340},{"type":17,"tag":126,"props":6754,"children":6755},{"style":343},[6756],{"type":23,"value":3993},{"type":17,"tag":126,"props":6758,"children":6759},{"style":325},[6760],{"type":23,"value":351},{"type":17,"tag":126,"props":6762,"children":6763},{"style":331},[6764],{"type":23,"value":6765},"how",{"type":17,"tag":126,"props":6767,"children":6768},{"style":337},[6769],{"type":23,"value":340},{"type":17,"tag":126,"props":6771,"children":6772},{"style":974},[6773],{"type":23,"value":6774},"'any'",{"type":17,"tag":126,"props":6776,"children":6777},{"style":325},[6778],{"type":23,"value":351},{"type":17,"tag":126,"props":6780,"children":6781},{"style":331},[6782],{"type":23,"value":6783},"thresh",{"type":17,"tag":126,"props":6785,"children":6786},{"style":337},[6787],{"type":23,"value":340},{"type":17,"tag":126,"props":6789,"children":6790},{"style":343},[6791],{"type":23,"value":346},{"type":17,"tag":126,"props":6793,"children":6794},{"style":325},[6795],{"type":23,"value":351},{"type":17,"tag":126,"props":6797,"children":6798},{"style":331},[6799],{"type":23,"value":6800},"subset",{"type":17,"tag":126,"props":6802,"children":6803},{"style":337},[6804],{"type":23,"value":340},{"type":17,"tag":126,"props":6806,"children":6807},{"style":343},[6808],{"type":23,"value":346},{"type":17,"tag":126,"props":6810,"children":6811},{"style":325},[6812],{"type":23,"value":351},{"type":17,"tag":126,"props":6814,"children":6815},{"style":331},[6816],{"type":23,"value":6817},"inplace",{"type":17,"tag":126,"props":6819,"children":6820},{"style":337},[6821],{"type":23,"value":340},{"type":17,"tag":126,"props":6823,"children":6824},{"style":343},[6825],{"type":23,"value":416},{"type":17,"tag":126,"props":6827,"children":6828},{"style":325},[6829],{"type":23,"value":438},{"type":17,"tag":26,"props":6831,"children":6832},{},[6833],{"type":23,"value":6834},"Parameter explanation:",{"type":17,"tag":47,"props":6836,"children":6837},{},[6838,6862,6887,6912,6922],{"type":17,"tag":51,"props":6839,"children":6840},{},[6841,6846,6848,6853,6855,6860],{"type":17,"tag":146,"props":6842,"children":6844},{"className":6843},[],[6845],{"type":23,"value":3479},{"type":23,"value":6847},": Specifies the direction of deletion. The default is ",{"type":17,"tag":146,"props":6849,"children":6851},{"className":6850},[],[6852],{"type":23,"value":3993},{"type":23,"value":6854},", which deletes entire rows containing missing values; if set to ",{"type":17,"tag":146,"props":6856,"children":6858},{"className":6857},[],[6859],{"type":23,"value":847},{"type":23,"value":6861},", it deletes entire columns containing missing values.",{"type":17,"tag":51,"props":6863,"children":6864},{},[6865,6870,6872,6877,6879,6885],{"type":17,"tag":146,"props":6866,"children":6868},{"className":6867},[],[6869],{"type":23,"value":6765},{"type":23,"value":6871},": Specifies the condition for deletion. The default value is ",{"type":17,"tag":146,"props":6873,"children":6875},{"className":6874},[],[6876],{"type":23,"value":6774},{"type":23,"value":6878},", which deletes if any value in a row or column is missing; if set to ",{"type":17,"tag":146,"props":6880,"children":6882},{"className":6881},[],[6883],{"type":23,"value":6884},"'all'",{"type":23,"value":6886},", it deletes only if all values in a row or column are missing.",{"type":17,"tag":51,"props":6888,"children":6889},{},[6890,6895,6897,6902,6904,6910],{"type":17,"tag":146,"props":6891,"children":6893},{"className":6892},[],[6894],{"type":23,"value":6783},{"type":23,"value":6896},": Sets a threshold, requiring the row or column to have at least ",{"type":17,"tag":146,"props":6898,"children":6900},{"className":6899},[],[6901],{"type":23,"value":6783},{"type":23,"value":6903}," non-missing values to be retained. For example, if ",{"type":17,"tag":146,"props":6905,"children":6907},{"className":6906},[],[6908],{"type":23,"value":6909},"thresh=2",{"type":23,"value":6911},", it means retaining rows or columns with at least two non-missing values.",{"type":17,"tag":51,"props":6913,"children":6914},{},[6915,6920],{"type":17,"tag":146,"props":6916,"children":6918},{"className":6917},[],[6919],{"type":23,"value":6800},{"type":23,"value":6921},": Specifies the columns to check for missing values. If you only need to check specific columns, you can pass a list of column names.",{"type":17,"tag":51,"props":6923,"children":6924},{},[6925,6930,6932,6937,6939,6944],{"type":17,"tag":146,"props":6926,"children":6928},{"className":6927},[],[6929],{"type":23,"value":6817},{"type":23,"value":6931},": If set to ",{"type":17,"tag":146,"props":6933,"children":6935},{"className":6934},[],[6936],{"type":23,"value":574},{"type":23,"value":6938},", the deletion operation will be performed on the original DataFrame and will not return a new object; if ",{"type":17,"tag":146,"props":6940,"children":6942},{"className":6941},[],[6943],{"type":23,"value":416},{"type":23,"value":6945}," (default), it will return a new DataFrame.",{"type":17,"tag":26,"props":6947,"children":6948},{},[6949,6951,6956],{"type":23,"value":6950},"Run the following examples separately to see the comparison with the original ",{"type":17,"tag":146,"props":6952,"children":6954},{"className":6953},[],[6955],{"type":23,"value":87},{"type":23,"value":1175},{"type":17,"tag":299,"props":6958,"children":6960},{"code":6959,"language":302,"meta":7,"className":303,"style":7},"# Delete rows containing any missing values\ndf_cleaned = df.dropna()\nprint(df_cleaned)\n\n# Delete rows with missing values only in 'Name' and 'Age' columns\ndf_cleaned_subset = df.dropna(subset=['Name', 'Age'])\nprint(df_cleaned_subset)\n\n# Delete rows containing all missing values\ndf_cleaned_all = df.dropna(how='all')\nprint(df_cleaned_all)\n\n# Retain rows with at least two non-missing values\ndf_thresh = df.dropna(thresh=2)\nprint(df_thresh)\n",[6961],{"type":17,"tag":146,"props":6962,"children":6963},{"__ignoreMap":7},[6964,6972,6989,7001,7008,7016,7063,7075,7082,7090,7122,7134,7141,7149,7182],{"type":17,"tag":126,"props":6965,"children":6966},{"class":310,"line":311},[6967],{"type":17,"tag":126,"props":6968,"children":6969},{"style":315},[6970],{"type":23,"value":6971},"# Delete rows containing any missing values\n",{"type":17,"tag":126,"props":6973,"children":6974},{"class":310,"line":321},[6975,6980,6984],{"type":17,"tag":126,"props":6976,"children":6977},{"style":325},[6978],{"type":23,"value":6979},"df_cleaned ",{"type":17,"tag":126,"props":6981,"children":6982},{"style":337},[6983],{"type":23,"value":340},{"type":17,"tag":126,"props":6985,"children":6986},{"style":325},[6987],{"type":23,"value":6988}," df.dropna()\n",{"type":17,"tag":126,"props":6990,"children":6991},{"class":310,"line":665},[6992,6996],{"type":17,"tag":126,"props":6993,"children":6994},{"style":343},[6995],{"type":23,"value":752},{"type":17,"tag":126,"props":6997,"children":6998},{"style":325},[6999],{"type":23,"value":7000},"(df_cleaned)\n",{"type":17,"tag":126,"props":7002,"children":7003},{"class":310,"line":674},[7004],{"type":17,"tag":126,"props":7005,"children":7006},{"emptyLinePlaceholder":659},[7007],{"type":23,"value":662},{"type":17,"tag":126,"props":7009,"children":7010},{"class":310,"line":729},[7011],{"type":17,"tag":126,"props":7012,"children":7013},{"style":315},[7014],{"type":23,"value":7015},"# Delete rows with missing values only in 'Name' and 'Age' columns\n",{"type":17,"tag":126,"props":7017,"children":7018},{"class":310,"line":737},[7019,7024,7028,7033,7037,7041,7045,7050,7054,7059],{"type":17,"tag":126,"props":7020,"children":7021},{"style":325},[7022],{"type":23,"value":7023},"df_cleaned_subset ",{"type":17,"tag":126,"props":7025,"children":7026},{"style":337},[7027],{"type":23,"value":340},{"type":17,"tag":126,"props":7029,"children":7030},{"style":325},[7031],{"type":23,"value":7032}," df.dropna(",{"type":17,"tag":126,"props":7034,"children":7035},{"style":331},[7036],{"type":23,"value":6800},{"type":17,"tag":126,"props":7038,"children":7039},{"style":337},[7040],{"type":23,"value":340},{"type":17,"tag":126,"props":7042,"children":7043},{"style":325},[7044],{"type":23,"value":971},{"type":17,"tag":126,"props":7046,"children":7047},{"style":974},[7048],{"type":23,"value":7049},"'Name'",{"type":17,"tag":126,"props":7051,"children":7052},{"style":325},[7053],{"type":23,"value":351},{"type":17,"tag":126,"props":7055,"children":7056},{"style":974},[7057],{"type":23,"value":7058},"'Age'",{"type":17,"tag":126,"props":7060,"children":7061},{"style":325},[7062],{"type":23,"value":726},{"type":17,"tag":126,"props":7064,"children":7065},{"class":310,"line":746},[7066,7070],{"type":17,"tag":126,"props":7067,"children":7068},{"style":343},[7069],{"type":23,"value":752},{"type":17,"tag":126,"props":7071,"children":7072},{"style":325},[7073],{"type":23,"value":7074},"(df_cleaned_subset)\n",{"type":17,"tag":126,"props":7076,"children":7077},{"class":310,"line":1337},[7078],{"type":17,"tag":126,"props":7079,"children":7080},{"emptyLinePlaceholder":659},[7081],{"type":23,"value":662},{"type":17,"tag":126,"props":7083,"children":7084},{"class":310,"line":11},[7085],{"type":17,"tag":126,"props":7086,"children":7087},{"style":315},[7088],{"type":23,"value":7089},"# Delete rows containing all missing values\n",{"type":17,"tag":126,"props":7091,"children":7092},{"class":310,"line":2122},[7093,7098,7102,7106,7110,7114,7118],{"type":17,"tag":126,"props":7094,"children":7095},{"style":325},[7096],{"type":23,"value":7097},"df_cleaned_all ",{"type":17,"tag":126,"props":7099,"children":7100},{"style":337},[7101],{"type":23,"value":340},{"type":17,"tag":126,"props":7103,"children":7104},{"style":325},[7105],{"type":23,"value":7032},{"type":17,"tag":126,"props":7107,"children":7108},{"style":331},[7109],{"type":23,"value":6765},{"type":17,"tag":126,"props":7111,"children":7112},{"style":337},[7113],{"type":23,"value":340},{"type":17,"tag":126,"props":7115,"children":7116},{"style":974},[7117],{"type":23,"value":6884},{"type":17,"tag":126,"props":7119,"children":7120},{"style":325},[7121],{"type":23,"value":438},{"type":17,"tag":126,"props":7123,"children":7124},{"class":310,"line":2140},[7125,7129],{"type":17,"tag":126,"props":7126,"children":7127},{"style":343},[7128],{"type":23,"value":752},{"type":17,"tag":126,"props":7130,"children":7131},{"style":325},[7132],{"type":23,"value":7133},"(df_cleaned_all)\n",{"type":17,"tag":126,"props":7135,"children":7136},{"class":310,"line":2148},[7137],{"type":17,"tag":126,"props":7138,"children":7139},{"emptyLinePlaceholder":659},[7140],{"type":23,"value":662},{"type":17,"tag":126,"props":7142,"children":7143},{"class":310,"line":2157},[7144],{"type":17,"tag":126,"props":7145,"children":7146},{"style":315},[7147],{"type":23,"value":7148},"# Retain rows with at least two non-missing values\n",{"type":17,"tag":126,"props":7150,"children":7151},{"class":310,"line":4000},[7152,7157,7161,7165,7169,7173,7178],{"type":17,"tag":126,"props":7153,"children":7154},{"style":325},[7155],{"type":23,"value":7156},"df_thresh ",{"type":17,"tag":126,"props":7158,"children":7159},{"style":337},[7160],{"type":23,"value":340},{"type":17,"tag":126,"props":7162,"children":7163},{"style":325},[7164],{"type":23,"value":7032},{"type":17,"tag":126,"props":7166,"children":7167},{"style":331},[7168],{"type":23,"value":6783},{"type":17,"tag":126,"props":7170,"children":7171},{"style":337},[7172],{"type":23,"value":340},{"type":17,"tag":126,"props":7174,"children":7175},{"style":343},[7176],{"type":23,"value":7177},"2",{"type":17,"tag":126,"props":7179,"children":7180},{"style":325},[7181],{"type":23,"value":438},{"type":17,"tag":126,"props":7183,"children":7184},{"class":310,"line":4008},[7185,7189],{"type":17,"tag":126,"props":7186,"children":7187},{"style":343},[7188],{"type":23,"value":752},{"type":17,"tag":126,"props":7190,"children":7191},{"style":325},[7192],{"type":23,"value":7193},"(df_thresh)\n",{"type":17,"tag":26,"props":7195,"children":7196},{},[7197],{"type":23,"value":762},{"type":17,"tag":299,"props":7199,"children":7201},{"code":7200,"language":766,"meta":7,"className":767,"style":7},"# Original DataFrame\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Delete rows containing any missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n\n# Delete rows with missing values only in 'Name' and 'Age' columns:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n\n# Delete rows containing all missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Retain rows with at least two non-missing values:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n",[7202],{"type":17,"tag":146,"props":7203,"children":7204},{"__ignoreMap":7},[7205,7213,7221,7229,7237,7245,7252,7260,7267,7274,7281,7289,7296,7303,7310,7318,7325,7332,7339,7346,7353,7361,7368,7375],{"type":17,"tag":126,"props":7206,"children":7207},{"class":310,"line":311},[7208],{"type":17,"tag":126,"props":7209,"children":7210},{},[7211],{"type":23,"value":7212},"# Original DataFrame\n",{"type":17,"tag":126,"props":7214,"children":7215},{"class":310,"line":321},[7216],{"type":17,"tag":126,"props":7217,"children":7218},{},[7219],{"type":23,"value":7220},"    Name   Age   Salary\n",{"type":17,"tag":126,"props":7222,"children":7223},{"class":310,"line":665},[7224],{"type":17,"tag":126,"props":7225,"children":7226},{},[7227],{"type":23,"value":7228},"0  Alice  25.0  50000.0\n",{"type":17,"tag":126,"props":7230,"children":7231},{"class":310,"line":674},[7232],{"type":17,"tag":126,"props":7233,"children":7234},{},[7235],{"type":23,"value":7236},"1    Bob   NaN  60000.0\n",{"type":17,"tag":126,"props":7238,"children":7239},{"class":310,"line":729},[7240],{"type":17,"tag":126,"props":7241,"children":7242},{},[7243],{"type":23,"value":7244},"2   None  30.0      NaN\n",{"type":17,"tag":126,"props":7246,"children":7247},{"class":310,"line":737},[7248],{"type":17,"tag":126,"props":7249,"children":7250},{"emptyLinePlaceholder":659},[7251],{"type":23,"value":662},{"type":17,"tag":126,"props":7253,"children":7254},{"class":310,"line":746},[7255],{"type":17,"tag":126,"props":7256,"children":7257},{},[7258],{"type":23,"value":7259},"# Delete rows containing any missing values:\n",{"type":17,"tag":126,"props":7261,"children":7262},{"class":310,"line":1337},[7263],{"type":17,"tag":126,"props":7264,"children":7265},{},[7266],{"type":23,"value":7220},{"type":17,"tag":126,"props":7268,"children":7269},{"class":310,"line":11},[7270],{"type":17,"tag":126,"props":7271,"children":7272},{},[7273],{"type":23,"value":7228},{"type":17,"tag":126,"props":7275,"children":7276},{"class":310,"line":2122},[7277],{"type":17,"tag":126,"props":7278,"children":7279},{"emptyLinePlaceholder":659},[7280],{"type":23,"value":662},{"type":17,"tag":126,"props":7282,"children":7283},{"class":310,"line":2140},[7284],{"type":17,"tag":126,"props":7285,"children":7286},{},[7287],{"type":23,"value":7288},"# Delete rows with missing values only in 'Name' and 'Age' columns:\n",{"type":17,"tag":126,"props":7290,"children":7291},{"class":310,"line":2148},[7292],{"type":17,"tag":126,"props":7293,"children":7294},{},[7295],{"type":23,"value":7220},{"type":17,"tag":126,"props":7297,"children":7298},{"class":310,"line":2157},[7299],{"type":17,"tag":126,"props":7300,"children":7301},{},[7302],{"type":23,"value":7228},{"type":17,"tag":126,"props":7304,"children":7305},{"class":310,"line":4000},[7306],{"type":17,"tag":126,"props":7307,"children":7308},{"emptyLinePlaceholder":659},[7309],{"type":23,"value":662},{"type":17,"tag":126,"props":7311,"children":7312},{"class":310,"line":4008},[7313],{"type":17,"tag":126,"props":7314,"children":7315},{},[7316],{"type":23,"value":7317},"# Delete rows containing all missing values:\n",{"type":17,"tag":126,"props":7319,"children":7320},{"class":310,"line":4017},[7321],{"type":17,"tag":126,"props":7322,"children":7323},{},[7324],{"type":23,"value":7220},{"type":17,"tag":126,"props":7326,"children":7327},{"class":310,"line":4233},[7328],{"type":17,"tag":126,"props":7329,"children":7330},{},[7331],{"type":23,"value":7228},{"type":17,"tag":126,"props":7333,"children":7334},{"class":310,"line":4242},[7335],{"type":17,"tag":126,"props":7336,"children":7337},{},[7338],{"type":23,"value":7236},{"type":17,"tag":126,"props":7340,"children":7341},{"class":310,"line":4251},[7342],{"type":17,"tag":126,"props":7343,"children":7344},{},[7345],{"type":23,"value":7244},{"type":17,"tag":126,"props":7347,"children":7348},{"class":310,"line":4260},[7349],{"type":17,"tag":126,"props":7350,"children":7351},{"emptyLinePlaceholder":659},[7352],{"type":23,"value":662},{"type":17,"tag":126,"props":7354,"children":7355},{"class":310,"line":4269},[7356],{"type":17,"tag":126,"props":7357,"children":7358},{},[7359],{"type":23,"value":7360},"# Retain rows with at least two non-missing values:\n",{"type":17,"tag":126,"props":7362,"children":7363},{"class":310,"line":4278},[7364],{"type":17,"tag":126,"props":7365,"children":7366},{},[7367],{"type":23,"value":7220},{"type":17,"tag":126,"props":7369,"children":7370},{"class":310,"line":4287},[7371],{"type":17,"tag":126,"props":7372,"children":7373},{},[7374],{"type":23,"value":7228},{"type":17,"tag":126,"props":7376,"children":7377},{"class":310,"line":4296},[7378],{"type":17,"tag":126,"props":7379,"children":7380},{},[7381],{"type":23,"value":7236},{"type":17,"tag":3082,"props":7383,"children":7384},{"start":674},[7385],{"type":17,"tag":51,"props":7386,"children":7387},{},[7388,7390,7395],{"type":23,"value":7389},"Fill Missing Values: Sometimes we do not want to delete data, but rather retain as much information as possible by filling in the missing values. The ",{"type":17,"tag":146,"props":7391,"children":7393},{"className":7392},[],[7394],{"type":23,"value":3764},{"type":23,"value":7396}," method can be used to fill missing values, with common strategies including filling with a fixed value, mean, median, or neighboring values.",{"type":17,"tag":299,"props":7398,"children":7400},{"code":7399,"language":302,"meta":7,"className":303,"style":7},"# Fill all missing values with 0\ndf_filled_zero = df.fillna(0)\nprint(df_filled_zero)\n\n# Fill missing values with the previous valid value (forward fill)\ndf_filled_ffill = df.fillna(method='ffill')\nprint(df_filled_ffill)\n\n# Fill missing values with the next valid value (backward fill)\ndf_filled_bfill = df.fillna(method='bfill')\nprint(df_filled_bfill)\n\n# Fill missing values in each column with the column's mean (example with 'Age' column)\ndf['Age'] = df['Age'].fillna(df['Age'].mean())\nprint(df)\n",[7401],{"type":17,"tag":146,"props":7402,"children":7403},{"__ignoreMap":7},[7404,7412,7437,7449,7456,7464,7498,7510,7517,7525,7558,7570,7577,7585,7626],{"type":17,"tag":126,"props":7405,"children":7406},{"class":310,"line":311},[7407],{"type":17,"tag":126,"props":7408,"children":7409},{"style":315},[7410],{"type":23,"value":7411},"# Fill all missing values with 0\n",{"type":17,"tag":126,"props":7413,"children":7414},{"class":310,"line":321},[7415,7420,7424,7429,7433],{"type":17,"tag":126,"props":7416,"children":7417},{"style":325},[7418],{"type":23,"value":7419},"df_filled_zero ",{"type":17,"tag":126,"props":7421,"children":7422},{"style":337},[7423],{"type":23,"value":340},{"type":17,"tag":126,"props":7425,"children":7426},{"style":325},[7427],{"type":23,"value":7428}," df.fillna(",{"type":17,"tag":126,"props":7430,"children":7431},{"style":343},[7432],{"type":23,"value":3993},{"type":17,"tag":126,"props":7434,"children":7435},{"style":325},[7436],{"type":23,"value":438},{"type":17,"tag":126,"props":7438,"children":7439},{"class":310,"line":665},[7440,7444],{"type":17,"tag":126,"props":7441,"children":7442},{"style":343},[7443],{"type":23,"value":752},{"type":17,"tag":126,"props":7445,"children":7446},{"style":325},[7447],{"type":23,"value":7448},"(df_filled_zero)\n",{"type":17,"tag":126,"props":7450,"children":7451},{"class":310,"line":674},[7452],{"type":17,"tag":126,"props":7453,"children":7454},{"emptyLinePlaceholder":659},[7455],{"type":23,"value":662},{"type":17,"tag":126,"props":7457,"children":7458},{"class":310,"line":729},[7459],{"type":17,"tag":126,"props":7460,"children":7461},{"style":315},[7462],{"type":23,"value":7463},"# Fill missing values with the previous valid value (forward fill)\n",{"type":17,"tag":126,"props":7465,"children":7466},{"class":310,"line":737},[7467,7472,7476,7480,7485,7489,7494],{"type":17,"tag":126,"props":7468,"children":7469},{"style":325},[7470],{"type":23,"value":7471},"df_filled_ffill ",{"type":17,"tag":126,"props":7473,"children":7474},{"style":337},[7475],{"type":23,"value":340},{"type":17,"tag":126,"props":7477,"children":7478},{"style":325},[7479],{"type":23,"value":7428},{"type":17,"tag":126,"props":7481,"children":7482},{"style":331},[7483],{"type":23,"value":7484},"method",{"type":17,"tag":126,"props":7486,"children":7487},{"style":337},[7488],{"type":23,"value":340},{"type":17,"tag":126,"props":7490,"children":7491},{"style":974},[7492],{"type":23,"value":7493},"'ffill'",{"type":17,"tag":126,"props":7495,"children":7496},{"style":325},[7497],{"type":23,"value":438},{"type":17,"tag":126,"props":7499,"children":7500},{"class":310,"line":746},[7501,7505],{"type":17,"tag":126,"props":7502,"children":7503},{"style":343},[7504],{"type":23,"value":752},{"type":17,"tag":126,"props":7506,"children":7507},{"style":325},[7508],{"type":23,"value":7509},"(df_filled_ffill)\n",{"type":17,"tag":126,"props":7511,"children":7512},{"class":310,"line":1337},[7513],{"type":17,"tag":126,"props":7514,"children":7515},{"emptyLinePlaceholder":659},[7516],{"type":23,"value":662},{"type":17,"tag":126,"props":7518,"children":7519},{"class":310,"line":11},[7520],{"type":17,"tag":126,"props":7521,"children":7522},{"style":315},[7523],{"type":23,"value":7524},"# Fill missing values with the next valid value (backward fill)\n",{"type":17,"tag":126,"props":7526,"children":7527},{"class":310,"line":2122},[7528,7533,7537,7541,7545,7549,7554],{"type":17,"tag":126,"props":7529,"children":7530},{"style":325},[7531],{"type":23,"value":7532},"df_filled_bfill ",{"type":17,"tag":126,"props":7534,"children":7535},{"style":337},[7536],{"type":23,"value":340},{"type":17,"tag":126,"props":7538,"children":7539},{"style":325},[7540],{"type":23,"value":7428},{"type":17,"tag":126,"props":7542,"children":7543},{"style":331},[7544],{"type":23,"value":7484},{"type":17,"tag":126,"props":7546,"children":7547},{"style":337},[7548],{"type":23,"value":340},{"type":17,"tag":126,"props":7550,"children":7551},{"style":974},[7552],{"type":23,"value":7553},"'bfill'",{"type":17,"tag":126,"props":7555,"children":7556},{"style":325},[7557],{"type":23,"value":438},{"type":17,"tag":126,"props":7559,"children":7560},{"class":310,"line":2140},[7561,7565],{"type":17,"tag":126,"props":7562,"children":7563},{"style":343},[7564],{"type":23,"value":752},{"type":17,"tag":126,"props":7566,"children":7567},{"style":325},[7568],{"type":23,"value":7569},"(df_filled_bfill)\n",{"type":17,"tag":126,"props":7571,"children":7572},{"class":310,"line":2148},[7573],{"type":17,"tag":126,"props":7574,"children":7575},{"emptyLinePlaceholder":659},[7576],{"type":23,"value":662},{"type":17,"tag":126,"props":7578,"children":7579},{"class":310,"line":2157},[7580],{"type":17,"tag":126,"props":7581,"children":7582},{"style":315},[7583],{"type":23,"value":7584},"# Fill missing values in each column with the column's mean (example with 'Age' column)\n",{"type":17,"tag":126,"props":7586,"children":7587},{"class":310,"line":4000},[7588,7592,7596,7600,7604,7608,7612,7617,7621],{"type":17,"tag":126,"props":7589,"children":7590},{"style":325},[7591],{"type":23,"value":3344},{"type":17,"tag":126,"props":7593,"children":7594},{"style":974},[7595],{"type":23,"value":7058},{"type":17,"tag":126,"props":7597,"children":7598},{"style":325},[7599],{"type":23,"value":3354},{"type":17,"tag":126,"props":7601,"children":7602},{"style":337},[7603],{"type":23,"value":340},{"type":17,"tag":126,"props":7605,"children":7606},{"style":325},[7607],{"type":23,"value":3660},{"type":17,"tag":126,"props":7609,"children":7610},{"style":974},[7611],{"type":23,"value":7058},{"type":17,"tag":126,"props":7613,"children":7614},{"style":325},[7615],{"type":23,"value":7616},"].fillna(df[",{"type":17,"tag":126,"props":7618,"children":7619},{"style":974},[7620],{"type":23,"value":7058},{"type":17,"tag":126,"props":7622,"children":7623},{"style":325},[7624],{"type":23,"value":7625},"].mean())\n",{"type":17,"tag":126,"props":7627,"children":7628},{"class":310,"line":4008},[7629,7633],{"type":17,"tag":126,"props":7630,"children":7631},{"style":343},[7632],{"type":23,"value":752},{"type":17,"tag":126,"props":7634,"children":7635},{"style":325},[7636],{"type":23,"value":2167},{"type":17,"tag":26,"props":7638,"children":7639},{},[7640],{"type":23,"value":7641},"Run the above code separately, and the results are as follows:",{"type":17,"tag":299,"props":7643,"children":7645},{"code":7644,"language":766,"meta":7,"className":767,"style":7},"# Original DataFrame\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   NaN  60000.0\n2   None  30.0      NaN\n\n# Fill all missing values with 0:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob   0.0  60000.0\n2      0  30.0      0.0\n\n# Fill missing values in 'Age' column with the column's mean:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  27.5  60000.0\n2   None  30.0      NaN\n\n# Fill missing values with the previous valid value:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  25.0  60000.0\n2    Bob  30.0  60000.0\n\n# Fill missing values with the next valid value:\n    Name   Age   Salary\n0  Alice  25.0  50000.0\n1    Bob  30.0  60000.0\n2   None  30.0      NaN\n",[7646],{"type":17,"tag":146,"props":7647,"children":7648},{"__ignoreMap":7},[7649,7656,7663,7670,7677,7684,7691,7699,7706,7713,7721,7729,7736,7744,7751,7758,7766,7773,7780,7788,7795,7802,7810,7818,7825,7833,7840,7847,7855],{"type":17,"tag":126,"props":7650,"children":7651},{"class":310,"line":311},[7652],{"type":17,"tag":126,"props":7653,"children":7654},{},[7655],{"type":23,"value":7212},{"type":17,"tag":126,"props":7657,"children":7658},{"class":310,"line":321},[7659],{"type":17,"tag":126,"props":7660,"children":7661},{},[7662],{"type":23,"value":7220},{"type":17,"tag":126,"props":7664,"children":7665},{"class":310,"line":665},[7666],{"type":17,"tag":126,"props":7667,"children":7668},{},[7669],{"type":23,"value":7228},{"type":17,"tag":126,"props":7671,"children":7672},{"class":310,"line":674},[7673],{"type":17,"tag":126,"props":7674,"children":7675},{},[7676],{"type":23,"value":7236},{"type":17,"tag":126,"props":7678,"children":7679},{"class":310,"line":729},[7680],{"type":17,"tag":126,"props":7681,"children":7682},{},[7683],{"type":23,"value":7244},{"type":17,"tag":126,"props":7685,"children":7686},{"class":310,"line":737},[7687],{"type":17,"tag":126,"props":7688,"children":7689},{"emptyLinePlaceholder":659},[7690],{"type":23,"value":662},{"type":17,"tag":126,"props":7692,"children":7693},{"class":310,"line":746},[7694],{"type":17,"tag":126,"props":7695,"children":7696},{},[7697],{"type":23,"value":7698},"# Fill all missing values with 0:\n",{"type":17,"tag":126,"props":7700,"children":7701},{"class":310,"line":1337},[7702],{"type":17,"tag":126,"props":7703,"children":7704},{},[7705],{"type":23,"value":7220},{"type":17,"tag":126,"props":7707,"children":7708},{"class":310,"line":11},[7709],{"type":17,"tag":126,"props":7710,"children":7711},{},[7712],{"type":23,"value":7228},{"type":17,"tag":126,"props":7714,"children":7715},{"class":310,"line":2122},[7716],{"type":17,"tag":126,"props":7717,"children":7718},{},[7719],{"type":23,"value":7720},"1    Bob   0.0  60000.0\n",{"type":17,"tag":126,"props":7722,"children":7723},{"class":310,"line":2140},[7724],{"type":17,"tag":126,"props":7725,"children":7726},{},[7727],{"type":23,"value":7728},"2      0  30.0      0.0\n",{"type":17,"tag":126,"props":7730,"children":7731},{"class":310,"line":2148},[7732],{"type":17,"tag":126,"props":7733,"children":7734},{"emptyLinePlaceholder":659},[7735],{"type":23,"value":662},{"type":17,"tag":126,"props":7737,"children":7738},{"class":310,"line":2157},[7739],{"type":17,"tag":126,"props":7740,"children":7741},{},[7742],{"type":23,"value":7743},"# Fill missing values in 'Age' column with the column's mean:\n",{"type":17,"tag":126,"props":7745,"children":7746},{"class":310,"line":4000},[7747],{"type":17,"tag":126,"props":7748,"children":7749},{},[7750],{"type":23,"value":7220},{"type":17,"tag":126,"props":7752,"children":7753},{"class":310,"line":4008},[7754],{"type":17,"tag":126,"props":7755,"children":7756},{},[7757],{"type":23,"value":7228},{"type":17,"tag":126,"props":7759,"children":7760},{"class":310,"line":4017},[7761],{"type":17,"tag":126,"props":7762,"children":7763},{},[7764],{"type":23,"value":7765},"1    Bob  27.5  60000.0\n",{"type":17,"tag":126,"props":7767,"children":7768},{"class":310,"line":4233},[7769],{"type":17,"tag":126,"props":7770,"children":7771},{},[7772],{"type":23,"value":7244},{"type":17,"tag":126,"props":7774,"children":7775},{"class":310,"line":4242},[7776],{"type":17,"tag":126,"props":7777,"children":7778},{"emptyLinePlaceholder":659},[7779],{"type":23,"value":662},{"type":17,"tag":126,"props":7781,"children":7782},{"class":310,"line":4251},[7783],{"type":17,"tag":126,"props":7784,"children":7785},{},[7786],{"type":23,"value":7787},"# Fill missing values with the previous valid value:\n",{"type":17,"tag":126,"props":7789,"children":7790},{"class":310,"line":4260},[7791],{"type":17,"tag":126,"props":7792,"children":7793},{},[7794],{"type":23,"value":7220},{"type":17,"tag":126,"props":7796,"children":7797},{"class":310,"line":4269},[7798],{"type":17,"tag":126,"props":7799,"children":7800},{},[7801],{"type":23,"value":7228},{"type":17,"tag":126,"props":7803,"children":7804},{"class":310,"line":4278},[7805],{"type":17,"tag":126,"props":7806,"children":7807},{},[7808],{"type":23,"value":7809},"1    Bob  25.0  60000.0\n",{"type":17,"tag":126,"props":7811,"children":7812},{"class":310,"line":4287},[7813],{"type":17,"tag":126,"props":7814,"children":7815},{},[7816],{"type":23,"value":7817},"2    Bob  30.0  60000.0\n",{"type":17,"tag":126,"props":7819,"children":7820},{"class":310,"line":4296},[7821],{"type":17,"tag":126,"props":7822,"children":7823},{"emptyLinePlaceholder":659},[7824],{"type":23,"value":662},{"type":17,"tag":126,"props":7826,"children":7827},{"class":310,"line":4305},[7828],{"type":17,"tag":126,"props":7829,"children":7830},{},[7831],{"type":23,"value":7832},"# Fill missing values with the next valid value:\n",{"type":17,"tag":126,"props":7834,"children":7835},{"class":310,"line":4314},[7836],{"type":17,"tag":126,"props":7837,"children":7838},{},[7839],{"type":23,"value":7220},{"type":17,"tag":126,"props":7841,"children":7842},{"class":310,"line":4323},[7843],{"type":17,"tag":126,"props":7844,"children":7845},{},[7846],{"type":23,"value":7228},{"type":17,"tag":126,"props":7848,"children":7849},{"class":310,"line":4332},[7850],{"type":17,"tag":126,"props":7851,"children":7852},{},[7853],{"type":23,"value":7854},"1    Bob  30.0  60000.0\n",{"type":17,"tag":126,"props":7856,"children":7857},{"class":310,"line":4341},[7858],{"type":17,"tag":126,"props":7859,"children":7860},{},[7861],{"type":23,"value":7244},{"type":17,"tag":26,"props":7863,"children":7864},{},[7865,7867,7872,7873,7878],{"type":23,"value":7866},"Pandas provides powerful functions for handling missing values, including finding, counting, deleting, and filling. In data cleaning, the choice of appropriate missing value handling methods depends on the specific situation of the data. By using ",{"type":17,"tag":146,"props":7868,"children":7870},{"className":7869},[],[7871],{"type":23,"value":6712},{"type":23,"value":89},{"type":17,"tag":146,"props":7874,"children":7876},{"className":7875},[],[7877],{"type":23,"value":3764},{"type":23,"value":7879}," appropriately, you can effectively maintain data integrity and the accuracy of analysis results.",{"type":17,"tag":134,"props":7881,"children":7883},{"id":7882},"_2-handling-duplicate-values",[7884],{"type":23,"value":7885},"2. Handling Duplicate Values",{"type":17,"tag":26,"props":7887,"children":7888},{},[7889],{"type":23,"value":7890},"Duplicate data can lead to biased analysis results, so it is necessary to remove duplicates.",{"type":17,"tag":26,"props":7892,"children":7893},{},[7894],{"type":17,"tag":608,"props":7895,"children":7897},{"alt":7,"src":7896},"http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Pandas/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E9%87%8D%E5%A4%8D%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86en.png",[],{"type":17,"tag":3082,"props":7899,"children":7900},{},[7901],{"type":17,"tag":51,"props":7902,"children":7903},{},[7904,7906,7912],{"type":23,"value":7905},"Finding Duplicate Data: You can use the ",{"type":17,"tag":146,"props":7907,"children":7909},{"className":7908},[],[7910],{"type":23,"value":7911},"duplicated()",{"type":23,"value":7913}," method to find duplicate data. This method returns a boolean sequence indicating whether each row is a duplicate.",{"type":17,"tag":2251,"props":7915,"children":7916},{":editable":2253,":show-in-col":2253,"max-height":2254},[7917],{"type":17,"tag":299,"props":7918,"children":7920},{"code":7919,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Alice', 'David', 'Bob'],\n    'Age': [25, 30, 25, 35, 30],\n    'City': ['New York', 'Los Angeles', 'New York', 'Chicago', 'Los Angeles']\n}\ndf = pd.DataFrame(data)\n\n# Find duplicate rows\nprint(df.duplicated())\n",[7921],{"type":17,"tag":146,"props":7922,"children":7923},{"__ignoreMap":7},[7924,7943,7950,7958,7973,8028,8081,8136,8143,8158,8165,8173],{"type":17,"tag":126,"props":7925,"children":7926},{"class":310,"line":311},[7927,7931,7935,7939],{"type":17,"tag":126,"props":7928,"children":7929},{"style":337},[7930],{"type":23,"value":638},{"type":17,"tag":126,"props":7932,"children":7933},{"style":325},[7934],{"type":23,"value":643},{"type":17,"tag":126,"props":7936,"children":7937},{"style":337},[7938],{"type":23,"value":648},{"type":17,"tag":126,"props":7940,"children":7941},{"style":325},[7942],{"type":23,"value":653},{"type":17,"tag":126,"props":7944,"children":7945},{"class":310,"line":321},[7946],{"type":17,"tag":126,"props":7947,"children":7948},{"emptyLinePlaceholder":659},[7949],{"type":23,"value":662},{"type":17,"tag":126,"props":7951,"children":7952},{"class":310,"line":665},[7953],{"type":17,"tag":126,"props":7954,"children":7955},{"style":315},[7956],{"type":23,"value":7957},"# Create a sample DataFrame\n",{"type":17,"tag":126,"props":7959,"children":7960},{"class":310,"line":674},[7961,7965,7969],{"type":17,"tag":126,"props":7962,"children":7963},{"style":325},[7964],{"type":23,"value":680},{"type":17,"tag":126,"props":7966,"children":7967},{"style":337},[7968],{"type":23,"value":340},{"type":17,"tag":126,"props":7970,"children":7971},{"style":325},[7972],{"type":23,"value":1985},{"type":17,"tag":126,"props":7974,"children":7975},{"class":310,"line":729},[7976,7981,7985,7990,7994,7999,8003,8007,8011,8016,8020,8024],{"type":17,"tag":126,"props":7977,"children":7978},{"style":974},[7979],{"type":23,"value":7980},"    'Name'",{"type":17,"tag":126,"props":7982,"children":7983},{"style":325},[7984],{"type":23,"value":1998},{"type":17,"tag":126,"props":7986,"children":7987},{"style":974},[7988],{"type":23,"value":7989},"'Alice'",{"type":17,"tag":126,"props":7991,"children":7992},{"style":325},[7993],{"type":23,"value":351},{"type":17,"tag":126,"props":7995,"children":7996},{"style":974},[7997],{"type":23,"value":7998},"'Bob'",{"type":17,"tag":126,"props":8000,"children":8001},{"style":325},[8002],{"type":23,"value":351},{"type":17,"tag":126,"props":8004,"children":8005},{"style":974},[8006],{"type":23,"value":7989},{"type":17,"tag":126,"props":8008,"children":8009},{"style":325},[8010],{"type":23,"value":351},{"type":17,"tag":126,"props":8012,"children":8013},{"style":974},[8014],{"type":23,"value":8015},"'David'",{"type":17,"tag":126,"props":8017,"children":8018},{"style":325},[8019],{"type":23,"value":351},{"type":17,"tag":126,"props":8021,"children":8022},{"style":974},[8023],{"type":23,"value":7998},{"type":17,"tag":126,"props":8025,"children":8026},{"style":325},[8027],{"type":23,"value":2026},{"type":17,"tag":126,"props":8029,"children":8030},{"class":310,"line":737},[8031,8036,8040,8044,8048,8052,8056,8060,8064,8069,8073,8077],{"type":17,"tag":126,"props":8032,"children":8033},{"style":974},[8034],{"type":23,"value":8035},"    'Age'",{"type":17,"tag":126,"props":8037,"children":8038},{"style":325},[8039],{"type":23,"value":1998},{"type":17,"tag":126,"props":8041,"children":8042},{"style":343},[8043],{"type":23,"value":2061},{"type":17,"tag":126,"props":8045,"children":8046},{"style":325},[8047],{"type":23,"value":351},{"type":17,"tag":126,"props":8049,"children":8050},{"style":343},[8051],{"type":23,"value":1281},{"type":17,"tag":126,"props":8053,"children":8054},{"style":325},[8055],{"type":23,"value":351},{"type":17,"tag":126,"props":8057,"children":8058},{"style":343},[8059],{"type":23,"value":2061},{"type":17,"tag":126,"props":8061,"children":8062},{"style":325},[8063],{"type":23,"value":351},{"type":17,"tag":126,"props":8065,"children":8066},{"style":343},[8067],{"type":23,"value":8068},"35",{"type":17,"tag":126,"props":8070,"children":8071},{"style":325},[8072],{"type":23,"value":351},{"type":17,"tag":126,"props":8074,"children":8075},{"style":343},[8076],{"type":23,"value":1281},{"type":17,"tag":126,"props":8078,"children":8079},{"style":325},[8080],{"type":23,"value":2026},{"type":17,"tag":126,"props":8082,"children":8083},{"class":310,"line":746},[8084,8089,8093,8098,8102,8107,8111,8115,8119,8124,8128,8132],{"type":17,"tag":126,"props":8085,"children":8086},{"style":974},[8087],{"type":23,"value":8088},"    'City'",{"type":17,"tag":126,"props":8090,"children":8091},{"style":325},[8092],{"type":23,"value":1998},{"type":17,"tag":126,"props":8094,"children":8095},{"style":974},[8096],{"type":23,"value":8097},"'New York'",{"type":17,"tag":126,"props":8099,"children":8100},{"style":325},[8101],{"type":23,"value":351},{"type":17,"tag":126,"props":8103,"children":8104},{"style":974},[8105],{"type":23,"value":8106},"'Los Angeles'",{"type":17,"tag":126,"props":8108,"children":8109},{"style":325},[8110],{"type":23,"value":351},{"type":17,"tag":126,"props":8112,"children":8113},{"style":974},[8114],{"type":23,"value":8097},{"type":17,"tag":126,"props":8116,"children":8117},{"style":325},[8118],{"type":23,"value":351},{"type":17,"tag":126,"props":8120,"children":8121},{"style":974},[8122],{"type":23,"value":8123},"'Chicago'",{"type":17,"tag":126,"props":8125,"children":8126},{"style":325},[8127],{"type":23,"value":351},{"type":17,"tag":126,"props":8129,"children":8130},{"style":974},[8131],{"type":23,"value":8106},{"type":17,"tag":126,"props":8133,"children":8134},{"style":325},[8135],{"type":23,"value":2105},{"type":17,"tag":126,"props":8137,"children":8138},{"class":310,"line":1337},[8139],{"type":17,"tag":126,"props":8140,"children":8141},{"style":325},[8142],{"type":23,"value":1303},{"type":17,"tag":126,"props":8144,"children":8145},{"class":310,"line":11},[8146,8150,8154],{"type":17,"tag":126,"props":8147,"children":8148},{"style":325},[8149],{"type":23,"value":2128},{"type":17,"tag":126,"props":8151,"children":8152},{"style":337},[8153],{"type":23,"value":340},{"type":17,"tag":126,"props":8155,"children":8156},{"style":325},[8157],{"type":23,"value":2137},{"type":17,"tag":126,"props":8159,"children":8160},{"class":310,"line":2122},[8161],{"type":17,"tag":126,"props":8162,"children":8163},{"emptyLinePlaceholder":659},[8164],{"type":23,"value":662},{"type":17,"tag":126,"props":8166,"children":8167},{"class":310,"line":2140},[8168],{"type":17,"tag":126,"props":8169,"children":8170},{"style":315},[8171],{"type":23,"value":8172},"# Find duplicate rows\n",{"type":17,"tag":126,"props":8174,"children":8175},{"class":310,"line":2148},[8176,8180],{"type":17,"tag":126,"props":8177,"children":8178},{"style":343},[8179],{"type":23,"value":752},{"type":17,"tag":126,"props":8181,"children":8182},{"style":325},[8183],{"type":23,"value":8184},"(df.duplicated())\n",{"type":17,"tag":3082,"props":8186,"children":8187},{"start":321},[8188],{"type":17,"tag":51,"props":8189,"children":8190},{},[8191,8193,8199,8201,8206],{"type":23,"value":8192},"Removing Duplicate Data: You can use the ",{"type":17,"tag":146,"props":8194,"children":8196},{"className":8195},[],[8197],{"type":23,"value":8198},"drop_duplicates()",{"type":23,"value":8200}," method to remove duplicate rows. By using the ",{"type":17,"tag":146,"props":8202,"children":8204},{"className":8203},[],[8205],{"type":23,"value":6800},{"type":23,"value":8207}," parameter, you can specify the columns to check for duplicates. If not specified, all columns are checked.",{"type":17,"tag":2251,"props":8209,"children":8210},{":editable":2253,":show-in-col":2253,"max-height":2254},[8211],{"type":17,"tag":299,"props":8212,"children":8214},{"code":8213,"language":302,"meta":7,"className":303,"style":7},"# Remove duplicate rows\ndf_unique = df.drop_duplicates()\nprint(df_unique)\n\n# Remove duplicate rows based only on the 'Name' column\ndf_unique_name = df.drop_duplicates(subset=['Name'])\nprint(df_unique_name)\n",[8215],{"type":17,"tag":146,"props":8216,"children":8217},{"__ignoreMap":7},[8218,8226,8243,8255,8262,8270,8307],{"type":17,"tag":126,"props":8219,"children":8220},{"class":310,"line":311},[8221],{"type":17,"tag":126,"props":8222,"children":8223},{"style":315},[8224],{"type":23,"value":8225},"# Remove duplicate rows\n",{"type":17,"tag":126,"props":8227,"children":8228},{"class":310,"line":321},[8229,8234,8238],{"type":17,"tag":126,"props":8230,"children":8231},{"style":325},[8232],{"type":23,"value":8233},"df_unique ",{"type":17,"tag":126,"props":8235,"children":8236},{"style":337},[8237],{"type":23,"value":340},{"type":17,"tag":126,"props":8239,"children":8240},{"style":325},[8241],{"type":23,"value":8242}," df.drop_duplicates()\n",{"type":17,"tag":126,"props":8244,"children":8245},{"class":310,"line":665},[8246,8250],{"type":17,"tag":126,"props":8247,"children":8248},{"style":343},[8249],{"type":23,"value":752},{"type":17,"tag":126,"props":8251,"children":8252},{"style":325},[8253],{"type":23,"value":8254},"(df_unique)\n",{"type":17,"tag":126,"props":8256,"children":8257},{"class":310,"line":674},[8258],{"type":17,"tag":126,"props":8259,"children":8260},{"emptyLinePlaceholder":659},[8261],{"type":23,"value":662},{"type":17,"tag":126,"props":8263,"children":8264},{"class":310,"line":729},[8265],{"type":17,"tag":126,"props":8266,"children":8267},{"style":315},[8268],{"type":23,"value":8269},"# Remove duplicate rows based only on the 'Name' column\n",{"type":17,"tag":126,"props":8271,"children":8272},{"class":310,"line":737},[8273,8278,8282,8287,8291,8295,8299,8303],{"type":17,"tag":126,"props":8274,"children":8275},{"style":325},[8276],{"type":23,"value":8277},"df_unique_name ",{"type":17,"tag":126,"props":8279,"children":8280},{"style":337},[8281],{"type":23,"value":340},{"type":17,"tag":126,"props":8283,"children":8284},{"style":325},[8285],{"type":23,"value":8286}," df.drop_duplicates(",{"type":17,"tag":126,"props":8288,"children":8289},{"style":331},[8290],{"type":23,"value":6800},{"type":17,"tag":126,"props":8292,"children":8293},{"style":337},[8294],{"type":23,"value":340},{"type":17,"tag":126,"props":8296,"children":8297},{"style":325},[8298],{"type":23,"value":971},{"type":17,"tag":126,"props":8300,"children":8301},{"style":974},[8302],{"type":23,"value":7049},{"type":17,"tag":126,"props":8304,"children":8305},{"style":325},[8306],{"type":23,"value":726},{"type":17,"tag":126,"props":8308,"children":8309},{"class":310,"line":746},[8310,8314],{"type":17,"tag":126,"props":8311,"children":8312},{"style":343},[8313],{"type":23,"value":752},{"type":17,"tag":126,"props":8315,"children":8316},{"style":325},[8317],{"type":23,"value":8318},"(df_unique_name)\n",{"type":17,"tag":134,"props":8320,"children":8322},{"id":8321},"_3-converting-data-types",[8323],{"type":23,"value":8324},"3. Converting Data Types",{"type":17,"tag":26,"props":8326,"children":8327},{},[8328,8330,8336],{"type":23,"value":8329},"Sometimes, data may have incorrect data types, such as an age field stored as a string. You can use the ",{"type":17,"tag":146,"props":8331,"children":8333},{"className":8332},[],[8334],{"type":23,"value":8335},"astype()",{"type":23,"value":8337}," method to convert columns to the correct data type.",{"type":17,"tag":299,"props":8339,"children":8341},{"code":8340,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David'],\n    'Age': ['25', '30', '35', '40'],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']\n}\ndf = pd.DataFrame(data)\n\n# Convert the 'Age' column to integer type\ndf['Age'] = df['Age'].astype(int)\n\n# View the data types of the DataFrame\nprint(df.dtypes)\n",[8342],{"type":17,"tag":146,"props":8343,"children":8344},{"__ignoreMap":7},[8345,8364,8371,8378,8393,8437,8484,8528,8535,8550,8557,8565,8606,8613,8621],{"type":17,"tag":126,"props":8346,"children":8347},{"class":310,"line":311},[8348,8352,8356,8360],{"type":17,"tag":126,"props":8349,"children":8350},{"style":337},[8351],{"type":23,"value":638},{"type":17,"tag":126,"props":8353,"children":8354},{"style":325},[8355],{"type":23,"value":643},{"type":17,"tag":126,"props":8357,"children":8358},{"style":337},[8359],{"type":23,"value":648},{"type":17,"tag":126,"props":8361,"children":8362},{"style":325},[8363],{"type":23,"value":653},{"type":17,"tag":126,"props":8365,"children":8366},{"class":310,"line":321},[8367],{"type":17,"tag":126,"props":8368,"children":8369},{"emptyLinePlaceholder":659},[8370],{"type":23,"value":662},{"type":17,"tag":126,"props":8372,"children":8373},{"class":310,"line":665},[8374],{"type":17,"tag":126,"props":8375,"children":8376},{"style":315},[8377],{"type":23,"value":7957},{"type":17,"tag":126,"props":8379,"children":8380},{"class":310,"line":674},[8381,8385,8389],{"type":17,"tag":126,"props":8382,"children":8383},{"style":325},[8384],{"type":23,"value":680},{"type":17,"tag":126,"props":8386,"children":8387},{"style":337},[8388],{"type":23,"value":340},{"type":17,"tag":126,"props":8390,"children":8391},{"style":325},[8392],{"type":23,"value":1985},{"type":17,"tag":126,"props":8394,"children":8395},{"class":310,"line":729},[8396,8400,8404,8408,8412,8416,8420,8425,8429,8433],{"type":17,"tag":126,"props":8397,"children":8398},{"style":974},[8399],{"type":23,"value":7980},{"type":17,"tag":126,"props":8401,"children":8402},{"style":325},[8403],{"type":23,"value":1998},{"type":17,"tag":126,"props":8405,"children":8406},{"style":974},[8407],{"type":23,"value":7989},{"type":17,"tag":126,"props":8409,"children":8410},{"style":325},[8411],{"type":23,"value":351},{"type":17,"tag":126,"props":8413,"children":8414},{"style":974},[8415],{"type":23,"value":7998},{"type":17,"tag":126,"props":8417,"children":8418},{"style":325},[8419],{"type":23,"value":351},{"type":17,"tag":126,"props":8421,"children":8422},{"style":974},[8423],{"type":23,"value":8424},"'Charlie'",{"type":17,"tag":126,"props":8426,"children":8427},{"style":325},[8428],{"type":23,"value":351},{"type":17,"tag":126,"props":8430,"children":8431},{"style":974},[8432],{"type":23,"value":8015},{"type":17,"tag":126,"props":8434,"children":8435},{"style":325},[8436],{"type":23,"value":2026},{"type":17,"tag":126,"props":8438,"children":8439},{"class":310,"line":737},[8440,8444,8448,8453,8457,8462,8466,8471,8475,8480],{"type":17,"tag":126,"props":8441,"children":8442},{"style":974},[8443],{"type":23,"value":8035},{"type":17,"tag":126,"props":8445,"children":8446},{"style":325},[8447],{"type":23,"value":1998},{"type":17,"tag":126,"props":8449,"children":8450},{"style":974},[8451],{"type":23,"value":8452},"'25'",{"type":17,"tag":126,"props":8454,"children":8455},{"style":325},[8456],{"type":23,"value":351},{"type":17,"tag":126,"props":8458,"children":8459},{"style":974},[8460],{"type":23,"value":8461},"'30'",{"type":17,"tag":126,"props":8463,"children":8464},{"style":325},[8465],{"type":23,"value":351},{"type":17,"tag":126,"props":8467,"children":8468},{"style":974},[8469],{"type":23,"value":8470},"'35'",{"type":17,"tag":126,"props":8472,"children":8473},{"style":325},[8474],{"type":23,"value":351},{"type":17,"tag":126,"props":8476,"children":8477},{"style":974},[8478],{"type":23,"value":8479},"'40'",{"type":17,"tag":126,"props":8481,"children":8482},{"style":325},[8483],{"type":23,"value":2026},{"type":17,"tag":126,"props":8485,"children":8486},{"class":310,"line":746},[8487,8491,8495,8499,8503,8507,8511,8515,8519,8524],{"type":17,"tag":126,"props":8488,"children":8489},{"style":974},[8490],{"type":23,"value":8088},{"type":17,"tag":126,"props":8492,"children":8493},{"style":325},[8494],{"type":23,"value":1998},{"type":17,"tag":126,"props":8496,"children":8497},{"style":974},[8498],{"type":23,"value":8097},{"type":17,"tag":126,"props":8500,"children":8501},{"style":325},[8502],{"type":23,"value":351},{"type":17,"tag":126,"props":8504,"children":8505},{"style":974},[8506],{"type":23,"value":8106},{"type":17,"tag":126,"props":8508,"children":8509},{"style":325},[8510],{"type":23,"value":351},{"type":17,"tag":126,"props":8512,"children":8513},{"style":974},[8514],{"type":23,"value":8123},{"type":17,"tag":126,"props":8516,"children":8517},{"style":325},[8518],{"type":23,"value":351},{"type":17,"tag":126,"props":8520,"children":8521},{"style":974},[8522],{"type":23,"value":8523},"'Houston'",{"type":17,"tag":126,"props":8525,"children":8526},{"style":325},[8527],{"type":23,"value":2105},{"type":17,"tag":126,"props":8529,"children":8530},{"class":310,"line":1337},[8531],{"type":17,"tag":126,"props":8532,"children":8533},{"style":325},[8534],{"type":23,"value":1303},{"type":17,"tag":126,"props":8536,"children":8537},{"class":310,"line":11},[8538,8542,8546],{"type":17,"tag":126,"props":8539,"children":8540},{"style":325},[8541],{"type":23,"value":2128},{"type":17,"tag":126,"props":8543,"children":8544},{"style":337},[8545],{"type":23,"value":340},{"type":17,"tag":126,"props":8547,"children":8548},{"style":325},[8549],{"type":23,"value":2137},{"type":17,"tag":126,"props":8551,"children":8552},{"class":310,"line":2122},[8553],{"type":17,"tag":126,"props":8554,"children":8555},{"emptyLinePlaceholder":659},[8556],{"type":23,"value":662},{"type":17,"tag":126,"props":8558,"children":8559},{"class":310,"line":2140},[8560],{"type":17,"tag":126,"props":8561,"children":8562},{"style":315},[8563],{"type":23,"value":8564},"# Convert the 'Age' column to integer type\n",{"type":17,"tag":126,"props":8566,"children":8567},{"class":310,"line":2148},[8568,8572,8576,8580,8584,8588,8592,8597,8602],{"type":17,"tag":126,"props":8569,"children":8570},{"style":325},[8571],{"type":23,"value":3344},{"type":17,"tag":126,"props":8573,"children":8574},{"style":974},[8575],{"type":23,"value":7058},{"type":17,"tag":126,"props":8577,"children":8578},{"style":325},[8579],{"type":23,"value":3354},{"type":17,"tag":126,"props":8581,"children":8582},{"style":337},[8583],{"type":23,"value":340},{"type":17,"tag":126,"props":8585,"children":8586},{"style":325},[8587],{"type":23,"value":3660},{"type":17,"tag":126,"props":8589,"children":8590},{"style":974},[8591],{"type":23,"value":7058},{"type":17,"tag":126,"props":8593,"children":8594},{"style":325},[8595],{"type":23,"value":8596},"].astype(",{"type":17,"tag":126,"props":8598,"children":8599},{"style":343},[8600],{"type":23,"value":8601},"int",{"type":17,"tag":126,"props":8603,"children":8604},{"style":325},[8605],{"type":23,"value":438},{"type":17,"tag":126,"props":8607,"children":8608},{"class":310,"line":2157},[8609],{"type":17,"tag":126,"props":8610,"children":8611},{"emptyLinePlaceholder":659},[8612],{"type":23,"value":662},{"type":17,"tag":126,"props":8614,"children":8615},{"class":310,"line":4000},[8616],{"type":17,"tag":126,"props":8617,"children":8618},{"style":315},[8619],{"type":23,"value":8620},"# View the data types of the DataFrame\n",{"type":17,"tag":126,"props":8622,"children":8623},{"class":310,"line":4008},[8624,8628],{"type":17,"tag":126,"props":8625,"children":8626},{"style":343},[8627],{"type":23,"value":752},{"type":17,"tag":126,"props":8629,"children":8630},{"style":325},[8631],{"type":23,"value":8632},"(df.dtypes)\n",{"type":17,"tag":26,"props":8634,"children":8635},{},[8636],{"type":23,"value":762},{"type":17,"tag":299,"props":8638,"children":8640},{"code":8639,"language":766,"meta":7,"className":767,"style":7},"Name    object\nAge      int64\nCity    object\ndtype: object\n",[8641],{"type":17,"tag":146,"props":8642,"children":8643},{"__ignoreMap":7},[8644,8652,8660,8668],{"type":17,"tag":126,"props":8645,"children":8646},{"class":310,"line":311},[8647],{"type":17,"tag":126,"props":8648,"children":8649},{},[8650],{"type":23,"value":8651},"Name    object\n",{"type":17,"tag":126,"props":8653,"children":8654},{"class":310,"line":321},[8655],{"type":17,"tag":126,"props":8656,"children":8657},{},[8658],{"type":23,"value":8659},"Age      int64\n",{"type":17,"tag":126,"props":8661,"children":8662},{"class":310,"line":665},[8663],{"type":17,"tag":126,"props":8664,"children":8665},{},[8666],{"type":23,"value":8667},"City    object\n",{"type":17,"tag":126,"props":8669,"children":8670},{"class":310,"line":674},[8671],{"type":17,"tag":126,"props":8672,"children":8673},{},[8674],{"type":23,"value":8675},"dtype: object\n",{"type":17,"tag":26,"props":8677,"children":8678},{},[8679,8681,8687,8688,8694],{"type":23,"value":8680},"Sometimes, the data type may be correct, but the data format is incorrect. For example, a date column may contain dates in multiple formats. We can use ",{"type":17,"tag":146,"props":8682,"children":8684},{"className":8683},[],[8685],{"type":23,"value":8686},"to_datetime",{"type":23,"value":89},{"type":17,"tag":146,"props":8689,"children":8691},{"className":8690},[],[8692],{"type":23,"value":8693},"strftime",{"type":23,"value":8695}," to unify the format:",{"type":17,"tag":2251,"props":8697,"children":8698},{":editable":2253,":show-in-col":2253,"max-height":2254},[8699],{"type":17,"tag":299,"props":8700,"children":8702},{"code":8701,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a DataFrame with multiple date formats\ndata = {'Date': ['2023-01-01 12:34:56', '2023/02/02', '03/04/2023', '2023-05-06T10:11:12Z']}\ndf = pd.DataFrame(data)\n\n# Use the to_datetime() function, specifying error handling as coerce, and try multiple common date formats\ndf['Date'] = pd.to_datetime(df['Date'], errors='coerce', infer_datetime_format=True)\n\n# Unify the date format to \"YYYY-MM-DD\"\ndf['Date'] = df['Date'].dt.strftime('%Y-%m-%d')\n\nprint(df)\n",[8703],{"type":17,"tag":146,"props":8704,"children":8705},{"__ignoreMap":7},[8706,8725,8732,8740,8801,8816,8823,8831,8898,8905,8913,8964,8971],{"type":17,"tag":126,"props":8707,"children":8708},{"class":310,"line":311},[8709,8713,8717,8721],{"type":17,"tag":126,"props":8710,"children":8711},{"style":337},[8712],{"type":23,"value":638},{"type":17,"tag":126,"props":8714,"children":8715},{"style":325},[8716],{"type":23,"value":643},{"type":17,"tag":126,"props":8718,"children":8719},{"style":337},[8720],{"type":23,"value":648},{"type":17,"tag":126,"props":8722,"children":8723},{"style":325},[8724],{"type":23,"value":653},{"type":17,"tag":126,"props":8726,"children":8727},{"class":310,"line":321},[8728],{"type":17,"tag":126,"props":8729,"children":8730},{"emptyLinePlaceholder":659},[8731],{"type":23,"value":662},{"type":17,"tag":126,"props":8733,"children":8734},{"class":310,"line":665},[8735],{"type":17,"tag":126,"props":8736,"children":8737},{"style":315},[8738],{"type":23,"value":8739},"# Create a DataFrame with multiple date formats\n",{"type":17,"tag":126,"props":8741,"children":8742},{"class":310,"line":674},[8743,8747,8751,8755,8760,8764,8769,8773,8778,8782,8787,8791,8796],{"type":17,"tag":126,"props":8744,"children":8745},{"style":325},[8746],{"type":23,"value":680},{"type":17,"tag":126,"props":8748,"children":8749},{"style":337},[8750],{"type":23,"value":340},{"type":17,"tag":126,"props":8752,"children":8753},{"style":325},[8754],{"type":23,"value":1233},{"type":17,"tag":126,"props":8756,"children":8757},{"style":974},[8758],{"type":23,"value":8759},"'Date'",{"type":17,"tag":126,"props":8761,"children":8762},{"style":325},[8763],{"type":23,"value":1998},{"type":17,"tag":126,"props":8765,"children":8766},{"style":974},[8767],{"type":23,"value":8768},"'2023-01-01 12:34:56'",{"type":17,"tag":126,"props":8770,"children":8771},{"style":325},[8772],{"type":23,"value":351},{"type":17,"tag":126,"props":8774,"children":8775},{"style":974},[8776],{"type":23,"value":8777},"'2023/02/02'",{"type":17,"tag":126,"props":8779,"children":8780},{"style":325},[8781],{"type":23,"value":351},{"type":17,"tag":126,"props":8783,"children":8784},{"style":974},[8785],{"type":23,"value":8786},"'03/04/2023'",{"type":17,"tag":126,"props":8788,"children":8789},{"style":325},[8790],{"type":23,"value":351},{"type":17,"tag":126,"props":8792,"children":8793},{"style":974},[8794],{"type":23,"value":8795},"'2023-05-06T10:11:12Z'",{"type":17,"tag":126,"props":8797,"children":8798},{"style":325},[8799],{"type":23,"value":8800},"]}\n",{"type":17,"tag":126,"props":8802,"children":8803},{"class":310,"line":729},[8804,8808,8812],{"type":17,"tag":126,"props":8805,"children":8806},{"style":325},[8807],{"type":23,"value":2128},{"type":17,"tag":126,"props":8809,"children":8810},{"style":337},[8811],{"type":23,"value":340},{"type":17,"tag":126,"props":8813,"children":8814},{"style":325},[8815],{"type":23,"value":2137},{"type":17,"tag":126,"props":8817,"children":8818},{"class":310,"line":737},[8819],{"type":17,"tag":126,"props":8820,"children":8821},{"emptyLinePlaceholder":659},[8822],{"type":23,"value":662},{"type":17,"tag":126,"props":8824,"children":8825},{"class":310,"line":746},[8826],{"type":17,"tag":126,"props":8827,"children":8828},{"style":315},[8829],{"type":23,"value":8830},"# Use the to_datetime() function, specifying error handling as coerce, and try multiple common date formats\n",{"type":17,"tag":126,"props":8832,"children":8833},{"class":310,"line":1337},[8834,8838,8842,8846,8850,8855,8859,8863,8868,8872,8877,8881,8886,8890,8894],{"type":17,"tag":126,"props":8835,"children":8836},{"style":325},[8837],{"type":23,"value":3344},{"type":17,"tag":126,"props":8839,"children":8840},{"style":974},[8841],{"type":23,"value":8759},{"type":17,"tag":126,"props":8843,"children":8844},{"style":325},[8845],{"type":23,"value":3354},{"type":17,"tag":126,"props":8847,"children":8848},{"style":337},[8849],{"type":23,"value":340},{"type":17,"tag":126,"props":8851,"children":8852},{"style":325},[8853],{"type":23,"value":8854}," pd.to_datetime(df[",{"type":17,"tag":126,"props":8856,"children":8857},{"style":974},[8858],{"type":23,"value":8759},{"type":17,"tag":126,"props":8860,"children":8861},{"style":325},[8862],{"type":23,"value":958},{"type":17,"tag":126,"props":8864,"children":8865},{"style":331},[8866],{"type":23,"value":8867},"errors",{"type":17,"tag":126,"props":8869,"children":8870},{"style":337},[8871],{"type":23,"value":340},{"type":17,"tag":126,"props":8873,"children":8874},{"style":974},[8875],{"type":23,"value":8876},"'coerce'",{"type":17,"tag":126,"props":8878,"children":8879},{"style":325},[8880],{"type":23,"value":351},{"type":17,"tag":126,"props":8882,"children":8883},{"style":331},[8884],{"type":23,"value":8885},"infer_datetime_format",{"type":17,"tag":126,"props":8887,"children":8888},{"style":337},[8889],{"type":23,"value":340},{"type":17,"tag":126,"props":8891,"children":8892},{"style":343},[8893],{"type":23,"value":574},{"type":17,"tag":126,"props":8895,"children":8896},{"style":325},[8897],{"type":23,"value":438},{"type":17,"tag":126,"props":8899,"children":8900},{"class":310,"line":11},[8901],{"type":17,"tag":126,"props":8902,"children":8903},{"emptyLinePlaceholder":659},[8904],{"type":23,"value":662},{"type":17,"tag":126,"props":8906,"children":8907},{"class":310,"line":2122},[8908],{"type":17,"tag":126,"props":8909,"children":8910},{"style":315},[8911],{"type":23,"value":8912},"# Unify the date format to \"YYYY-MM-DD\"\n",{"type":17,"tag":126,"props":8914,"children":8915},{"class":310,"line":2140},[8916,8920,8924,8928,8932,8936,8940,8945,8950,8955,8960],{"type":17,"tag":126,"props":8917,"children":8918},{"style":325},[8919],{"type":23,"value":3344},{"type":17,"tag":126,"props":8921,"children":8922},{"style":974},[8923],{"type":23,"value":8759},{"type":17,"tag":126,"props":8925,"children":8926},{"style":325},[8927],{"type":23,"value":3354},{"type":17,"tag":126,"props":8929,"children":8930},{"style":337},[8931],{"type":23,"value":340},{"type":17,"tag":126,"props":8933,"children":8934},{"style":325},[8935],{"type":23,"value":3660},{"type":17,"tag":126,"props":8937,"children":8938},{"style":974},[8939],{"type":23,"value":8759},{"type":17,"tag":126,"props":8941,"children":8942},{"style":325},[8943],{"type":23,"value":8944},"].dt.strftime(",{"type":17,"tag":126,"props":8946,"children":8947},{"style":974},[8948],{"type":23,"value":8949},"'%Y-%m-",{"type":17,"tag":126,"props":8951,"children":8952},{"style":343},[8953],{"type":23,"value":8954},"%d",{"type":17,"tag":126,"props":8956,"children":8957},{"style":974},[8958],{"type":23,"value":8959},"'",{"type":17,"tag":126,"props":8961,"children":8962},{"style":325},[8963],{"type":23,"value":438},{"type":17,"tag":126,"props":8965,"children":8966},{"class":310,"line":2148},[8967],{"type":17,"tag":126,"props":8968,"children":8969},{"emptyLinePlaceholder":659},[8970],{"type":23,"value":662},{"type":17,"tag":126,"props":8972,"children":8973},{"class":310,"line":2157},[8974,8978],{"type":17,"tag":126,"props":8975,"children":8976},{"style":343},[8977],{"type":23,"value":752},{"type":17,"tag":126,"props":8979,"children":8980},{"style":325},[8981],{"type":23,"value":2167},{"type":17,"tag":134,"props":8983,"children":8985},{"id":8984},"_5-data-standardization",[8986],{"type":23,"value":8987},"5. Data Standardization",{"type":17,"tag":26,"props":8989,"children":8990},{},[8991],{"type":23,"value":8992},"To ensure data standardization, you can convert string fields to lowercase or uppercase, or remove extra spaces.",{"type":17,"tag":299,"props":8994,"children":8996},{"code":8995,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': [' Alice ', 'Bob', ' CHARLIE ', 'David '],\n    'Age': [25, 30, 35, 40],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']\n}\ndf = pd.DataFrame(data)\n\n# Convert the 'Name' column to lowercase\ndf['Name'] = df['Name'].str.lower()\n\n# Remove extra spaces in the 'Name' column\ndf['Name'] = df['Name'].str.strip()\n\n# Output the processed DataFrame\nprint(df)\n",[8997],{"type":17,"tag":146,"props":8998,"children":8999},{"__ignoreMap":7},[9000,9019,9026,9033,9048,9094,9137,9180,9187,9202,9209,9217,9249,9256,9264,9296,9303,9311],{"type":17,"tag":126,"props":9001,"children":9002},{"class":310,"line":311},[9003,9007,9011,9015],{"type":17,"tag":126,"props":9004,"children":9005},{"style":337},[9006],{"type":23,"value":638},{"type":17,"tag":126,"props":9008,"children":9009},{"style":325},[9010],{"type":23,"value":643},{"type":17,"tag":126,"props":9012,"children":9013},{"style":337},[9014],{"type":23,"value":648},{"type":17,"tag":126,"props":9016,"children":9017},{"style":325},[9018],{"type":23,"value":653},{"type":17,"tag":126,"props":9020,"children":9021},{"class":310,"line":321},[9022],{"type":17,"tag":126,"props":9023,"children":9024},{"emptyLinePlaceholder":659},[9025],{"type":23,"value":662},{"type":17,"tag":126,"props":9027,"children":9028},{"class":310,"line":665},[9029],{"type":17,"tag":126,"props":9030,"children":9031},{"style":315},[9032],{"type":23,"value":7957},{"type":17,"tag":126,"props":9034,"children":9035},{"class":310,"line":674},[9036,9040,9044],{"type":17,"tag":126,"props":9037,"children":9038},{"style":325},[9039],{"type":23,"value":680},{"type":17,"tag":126,"props":9041,"children":9042},{"style":337},[9043],{"type":23,"value":340},{"type":17,"tag":126,"props":9045,"children":9046},{"style":325},[9047],{"type":23,"value":1985},{"type":17,"tag":126,"props":9049,"children":9050},{"class":310,"line":729},[9051,9055,9059,9064,9068,9072,9076,9081,9085,9090],{"type":17,"tag":126,"props":9052,"children":9053},{"style":974},[9054],{"type":23,"value":7980},{"type":17,"tag":126,"props":9056,"children":9057},{"style":325},[9058],{"type":23,"value":1998},{"type":17,"tag":126,"props":9060,"children":9061},{"style":974},[9062],{"type":23,"value":9063},"' Alice '",{"type":17,"tag":126,"props":9065,"children":9066},{"style":325},[9067],{"type":23,"value":351},{"type":17,"tag":126,"props":9069,"children":9070},{"style":974},[9071],{"type":23,"value":7998},{"type":17,"tag":126,"props":9073,"children":9074},{"style":325},[9075],{"type":23,"value":351},{"type":17,"tag":126,"props":9077,"children":9078},{"style":974},[9079],{"type":23,"value":9080},"' CHARLIE '",{"type":17,"tag":126,"props":9082,"children":9083},{"style":325},[9084],{"type":23,"value":351},{"type":17,"tag":126,"props":9086,"children":9087},{"style":974},[9088],{"type":23,"value":9089},"'David '",{"type":17,"tag":126,"props":9091,"children":9092},{"style":325},[9093],{"type":23,"value":2026},{"type":17,"tag":126,"props":9095,"children":9096},{"class":310,"line":737},[9097,9101,9105,9109,9113,9117,9121,9125,9129,9133],{"type":17,"tag":126,"props":9098,"children":9099},{"style":974},[9100],{"type":23,"value":8035},{"type":17,"tag":126,"props":9102,"children":9103},{"style":325},[9104],{"type":23,"value":1998},{"type":17,"tag":126,"props":9106,"children":9107},{"style":343},[9108],{"type":23,"value":2061},{"type":17,"tag":126,"props":9110,"children":9111},{"style":325},[9112],{"type":23,"value":351},{"type":17,"tag":126,"props":9114,"children":9115},{"style":343},[9116],{"type":23,"value":1281},{"type":17,"tag":126,"props":9118,"children":9119},{"style":325},[9120],{"type":23,"value":351},{"type":17,"tag":126,"props":9122,"children":9123},{"style":343},[9124],{"type":23,"value":8068},{"type":17,"tag":126,"props":9126,"children":9127},{"style":325},[9128],{"type":23,"value":351},{"type":17,"tag":126,"props":9130,"children":9131},{"style":343},[9132],{"type":23,"value":1298},{"type":17,"tag":126,"props":9134,"children":9135},{"style":325},[9136],{"type":23,"value":2026},{"type":17,"tag":126,"props":9138,"children":9139},{"class":310,"line":746},[9140,9144,9148,9152,9156,9160,9164,9168,9172,9176],{"type":17,"tag":126,"props":9141,"children":9142},{"style":974},[9143],{"type":23,"value":8088},{"type":17,"tag":126,"props":9145,"children":9146},{"style":325},[9147],{"type":23,"value":1998},{"type":17,"tag":126,"props":9149,"children":9150},{"style":974},[9151],{"type":23,"value":8097},{"type":17,"tag":126,"props":9153,"children":9154},{"style":325},[9155],{"type":23,"value":351},{"type":17,"tag":126,"props":9157,"children":9158},{"style":974},[9159],{"type":23,"value":8106},{"type":17,"tag":126,"props":9161,"children":9162},{"style":325},[9163],{"type":23,"value":351},{"type":17,"tag":126,"props":9165,"children":9166},{"style":974},[9167],{"type":23,"value":8123},{"type":17,"tag":126,"props":9169,"children":9170},{"style":325},[9171],{"type":23,"value":351},{"type":17,"tag":126,"props":9173,"children":9174},{"style":974},[9175],{"type":23,"value":8523},{"type":17,"tag":126,"props":9177,"children":9178},{"style":325},[9179],{"type":23,"value":2105},{"type":17,"tag":126,"props":9181,"children":9182},{"class":310,"line":1337},[9183],{"type":17,"tag":126,"props":9184,"children":9185},{"style":325},[9186],{"type":23,"value":1303},{"type":17,"tag":126,"props":9188,"children":9189},{"class":310,"line":11},[9190,9194,9198],{"type":17,"tag":126,"props":9191,"children":9192},{"style":325},[9193],{"type":23,"value":2128},{"type":17,"tag":126,"props":9195,"children":9196},{"style":337},[9197],{"type":23,"value":340},{"type":17,"tag":126,"props":9199,"children":9200},{"style":325},[9201],{"type":23,"value":2137},{"type":17,"tag":126,"props":9203,"children":9204},{"class":310,"line":2122},[9205],{"type":17,"tag":126,"props":9206,"children":9207},{"emptyLinePlaceholder":659},[9208],{"type":23,"value":662},{"type":17,"tag":126,"props":9210,"children":9211},{"class":310,"line":2140},[9212],{"type":17,"tag":126,"props":9213,"children":9214},{"style":315},[9215],{"type":23,"value":9216},"# Convert the 'Name' column to lowercase\n",{"type":17,"tag":126,"props":9218,"children":9219},{"class":310,"line":2148},[9220,9224,9228,9232,9236,9240,9244],{"type":17,"tag":126,"props":9221,"children":9222},{"style":325},[9223],{"type":23,"value":3344},{"type":17,"tag":126,"props":9225,"children":9226},{"style":974},[9227],{"type":23,"value":7049},{"type":17,"tag":126,"props":9229,"children":9230},{"style":325},[9231],{"type":23,"value":3354},{"type":17,"tag":126,"props":9233,"children":9234},{"style":337},[9235],{"type":23,"value":340},{"type":17,"tag":126,"props":9237,"children":9238},{"style":325},[9239],{"type":23,"value":3660},{"type":17,"tag":126,"props":9241,"children":9242},{"style":974},[9243],{"type":23,"value":7049},{"type":17,"tag":126,"props":9245,"children":9246},{"style":325},[9247],{"type":23,"value":9248},"].str.lower()\n",{"type":17,"tag":126,"props":9250,"children":9251},{"class":310,"line":2157},[9252],{"type":17,"tag":126,"props":9253,"children":9254},{"emptyLinePlaceholder":659},[9255],{"type":23,"value":662},{"type":17,"tag":126,"props":9257,"children":9258},{"class":310,"line":4000},[9259],{"type":17,"tag":126,"props":9260,"children":9261},{"style":315},[9262],{"type":23,"value":9263},"# Remove extra spaces in the 'Name' column\n",{"type":17,"tag":126,"props":9265,"children":9266},{"class":310,"line":4008},[9267,9271,9275,9279,9283,9287,9291],{"type":17,"tag":126,"props":9268,"children":9269},{"style":325},[9270],{"type":23,"value":3344},{"type":17,"tag":126,"props":9272,"children":9273},{"style":974},[9274],{"type":23,"value":7049},{"type":17,"tag":126,"props":9276,"children":9277},{"style":325},[9278],{"type":23,"value":3354},{"type":17,"tag":126,"props":9280,"children":9281},{"style":337},[9282],{"type":23,"value":340},{"type":17,"tag":126,"props":9284,"children":9285},{"style":325},[9286],{"type":23,"value":3660},{"type":17,"tag":126,"props":9288,"children":9289},{"style":974},[9290],{"type":23,"value":7049},{"type":17,"tag":126,"props":9292,"children":9293},{"style":325},[9294],{"type":23,"value":9295},"].str.strip()\n",{"type":17,"tag":126,"props":9297,"children":9298},{"class":310,"line":4017},[9299],{"type":17,"tag":126,"props":9300,"children":9301},{"emptyLinePlaceholder":659},[9302],{"type":23,"value":662},{"type":17,"tag":126,"props":9304,"children":9305},{"class":310,"line":4233},[9306],{"type":17,"tag":126,"props":9307,"children":9308},{"style":315},[9309],{"type":23,"value":9310},"# Output the processed DataFrame\n",{"type":17,"tag":126,"props":9312,"children":9313},{"class":310,"line":4242},[9314,9318],{"type":17,"tag":126,"props":9315,"children":9316},{"style":343},[9317],{"type":23,"value":752},{"type":17,"tag":126,"props":9319,"children":9320},{"style":325},[9321],{"type":23,"value":2167},{"type":17,"tag":299,"props":9323,"children":9325},{"code":9324,"language":766,"meta":7,"className":767,"style":7},"Name  Age         City\n0    alice   25     New York\n1      bob   30  Los Angeles\n2  charlie   35      Chicago\n3    david   40      Houston\n",[9326],{"type":17,"tag":146,"props":9327,"children":9328},{"__ignoreMap":7},[9329,9337,9345,9353,9361],{"type":17,"tag":126,"props":9330,"children":9331},{"class":310,"line":311},[9332],{"type":17,"tag":126,"props":9333,"children":9334},{},[9335],{"type":23,"value":9336},"Name  Age         City\n",{"type":17,"tag":126,"props":9338,"children":9339},{"class":310,"line":321},[9340],{"type":17,"tag":126,"props":9341,"children":9342},{},[9343],{"type":23,"value":9344},"0    alice   25     New York\n",{"type":17,"tag":126,"props":9346,"children":9347},{"class":310,"line":665},[9348],{"type":17,"tag":126,"props":9349,"children":9350},{},[9351],{"type":23,"value":9352},"1      bob   30  Los Angeles\n",{"type":17,"tag":126,"props":9354,"children":9355},{"class":310,"line":674},[9356],{"type":17,"tag":126,"props":9357,"children":9358},{},[9359],{"type":23,"value":9360},"2  charlie   35      Chicago\n",{"type":17,"tag":126,"props":9362,"children":9363},{"class":310,"line":729},[9364],{"type":17,"tag":126,"props":9365,"children":9366},{},[9367],{"type":23,"value":9368},"3    david   40      Houston\n",{"type":17,"tag":134,"props":9370,"children":9372},{"id":9371},"_6-case-study",[9373],{"type":23,"value":9374},"6. Case Study",{"type":17,"tag":26,"props":9376,"children":9377},{},[9378],{"type":23,"value":9379},"Follow the case in the link below to review the content of this chapter:",{"type":17,"tag":26,"props":9381,"children":9382},{},[9383],{"type":17,"tag":4062,"props":9384,"children":9387},{"href":9385,"rel":9386},"https://www.kaggle.com/code/zhaowenxi/pandas-for-python-2",[4066],[9388],{"type":23,"value":9385},{"type":17,"tag":26,"props":9390,"children":9391},{},[9392,9394,9400],{"type":23,"value":9393},"Assume there is a DataFrame ",{"type":17,"tag":146,"props":9395,"children":9397},{"className":9396},[],[9398],{"type":23,"value":9399},"df",{"type":23,"value":9401}," containing employee information, with the initial state as follows:",{"type":17,"tag":9403,"props":9404,"children":9405},"table",{},[9406,9433],{"type":17,"tag":9407,"props":9408,"children":9409},"thead",{},[9410],{"type":17,"tag":9411,"props":9412,"children":9413},"tr",{},[9414,9419,9423,9428],{"type":17,"tag":9415,"props":9416,"children":9417},"th",{},[9418],{"type":23,"value":2221},{"type":17,"tag":9415,"props":9420,"children":9421},{},[9422],{"type":23,"value":2228},{"type":17,"tag":9415,"props":9424,"children":9425},{},[9426],{"type":23,"value":9427},"Salary",{"type":17,"tag":9415,"props":9429,"children":9430},{},[9431],{"type":23,"value":9432},"City",{"type":17,"tag":9434,"props":9435,"children":9436},"tbody",{},[9437,9459,9480,9501,9520],{"type":17,"tag":9411,"props":9438,"children":9439},{},[9440,9446,9450,9454],{"type":17,"tag":9441,"props":9442,"children":9443},"td",{},[9444],{"type":23,"value":9445},"Alice",{"type":17,"tag":9441,"props":9447,"children":9448},{},[9449],{"type":23,"value":2061},{"type":17,"tag":9441,"props":9451,"children":9452},{},[9453],{"type":23,"value":5436},{"type":17,"tag":9441,"props":9455,"children":9456},{},[9457],{"type":23,"value":9458},"New York",{"type":17,"tag":9411,"props":9460,"children":9461},{},[9462,9467,9471,9475],{"type":17,"tag":9441,"props":9463,"children":9464},{},[9465],{"type":23,"value":9466},"Bob",{"type":17,"tag":9441,"props":9468,"children":9469},{},[9470],{"type":23,"value":244},{"type":17,"tag":9441,"props":9472,"children":9473},{},[9474],{"type":23,"value":6355},{"type":17,"tag":9441,"props":9476,"children":9477},{},[9478],{"type":23,"value":9479},"Los Angeles",{"type":17,"tag":9411,"props":9481,"children":9482},{},[9483,9488,9492,9496],{"type":17,"tag":9441,"props":9484,"children":9485},{},[9486],{"type":23,"value":9487},"NULL",{"type":17,"tag":9441,"props":9489,"children":9490},{},[9491],{"type":23,"value":1281},{"type":17,"tag":9441,"props":9493,"children":9494},{},[9495],{"type":23,"value":244},{"type":17,"tag":9441,"props":9497,"children":9498},{},[9499],{"type":23,"value":9500},"Chicago",{"type":17,"tag":9411,"props":9502,"children":9503},{},[9504,9508,9512,9516],{"type":17,"tag":9441,"props":9505,"children":9506},{},[9507],{"type":23,"value":9445},{"type":17,"tag":9441,"props":9509,"children":9510},{},[9511],{"type":23,"value":2061},{"type":17,"tag":9441,"props":9513,"children":9514},{},[9515],{"type":23,"value":5436},{"type":17,"tag":9441,"props":9517,"children":9518},{},[9519],{"type":23,"value":9458},{"type":17,"tag":9411,"props":9521,"children":9522},{},[9523,9528,9532,9537],{"type":17,"tag":9441,"props":9524,"children":9525},{},[9526],{"type":23,"value":9527},"David",{"type":17,"tag":9441,"props":9529,"children":9530},{},[9531],{"type":23,"value":8068},{"type":17,"tag":9441,"props":9533,"children":9534},{},[9535],{"type":23,"value":9536},"65000",{"type":17,"tag":9441,"props":9538,"children":9539},{},[9540],{"type":23,"value":9541},"Houston",{"type":17,"tag":26,"props":9543,"children":9544},{},[9545],{"type":23,"value":9546},"You need to perform the following data cleaning tasks:",{"type":17,"tag":3082,"props":9548,"children":9549},{},[9550,9585,9637,9671,9695,9726],{"type":17,"tag":51,"props":9551,"children":9552},{},[9553,9558,9559],{"type":17,"tag":83,"props":9554,"children":9555},{},[9556],{"type":23,"value":9557},"Find and count missing values",{"type":23,"value":1175},{"type":17,"tag":47,"props":9560,"children":9561},{},[9562,9574],{"type":17,"tag":51,"props":9563,"children":9564},{},[9565,9567,9572],{"type":23,"value":9566},"Use the ",{"type":17,"tag":146,"props":9568,"children":9570},{"className":9569},[],[9571],{"type":23,"value":3756},{"type":23,"value":9573}," method to find missing values in the DataFrame and print the results.",{"type":17,"tag":51,"props":9575,"children":9576},{},[9577,9578,9583],{"type":23,"value":9566},{"type":17,"tag":146,"props":9579,"children":9581},{"className":9580},[],[9582],{"type":23,"value":6613},{"type":23,"value":9584}," method to count the number of missing values in each column and print the results.",{"type":17,"tag":51,"props":9586,"children":9587},{},[9588,9593,9594],{"type":17,"tag":83,"props":9589,"children":9590},{},[9591],{"type":23,"value":9592},"Handle missing values",{"type":23,"value":1175},{"type":17,"tag":47,"props":9595,"children":9596},{},[9597,9602,9620,9625],{"type":17,"tag":51,"props":9598,"children":9599},{},[9600],{"type":23,"value":9601},"Delete rows that contain any missing values and print the results.",{"type":17,"tag":51,"props":9603,"children":9604},{},[9605,9607,9612,9613,9618],{"type":23,"value":9606},"Delete rows that have missing values only in the ",{"type":17,"tag":146,"props":9608,"children":9610},{"className":9609},[],[9611],{"type":23,"value":2221},{"type":23,"value":89},{"type":17,"tag":146,"props":9614,"children":9616},{"className":9615},[],[9617],{"type":23,"value":2228},{"type":23,"value":9619}," columns and print the results.",{"type":17,"tag":51,"props":9621,"children":9622},{},[9623],{"type":23,"value":9624},"Keep rows that have at least two non-missing values and print the results.",{"type":17,"tag":51,"props":9626,"children":9627},{},[9628,9630,9635],{"type":23,"value":9629},"Fill missing values in each column with the mean value (using the ",{"type":17,"tag":146,"props":9631,"children":9633},{"className":9632},[],[9634],{"type":23,"value":2228},{"type":23,"value":9636}," column as an example) and print the results.",{"type":17,"tag":51,"props":9638,"children":9639},{},[9640,9645,9646],{"type":17,"tag":83,"props":9641,"children":9642},{},[9643],{"type":23,"value":9644},"Handle duplicate values",{"type":23,"value":1175},{"type":17,"tag":47,"props":9647,"children":9648},{},[9649,9654,9659],{"type":17,"tag":51,"props":9650,"children":9651},{},[9652],{"type":23,"value":9653},"Find and print all duplicate rows.",{"type":17,"tag":51,"props":9655,"children":9656},{},[9657],{"type":23,"value":9658},"Delete all duplicate rows and print the results.",{"type":17,"tag":51,"props":9660,"children":9661},{},[9662,9664,9669],{"type":23,"value":9663},"Delete duplicate rows based only on the ",{"type":17,"tag":146,"props":9665,"children":9667},{"className":9666},[],[9668],{"type":23,"value":2221},{"type":23,"value":9670}," column and print the results.",{"type":17,"tag":51,"props":9672,"children":9673},{},[9674,9679,9680],{"type":17,"tag":83,"props":9675,"children":9676},{},[9677],{"type":23,"value":9678},"Convert data types",{"type":23,"value":1175},{"type":17,"tag":47,"props":9681,"children":9682},{},[9683],{"type":17,"tag":51,"props":9684,"children":9685},{},[9686,9688,9693],{"type":23,"value":9687},"Convert the data type of the ",{"type":17,"tag":146,"props":9689,"children":9691},{"className":9690},[],[9692],{"type":23,"value":2228},{"type":23,"value":9694}," column from string to integer and print the results after the conversion.",{"type":17,"tag":51,"props":9696,"children":9697},{},[9698,9703,9704],{"type":17,"tag":83,"props":9699,"children":9700},{},[9701],{"type":23,"value":9702},"Standardize date format",{"type":23,"value":1175},{"type":17,"tag":47,"props":9705,"children":9706},{},[9707],{"type":17,"tag":51,"props":9708,"children":9709},{},[9710,9712,9717,9719,9724],{"type":23,"value":9711},"Assume the ",{"type":17,"tag":146,"props":9713,"children":9715},{"className":9714},[],[9716],{"type":23,"value":9432},{"type":23,"value":9718}," column contains data in various date formats. Use the ",{"type":17,"tag":146,"props":9720,"children":9722},{"className":9721},[],[9723],{"type":23,"value":8686},{"type":23,"value":9725}," function to standardize the dates to ISO format (YYYY-MM-DD) and print the results.",{"type":17,"tag":51,"props":9727,"children":9728},{},[9729,9734,9735],{"type":17,"tag":83,"props":9730,"children":9731},{},[9732],{"type":23,"value":9733},"Data normalization",{"type":23,"value":1175},{"type":17,"tag":47,"props":9736,"children":9737},{},[9738],{"type":17,"tag":51,"props":9739,"children":9740},{},[9741,9743,9748],{"type":23,"value":9742},"Convert all strings in the ",{"type":17,"tag":146,"props":9744,"children":9746},{"className":9745},[],[9747],{"type":23,"value":2221},{"type":23,"value":9749}," column to lowercase and remove any extra spaces, then print the cleaned DataFrame.",{"type":17,"tag":18,"props":9751,"children":9753},{"id":9752},"_5-summary-of-common-pandas-functions",[9754],{"type":23,"value":9755},"5. Summary of Common Pandas Functions",{"type":17,"tag":134,"props":9757,"children":9759},{"id":9758},"_1-reading-viewing-and-cleaning-data",[9760],{"type":23,"value":9761},"1. Reading, Viewing, and Cleaning Data",{"type":17,"tag":26,"props":9763,"children":9764},{},[9765],{"type":23,"value":9766},"In the above article, we learned the most basic functions of Pandas:",{"type":17,"tag":9403,"props":9768,"children":9769},{},[9770,9786],{"type":17,"tag":9407,"props":9771,"children":9772},{},[9773],{"type":17,"tag":9411,"props":9774,"children":9775},{},[9776,9781],{"type":17,"tag":9415,"props":9777,"children":9778},{},[9779],{"type":23,"value":9780},"Function",{"type":17,"tag":9415,"props":9782,"children":9783},{},[9784],{"type":23,"value":9785},"Description",{"type":17,"tag":9434,"props":9787,"children":9788},{},[9789,9802,9815,9828,9841,9854,9867,9880,9893,9906,9919,9932,9945,9958,9971],{"type":17,"tag":9411,"props":9790,"children":9791},{},[9792,9797],{"type":17,"tag":9441,"props":9793,"children":9794},{},[9795],{"type":23,"value":9796},"pd.read_csv(filename)",{"type":17,"tag":9441,"props":9798,"children":9799},{},[9800],{"type":23,"value":9801},"Read a CSV file;",{"type":17,"tag":9411,"props":9803,"children":9804},{},[9805,9810],{"type":17,"tag":9441,"props":9806,"children":9807},{},[9808],{"type":23,"value":9809},"pd.read_excel(filename)",{"type":17,"tag":9441,"props":9811,"children":9812},{},[9813],{"type":23,"value":9814},"Read an Excel file;",{"type":17,"tag":9411,"props":9816,"children":9817},{},[9818,9823],{"type":17,"tag":9441,"props":9819,"children":9820},{},[9821],{"type":23,"value":9822},"pd.read_sql(query, connection_object)",{"type":17,"tag":9441,"props":9824,"children":9825},{},[9826],{"type":23,"value":9827},"Read data from an SQL database;",{"type":17,"tag":9411,"props":9829,"children":9830},{},[9831,9836],{"type":17,"tag":9441,"props":9832,"children":9833},{},[9834],{"type":23,"value":9835},"pd.read_json(json_string)",{"type":17,"tag":9441,"props":9837,"children":9838},{},[9839],{"type":23,"value":9840},"Read data from a JSON string;",{"type":17,"tag":9411,"props":9842,"children":9843},{},[9844,9849],{"type":17,"tag":9441,"props":9845,"children":9846},{},[9847],{"type":23,"value":9848},"pd.read_html(url)",{"type":17,"tag":9441,"props":9850,"children":9851},{},[9852],{"type":23,"value":9853},"Read data from an HTML page;",{"type":17,"tag":9411,"props":9855,"children":9856},{},[9857,9862],{"type":17,"tag":9441,"props":9858,"children":9859},{},[9860],{"type":23,"value":9861},"df.head(n)",{"type":17,"tag":9441,"props":9863,"children":9864},{},[9865],{"type":23,"value":9866},"Display the first n rows of data;",{"type":17,"tag":9411,"props":9868,"children":9869},{},[9870,9875],{"type":17,"tag":9441,"props":9871,"children":9872},{},[9873],{"type":23,"value":9874},"df.tail(n)",{"type":17,"tag":9441,"props":9876,"children":9877},{},[9878],{"type":23,"value":9879},"Display the last n rows of data;",{"type":17,"tag":9411,"props":9881,"children":9882},{},[9883,9888],{"type":17,"tag":9441,"props":9884,"children":9885},{},[9886],{"type":23,"value":9887},"df.info()",{"type":17,"tag":9441,"props":9889,"children":9890},{},[9891],{"type":23,"value":9892},"Display information about the data, including column names, data types, and missing values;",{"type":17,"tag":9411,"props":9894,"children":9895},{},[9896,9901],{"type":17,"tag":9441,"props":9897,"children":9898},{},[9899],{"type":23,"value":9900},"df.describe()",{"type":17,"tag":9441,"props":9902,"children":9903},{},[9904],{"type":23,"value":9905},"Display basic statistical information about the data, including mean, variance, maximum, minimum, etc.;",{"type":17,"tag":9411,"props":9907,"children":9908},{},[9909,9914],{"type":17,"tag":9441,"props":9910,"children":9911},{},[9912],{"type":23,"value":9913},"df.shape",{"type":17,"tag":9441,"props":9915,"children":9916},{},[9917],{"type":23,"value":9918},"Display the number of rows and columns in the data;",{"type":17,"tag":9411,"props":9920,"children":9921},{},[9922,9927],{"type":17,"tag":9441,"props":9923,"children":9924},{},[9925],{"type":23,"value":9926},"df.dropna()",{"type":17,"tag":9441,"props":9928,"children":9929},{},[9930],{"type":23,"value":9931},"Remove rows or columns with missing values;",{"type":17,"tag":9411,"props":9933,"children":9934},{},[9935,9940],{"type":17,"tag":9441,"props":9936,"children":9937},{},[9938],{"type":23,"value":9939},"df.fillna(value)",{"type":17,"tag":9441,"props":9941,"children":9942},{},[9943],{"type":23,"value":9944},"Replace missing values with the specified value;",{"type":17,"tag":9411,"props":9946,"children":9947},{},[9948,9953],{"type":17,"tag":9441,"props":9949,"children":9950},{},[9951],{"type":23,"value":9952},"df.replace(old_value, new_value)",{"type":17,"tag":9441,"props":9954,"children":9955},{},[9956],{"type":23,"value":9957},"Replace specified values with new values;",{"type":17,"tag":9411,"props":9959,"children":9960},{},[9961,9966],{"type":17,"tag":9441,"props":9962,"children":9963},{},[9964],{"type":23,"value":9965},"df.duplicated()",{"type":17,"tag":9441,"props":9967,"children":9968},{},[9969],{"type":23,"value":9970},"Check for duplicate data;",{"type":17,"tag":9411,"props":9972,"children":9973},{},[9974,9979],{"type":17,"tag":9441,"props":9975,"children":9976},{},[9977],{"type":23,"value":9978},"df.drop_duplicates()",{"type":17,"tag":9441,"props":9980,"children":9981},{},[9982],{"type":23,"value":9983},"Remove duplicate data.",{"type":17,"tag":134,"props":9985,"children":9987},{"id":9986},"_2-data-selection-and-slicing",[9988],{"type":23,"value":9989},"2. Data Selection and Slicing",{"type":17,"tag":3082,"props":9991,"children":9992},{},[9993],{"type":17,"tag":51,"props":9994,"children":9995},{},[9996,9998],{"type":23,"value":9997},"Directly access a column by its name: ",{"type":17,"tag":146,"props":9999,"children":10001},{"className":10000},[],[10002],{"type":23,"value":10003},"df[column_name]",{"type":17,"tag":2251,"props":10005,"children":10006},{":editable":2253,":show-in-col":2253,"max-height":2254},[10007],{"type":17,"tag":299,"props":10008,"children":10010},{"code":10009,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 28]}\ndf = pd.DataFrame(data)\n\n# Select the 'Age' column\nage_column = df['Age']\nprint(age_column)\n",[10011],{"type":17,"tag":146,"props":10012,"children":10013},{"__ignoreMap":7},[10014,10033,10040,10048,10127,10142,10149,10157,10181],{"type":17,"tag":126,"props":10015,"children":10016},{"class":310,"line":311},[10017,10021,10025,10029],{"type":17,"tag":126,"props":10018,"children":10019},{"style":337},[10020],{"type":23,"value":638},{"type":17,"tag":126,"props":10022,"children":10023},{"style":325},[10024],{"type":23,"value":643},{"type":17,"tag":126,"props":10026,"children":10027},{"style":337},[10028],{"type":23,"value":648},{"type":17,"tag":126,"props":10030,"children":10031},{"style":325},[10032],{"type":23,"value":653},{"type":17,"tag":126,"props":10034,"children":10035},{"class":310,"line":321},[10036],{"type":17,"tag":126,"props":10037,"children":10038},{"emptyLinePlaceholder":659},[10039],{"type":23,"value":662},{"type":17,"tag":126,"props":10041,"children":10042},{"class":310,"line":665},[10043],{"type":17,"tag":126,"props":10044,"children":10045},{"style":315},[10046],{"type":23,"value":10047},"# Create a DataFrame\n",{"type":17,"tag":126,"props":10049,"children":10050},{"class":310,"line":674},[10051,10055,10059,10063,10067,10071,10075,10079,10083,10087,10091,10095,10099,10103,10107,10111,10115,10119,10123],{"type":17,"tag":126,"props":10052,"children":10053},{"style":325},[10054],{"type":23,"value":680},{"type":17,"tag":126,"props":10056,"children":10057},{"style":337},[10058],{"type":23,"value":340},{"type":17,"tag":126,"props":10060,"children":10061},{"style":325},[10062],{"type":23,"value":1233},{"type":17,"tag":126,"props":10064,"children":10065},{"style":974},[10066],{"type":23,"value":7049},{"type":17,"tag":126,"props":10068,"children":10069},{"style":325},[10070],{"type":23,"value":1998},{"type":17,"tag":126,"props":10072,"children":10073},{"style":974},[10074],{"type":23,"value":7989},{"type":17,"tag":126,"props":10076,"children":10077},{"style":325},[10078],{"type":23,"value":351},{"type":17,"tag":126,"props":10080,"children":10081},{"style":974},[10082],{"type":23,"value":7998},{"type":17,"tag":126,"props":10084,"children":10085},{"style":325},[10086],{"type":23,"value":351},{"type":17,"tag":126,"props":10088,"children":10089},{"style":974},[10090],{"type":23,"value":8424},{"type":17,"tag":126,"props":10092,"children":10093},{"style":325},[10094],{"type":23,"value":958},{"type":17,"tag":126,"props":10096,"children":10097},{"style":974},[10098],{"type":23,"value":7058},{"type":17,"tag":126,"props":10100,"children":10101},{"style":325},[10102],{"type":23,"value":1998},{"type":17,"tag":126,"props":10104,"children":10105},{"style":343},[10106],{"type":23,"value":2061},{"type":17,"tag":126,"props":10108,"children":10109},{"style":325},[10110],{"type":23,"value":351},{"type":17,"tag":126,"props":10112,"children":10113},{"style":343},[10114],{"type":23,"value":1281},{"type":17,"tag":126,"props":10116,"children":10117},{"style":325},[10118],{"type":23,"value":351},{"type":17,"tag":126,"props":10120,"children":10121},{"style":343},[10122],{"type":23,"value":2043},{"type":17,"tag":126,"props":10124,"children":10125},{"style":325},[10126],{"type":23,"value":8800},{"type":17,"tag":126,"props":10128,"children":10129},{"class":310,"line":729},[10130,10134,10138],{"type":17,"tag":126,"props":10131,"children":10132},{"style":325},[10133],{"type":23,"value":2128},{"type":17,"tag":126,"props":10135,"children":10136},{"style":337},[10137],{"type":23,"value":340},{"type":17,"tag":126,"props":10139,"children":10140},{"style":325},[10141],{"type":23,"value":2137},{"type":17,"tag":126,"props":10143,"children":10144},{"class":310,"line":737},[10145],{"type":17,"tag":126,"props":10146,"children":10147},{"emptyLinePlaceholder":659},[10148],{"type":23,"value":662},{"type":17,"tag":126,"props":10150,"children":10151},{"class":310,"line":746},[10152],{"type":17,"tag":126,"props":10153,"children":10154},{"style":315},[10155],{"type":23,"value":10156},"# Select the 'Age' column\n",{"type":17,"tag":126,"props":10158,"children":10159},{"class":310,"line":1337},[10160,10165,10169,10173,10177],{"type":17,"tag":126,"props":10161,"children":10162},{"style":325},[10163],{"type":23,"value":10164},"age_column ",{"type":17,"tag":126,"props":10166,"children":10167},{"style":337},[10168],{"type":23,"value":340},{"type":17,"tag":126,"props":10170,"children":10171},{"style":325},[10172],{"type":23,"value":3660},{"type":17,"tag":126,"props":10174,"children":10175},{"style":974},[10176],{"type":23,"value":7058},{"type":17,"tag":126,"props":10178,"children":10179},{"style":325},[10180],{"type":23,"value":2105},{"type":17,"tag":126,"props":10182,"children":10183},{"class":310,"line":11},[10184,10188],{"type":17,"tag":126,"props":10185,"children":10186},{"style":343},[10187],{"type":23,"value":752},{"type":17,"tag":126,"props":10189,"children":10190},{"style":325},[10191],{"type":23,"value":10192},"(age_column)\n",{"type":17,"tag":3082,"props":10194,"children":10195},{"start":321},[10196],{"type":17,"tag":51,"props":10197,"children":10198},{},[10199,10201],{"type":23,"value":10200},"Select data by label: ",{"type":17,"tag":146,"props":10202,"children":10204},{"className":10203},[],[10205],{"type":23,"value":10206},"df.loc[row_index, column_name]",{"type":17,"tag":2251,"props":10208,"children":10209},{":editable":2253,":show-in-col":2253,"max-height":2254},[10210],{"type":17,"tag":299,"props":10211,"children":10213},{"code":10212,"language":302,"meta":7,"className":303,"style":7},"# Select the first row, 'Name' column\nfirst_name = df.loc[0, 'Name']\nprint(first_name)\n",[10214],{"type":17,"tag":146,"props":10215,"children":10216},{"__ignoreMap":7},[10217,10225,10258],{"type":17,"tag":126,"props":10218,"children":10219},{"class":310,"line":311},[10220],{"type":17,"tag":126,"props":10221,"children":10222},{"style":315},[10223],{"type":23,"value":10224},"# Select the first row, 'Name' column\n",{"type":17,"tag":126,"props":10226,"children":10227},{"class":310,"line":321},[10228,10233,10237,10242,10246,10250,10254],{"type":17,"tag":126,"props":10229,"children":10230},{"style":325},[10231],{"type":23,"value":10232},"first_name ",{"type":17,"tag":126,"props":10234,"children":10235},{"style":337},[10236],{"type":23,"value":340},{"type":17,"tag":126,"props":10238,"children":10239},{"style":325},[10240],{"type":23,"value":10241}," df.loc[",{"type":17,"tag":126,"props":10243,"children":10244},{"style":343},[10245],{"type":23,"value":3993},{"type":17,"tag":126,"props":10247,"children":10248},{"style":325},[10249],{"type":23,"value":351},{"type":17,"tag":126,"props":10251,"children":10252},{"style":974},[10253],{"type":23,"value":7049},{"type":17,"tag":126,"props":10255,"children":10256},{"style":325},[10257],{"type":23,"value":2105},{"type":17,"tag":126,"props":10259,"children":10260},{"class":310,"line":665},[10261,10265],{"type":17,"tag":126,"props":10262,"children":10263},{"style":343},[10264],{"type":23,"value":752},{"type":17,"tag":126,"props":10266,"children":10267},{"style":325},[10268],{"type":23,"value":10269},"(first_name)\n",{"type":17,"tag":3082,"props":10271,"children":10272},{"start":665},[10273],{"type":17,"tag":51,"props":10274,"children":10275},{},[10276,10278],{"type":23,"value":10277},"Select data by index: ",{"type":17,"tag":146,"props":10279,"children":10281},{"className":10280},[],[10282],{"type":23,"value":10283},"df.iloc[row_index, column_index]",{"type":17,"tag":2251,"props":10285,"children":10286},{":editable":2253,":show-in-col":2253,"max-height":2254},[10287],{"type":17,"tag":299,"props":10288,"children":10290},{"code":10289,"language":302,"meta":7,"className":303,"style":7},"# Select the second row, first column (index starts from 0)\nsecond_row_first_column = df.iloc[1, 0]\nprint(second_row_first_column)\n",[10291],{"type":17,"tag":146,"props":10292,"children":10293},{"__ignoreMap":7},[10294,10302,10335],{"type":17,"tag":126,"props":10295,"children":10296},{"class":310,"line":311},[10297],{"type":17,"tag":126,"props":10298,"children":10299},{"style":315},[10300],{"type":23,"value":10301},"# Select the second row, first column (index starts from 0)\n",{"type":17,"tag":126,"props":10303,"children":10304},{"class":310,"line":321},[10305,10310,10314,10319,10323,10327,10331],{"type":17,"tag":126,"props":10306,"children":10307},{"style":325},[10308],{"type":23,"value":10309},"second_row_first_column ",{"type":17,"tag":126,"props":10311,"children":10312},{"style":337},[10313],{"type":23,"value":340},{"type":17,"tag":126,"props":10315,"children":10316},{"style":325},[10317],{"type":23,"value":10318}," df.iloc[",{"type":17,"tag":126,"props":10320,"children":10321},{"style":343},[10322],{"type":23,"value":847},{"type":17,"tag":126,"props":10324,"children":10325},{"style":325},[10326],{"type":23,"value":351},{"type":17,"tag":126,"props":10328,"children":10329},{"style":343},[10330],{"type":23,"value":3993},{"type":17,"tag":126,"props":10332,"children":10333},{"style":325},[10334],{"type":23,"value":2105},{"type":17,"tag":126,"props":10336,"children":10337},{"class":310,"line":665},[10338,10342],{"type":17,"tag":126,"props":10339,"children":10340},{"style":343},[10341],{"type":23,"value":752},{"type":17,"tag":126,"props":10343,"children":10344},{"style":325},[10345],{"type":23,"value":10346},"(second_row_first_column)\n",{"type":17,"tag":3082,"props":10348,"children":10349},{"start":674},[10350],{"type":17,"tag":51,"props":10351,"children":10352},{},[10353,10355],{"type":23,"value":10354},"Select multiple columns by a list of column names: ",{"type":17,"tag":146,"props":10356,"children":10358},{"className":10357},[],[10359],{"type":23,"value":10360},"df.filter(items=[column_name1, column_name2])",{"type":17,"tag":2251,"props":10362,"children":10363},{":editable":2253,":show-in-col":2253,"max-height":2254},[10364],{"type":17,"tag":299,"props":10365,"children":10367},{"code":10366,"language":302,"meta":7,"className":303,"style":7},"# Select the 'Name' and 'Age' columns\nselected_columns = df.filter(items=['Name', 'Age'])\nprint(selected_columns)\n",[10368],{"type":17,"tag":146,"props":10369,"children":10370},{"__ignoreMap":7},[10371,10379,10425],{"type":17,"tag":126,"props":10372,"children":10373},{"class":310,"line":311},[10374],{"type":17,"tag":126,"props":10375,"children":10376},{"style":315},[10377],{"type":23,"value":10378},"# Select the 'Name' and 'Age' columns\n",{"type":17,"tag":126,"props":10380,"children":10381},{"class":310,"line":321},[10382,10387,10391,10396,10401,10405,10409,10413,10417,10421],{"type":17,"tag":126,"props":10383,"children":10384},{"style":325},[10385],{"type":23,"value":10386},"selected_columns ",{"type":17,"tag":126,"props":10388,"children":10389},{"style":337},[10390],{"type":23,"value":340},{"type":17,"tag":126,"props":10392,"children":10393},{"style":325},[10394],{"type":23,"value":10395}," df.filter(",{"type":17,"tag":126,"props":10397,"children":10398},{"style":331},[10399],{"type":23,"value":10400},"items",{"type":17,"tag":126,"props":10402,"children":10403},{"style":337},[10404],{"type":23,"value":340},{"type":17,"tag":126,"props":10406,"children":10407},{"style":325},[10408],{"type":23,"value":971},{"type":17,"tag":126,"props":10410,"children":10411},{"style":974},[10412],{"type":23,"value":7049},{"type":17,"tag":126,"props":10414,"children":10415},{"style":325},[10416],{"type":23,"value":351},{"type":17,"tag":126,"props":10418,"children":10419},{"style":974},[10420],{"type":23,"value":7058},{"type":17,"tag":126,"props":10422,"children":10423},{"style":325},[10424],{"type":23,"value":726},{"type":17,"tag":126,"props":10426,"children":10427},{"class":310,"line":665},[10428,10432],{"type":17,"tag":126,"props":10429,"children":10430},{"style":343},[10431],{"type":23,"value":752},{"type":17,"tag":126,"props":10433,"children":10434},{"style":325},[10435],{"type":23,"value":10436},"(selected_columns)\n",{"type":17,"tag":3082,"props":10438,"children":10439},{"start":729},[10440],{"type":17,"tag":51,"props":10441,"children":10442},{},[10443,10445],{"type":23,"value":10444},"Select columns by matching a regular expression: ",{"type":17,"tag":146,"props":10446,"children":10448},{"className":10447},[],[10449],{"type":23,"value":10450},"df.filter(regex='regex')",{"type":17,"tag":2251,"props":10452,"children":10453},{":editable":2253,":show-in-col":2253,"max-height":2254},[10454],{"type":17,"tag":299,"props":10455,"children":10457},{"code":10456,"language":302,"meta":7,"className":303,"style":7},"# Select all columns containing 'Age'\nage_related_columns = df.filter(regex='Age')\nprint(age_related_columns)\n",[10458],{"type":17,"tag":146,"props":10459,"children":10460},{"__ignoreMap":7},[10461,10469,10502],{"type":17,"tag":126,"props":10462,"children":10463},{"class":310,"line":311},[10464],{"type":17,"tag":126,"props":10465,"children":10466},{"style":315},[10467],{"type":23,"value":10468},"# Select all columns containing 'Age'\n",{"type":17,"tag":126,"props":10470,"children":10471},{"class":310,"line":321},[10472,10477,10481,10485,10490,10494,10498],{"type":17,"tag":126,"props":10473,"children":10474},{"style":325},[10475],{"type":23,"value":10476},"age_related_columns ",{"type":17,"tag":126,"props":10478,"children":10479},{"style":337},[10480],{"type":23,"value":340},{"type":17,"tag":126,"props":10482,"children":10483},{"style":325},[10484],{"type":23,"value":10395},{"type":17,"tag":126,"props":10486,"children":10487},{"style":331},[10488],{"type":23,"value":10489},"regex",{"type":17,"tag":126,"props":10491,"children":10492},{"style":337},[10493],{"type":23,"value":340},{"type":17,"tag":126,"props":10495,"children":10496},{"style":974},[10497],{"type":23,"value":7058},{"type":17,"tag":126,"props":10499,"children":10500},{"style":325},[10501],{"type":23,"value":438},{"type":17,"tag":126,"props":10503,"children":10504},{"class":310,"line":665},[10505,10509],{"type":17,"tag":126,"props":10506,"children":10507},{"style":343},[10508],{"type":23,"value":752},{"type":17,"tag":126,"props":10510,"children":10511},{"style":325},[10512],{"type":23,"value":10513},"(age_related_columns)\n",{"type":17,"tag":3082,"props":10515,"children":10516},{"start":737},[10517],{"type":17,"tag":51,"props":10518,"children":10519},{},[10520,10522],{"type":23,"value":10521},"Randomly select n rows of data: ",{"type":17,"tag":146,"props":10523,"children":10525},{"className":10524},[],[10526],{"type":23,"value":10527},"df.sample(n)",{"type":17,"tag":2251,"props":10529,"children":10530},{":editable":2253,":show-in-col":2253,"max-height":2254},[10531],{"type":17,"tag":299,"props":10532,"children":10534},{"code":10533,"language":302,"meta":7,"className":303,"style":7},"# Randomly select 2 rows of data\nsample_df = df.sample(2)\nprint(sample_df)\n",[10535],{"type":17,"tag":146,"props":10536,"children":10537},{"__ignoreMap":7},[10538,10546,10571],{"type":17,"tag":126,"props":10539,"children":10540},{"class":310,"line":311},[10541],{"type":17,"tag":126,"props":10542,"children":10543},{"style":315},[10544],{"type":23,"value":10545},"# Randomly select 2 rows of data\n",{"type":17,"tag":126,"props":10547,"children":10548},{"class":310,"line":321},[10549,10554,10558,10563,10567],{"type":17,"tag":126,"props":10550,"children":10551},{"style":325},[10552],{"type":23,"value":10553},"sample_df ",{"type":17,"tag":126,"props":10555,"children":10556},{"style":337},[10557],{"type":23,"value":340},{"type":17,"tag":126,"props":10559,"children":10560},{"style":325},[10561],{"type":23,"value":10562}," df.sample(",{"type":17,"tag":126,"props":10564,"children":10565},{"style":343},[10566],{"type":23,"value":7177},{"type":17,"tag":126,"props":10568,"children":10569},{"style":325},[10570],{"type":23,"value":438},{"type":17,"tag":126,"props":10572,"children":10573},{"class":310,"line":665},[10574,10578],{"type":17,"tag":126,"props":10575,"children":10576},{"style":343},[10577],{"type":23,"value":752},{"type":17,"tag":126,"props":10579,"children":10580},{"style":325},[10581],{"type":23,"value":10582},"(sample_df)\n",{"type":17,"tag":134,"props":10584,"children":10586},{"id":10585},"_3-data-sorting",[10587],{"type":23,"value":10588},"3. Data Sorting",{"type":17,"tag":3082,"props":10590,"children":10591},{},[10592],{"type":17,"tag":51,"props":10593,"children":10594},{},[10595,10597,10602],{"type":23,"value":10596},"Sort a ",{"type":17,"tag":146,"props":10598,"children":10600},{"className":10599},[],[10601],{"type":23,"value":87},{"type":23,"value":10603}," by the values of specified columns:",{"type":17,"tag":299,"props":10605,"children":10607},{"code":10606,"language":302,"meta":7,"className":303,"style":7},"DataFrame.sort_values(by, axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')\n",[10608],{"type":17,"tag":146,"props":10609,"children":10610},{"__ignoreMap":7},[10611],{"type":17,"tag":126,"props":10612,"children":10613},{"class":310,"line":311},[10614,10619,10623,10627,10631,10635,10640,10644,10648,10652,10656,10660,10664,10668,10673,10677,10682,10686,10691,10695,10700],{"type":17,"tag":126,"props":10615,"children":10616},{"style":325},[10617],{"type":23,"value":10618},"DataFrame.sort_values(by, ",{"type":17,"tag":126,"props":10620,"children":10621},{"style":331},[10622],{"type":23,"value":3479},{"type":17,"tag":126,"props":10624,"children":10625},{"style":337},[10626],{"type":23,"value":340},{"type":17,"tag":126,"props":10628,"children":10629},{"style":343},[10630],{"type":23,"value":3993},{"type":17,"tag":126,"props":10632,"children":10633},{"style":325},[10634],{"type":23,"value":351},{"type":17,"tag":126,"props":10636,"children":10637},{"style":331},[10638],{"type":23,"value":10639},"ascending",{"type":17,"tag":126,"props":10641,"children":10642},{"style":337},[10643],{"type":23,"value":340},{"type":17,"tag":126,"props":10645,"children":10646},{"style":343},[10647],{"type":23,"value":574},{"type":17,"tag":126,"props":10649,"children":10650},{"style":325},[10651],{"type":23,"value":351},{"type":17,"tag":126,"props":10653,"children":10654},{"style":331},[10655],{"type":23,"value":6817},{"type":17,"tag":126,"props":10657,"children":10658},{"style":337},[10659],{"type":23,"value":340},{"type":17,"tag":126,"props":10661,"children":10662},{"style":343},[10663],{"type":23,"value":416},{"type":17,"tag":126,"props":10665,"children":10666},{"style":325},[10667],{"type":23,"value":351},{"type":17,"tag":126,"props":10669,"children":10670},{"style":331},[10671],{"type":23,"value":10672},"kind",{"type":17,"tag":126,"props":10674,"children":10675},{"style":337},[10676],{"type":23,"value":340},{"type":17,"tag":126,"props":10678,"children":10679},{"style":974},[10680],{"type":23,"value":10681},"'quicksort'",{"type":17,"tag":126,"props":10683,"children":10684},{"style":325},[10685],{"type":23,"value":351},{"type":17,"tag":126,"props":10687,"children":10688},{"style":331},[10689],{"type":23,"value":10690},"na_position",{"type":17,"tag":126,"props":10692,"children":10693},{"style":337},[10694],{"type":23,"value":340},{"type":17,"tag":126,"props":10696,"children":10697},{"style":974},[10698],{"type":23,"value":10699},"'last'",{"type":17,"tag":126,"props":10701,"children":10702},{"style":325},[10703],{"type":23,"value":438},{"type":17,"tag":26,"props":10705,"children":10706},{},[10707],{"type":23,"value":6834},{"type":17,"tag":47,"props":10709,"children":10710},{},[10711,10722,10732,10742,10752,10762],{"type":17,"tag":51,"props":10712,"children":10713},{},[10714,10720],{"type":17,"tag":146,"props":10715,"children":10717},{"className":10716},[],[10718],{"type":23,"value":10719},"by",{"type":23,"value":10721},": The column name or list of column names to sort by.",{"type":17,"tag":51,"props":10723,"children":10724},{},[10725,10730],{"type":17,"tag":146,"props":10726,"children":10728},{"className":10727},[],[10729],{"type":23,"value":3479},{"type":23,"value":10731},": The axis to sort along, 0 for rows, 1 for columns.",{"type":17,"tag":51,"props":10733,"children":10734},{},[10735,10740],{"type":17,"tag":146,"props":10736,"children":10738},{"className":10737},[],[10739],{"type":23,"value":10639},{"type":23,"value":10741},": Whether to sort in ascending order, default is True.",{"type":17,"tag":51,"props":10743,"children":10744},{},[10745,10750],{"type":17,"tag":146,"props":10746,"children":10748},{"className":10747},[],[10749],{"type":23,"value":6817},{"type":23,"value":10751},": Whether to modify the original DataFrame, default is False.",{"type":17,"tag":51,"props":10753,"children":10754},{},[10755,10760],{"type":17,"tag":146,"props":10756,"children":10758},{"className":10757},[],[10759],{"type":23,"value":10672},{"type":23,"value":10761},": The sorting algorithm, commonly used are 'quicksort', 'mergesort', 'heapsort'.",{"type":17,"tag":51,"props":10763,"children":10764},{},[10765,10770],{"type":17,"tag":146,"props":10766,"children":10768},{"className":10767},[],[10769],{"type":23,"value":10690},{"type":23,"value":10771},": Specify the position of missing values, 'first' to place them at the beginning, 'last' to place them at the end.",{"type":17,"tag":2251,"props":10773,"children":10774},{":editable":2253,":show-in-col":2253,"max-height":2254},[10775],{"type":17,"tag":299,"props":10776,"children":10778},{"code":10777,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 28]}\ndf = pd.DataFrame(data)\n\n# Sort by the 'Age' column in ascending order\ndf_sorted_by_age = df.sort_values('Age')\nprint(f\"Sorted by 'Age' column in ascending order:\\n{df_sorted_by_age}\")\n\n# Sort by the 'Name' column in descending order\ndf_sorted_by_name_desc = df.sort_values('Name', ascending=False)\nprint(f\"Sorted by 'Name' column in descending order:\\n{df_sorted_by_name_desc}\")\n\n# Sort by multiple columns, 'Age' in ascending order, 'Name' in descending order\ndf_sorted_multi = df.sort_values(['Age', 'Name'], ascending=[True, False])\nprint(f\"Sorted by multiple columns, 'Age' in ascending order, 'Name' in descending order:\\n{df_sorted_multi}\")\n",[10779],{"type":17,"tag":146,"props":10780,"children":10781},{"__ignoreMap":7},[10782,10801,10808,10815,10894,10909,10916,10924,10949,10991,10998,11006,11046,11087,11094,11102,11163],{"type":17,"tag":126,"props":10783,"children":10784},{"class":310,"line":311},[10785,10789,10793,10797],{"type":17,"tag":126,"props":10786,"children":10787},{"style":337},[10788],{"type":23,"value":638},{"type":17,"tag":126,"props":10790,"children":10791},{"style":325},[10792],{"type":23,"value":643},{"type":17,"tag":126,"props":10794,"children":10795},{"style":337},[10796],{"type":23,"value":648},{"type":17,"tag":126,"props":10798,"children":10799},{"style":325},[10800],{"type":23,"value":653},{"type":17,"tag":126,"props":10802,"children":10803},{"class":310,"line":321},[10804],{"type":17,"tag":126,"props":10805,"children":10806},{"emptyLinePlaceholder":659},[10807],{"type":23,"value":662},{"type":17,"tag":126,"props":10809,"children":10810},{"class":310,"line":665},[10811],{"type":17,"tag":126,"props":10812,"children":10813},{"style":315},[10814],{"type":23,"value":10047},{"type":17,"tag":126,"props":10816,"children":10817},{"class":310,"line":674},[10818,10822,10826,10830,10834,10838,10842,10846,10850,10854,10858,10862,10866,10870,10874,10878,10882,10886,10890],{"type":17,"tag":126,"props":10819,"children":10820},{"style":325},[10821],{"type":23,"value":680},{"type":17,"tag":126,"props":10823,"children":10824},{"style":337},[10825],{"type":23,"value":340},{"type":17,"tag":126,"props":10827,"children":10828},{"style":325},[10829],{"type":23,"value":1233},{"type":17,"tag":126,"props":10831,"children":10832},{"style":974},[10833],{"type":23,"value":7049},{"type":17,"tag":126,"props":10835,"children":10836},{"style":325},[10837],{"type":23,"value":1998},{"type":17,"tag":126,"props":10839,"children":10840},{"style":974},[10841],{"type":23,"value":7989},{"type":17,"tag":126,"props":10843,"children":10844},{"style":325},[10845],{"type":23,"value":351},{"type":17,"tag":126,"props":10847,"children":10848},{"style":974},[10849],{"type":23,"value":7998},{"type":17,"tag":126,"props":10851,"children":10852},{"style":325},[10853],{"type":23,"value":351},{"type":17,"tag":126,"props":10855,"children":10856},{"style":974},[10857],{"type":23,"value":8424},{"type":17,"tag":126,"props":10859,"children":10860},{"style":325},[10861],{"type":23,"value":958},{"type":17,"tag":126,"props":10863,"children":10864},{"style":974},[10865],{"type":23,"value":7058},{"type":17,"tag":126,"props":10867,"children":10868},{"style":325},[10869],{"type":23,"value":1998},{"type":17,"tag":126,"props":10871,"children":10872},{"style":343},[10873],{"type":23,"value":2061},{"type":17,"tag":126,"props":10875,"children":10876},{"style":325},[10877],{"type":23,"value":351},{"type":17,"tag":126,"props":10879,"children":10880},{"style":343},[10881],{"type":23,"value":1281},{"type":17,"tag":126,"props":10883,"children":10884},{"style":325},[10885],{"type":23,"value":351},{"type":17,"tag":126,"props":10887,"children":10888},{"style":343},[10889],{"type":23,"value":2043},{"type":17,"tag":126,"props":10891,"children":10892},{"style":325},[10893],{"type":23,"value":8800},{"type":17,"tag":126,"props":10895,"children":10896},{"class":310,"line":729},[10897,10901,10905],{"type":17,"tag":126,"props":10898,"children":10899},{"style":325},[10900],{"type":23,"value":2128},{"type":17,"tag":126,"props":10902,"children":10903},{"style":337},[10904],{"type":23,"value":340},{"type":17,"tag":126,"props":10906,"children":10907},{"style":325},[10908],{"type":23,"value":2137},{"type":17,"tag":126,"props":10910,"children":10911},{"class":310,"line":737},[10912],{"type":17,"tag":126,"props":10913,"children":10914},{"emptyLinePlaceholder":659},[10915],{"type":23,"value":662},{"type":17,"tag":126,"props":10917,"children":10918},{"class":310,"line":746},[10919],{"type":17,"tag":126,"props":10920,"children":10921},{"style":315},[10922],{"type":23,"value":10923},"# Sort by the 'Age' column in ascending order\n",{"type":17,"tag":126,"props":10925,"children":10926},{"class":310,"line":1337},[10927,10932,10936,10941,10945],{"type":17,"tag":126,"props":10928,"children":10929},{"style":325},[10930],{"type":23,"value":10931},"df_sorted_by_age ",{"type":17,"tag":126,"props":10933,"children":10934},{"style":337},[10935],{"type":23,"value":340},{"type":17,"tag":126,"props":10937,"children":10938},{"style":325},[10939],{"type":23,"value":10940}," df.sort_values(",{"type":17,"tag":126,"props":10942,"children":10943},{"style":974},[10944],{"type":23,"value":7058},{"type":17,"tag":126,"props":10946,"children":10947},{"style":325},[10948],{"type":23,"value":438},{"type":17,"tag":126,"props":10950,"children":10951},{"class":310,"line":11},[10952,10956,10960,10964,10969,10974,10979,10983,10987],{"type":17,"tag":126,"props":10953,"children":10954},{"style":343},[10955],{"type":23,"value":752},{"type":17,"tag":126,"props":10957,"children":10958},{"style":325},[10959],{"type":23,"value":3681},{"type":17,"tag":126,"props":10961,"children":10962},{"style":337},[10963],{"type":23,"value":3686},{"type":17,"tag":126,"props":10965,"children":10966},{"style":974},[10967],{"type":23,"value":10968},"\"Sorted by 'Age' column in ascending order:",{"type":17,"tag":126,"props":10970,"children":10971},{"style":343},[10972],{"type":23,"value":10973},"\\n{",{"type":17,"tag":126,"props":10975,"children":10976},{"style":325},[10977],{"type":23,"value":10978},"df_sorted_by_age",{"type":17,"tag":126,"props":10980,"children":10981},{"style":343},[10982],{"type":23,"value":3706},{"type":17,"tag":126,"props":10984,"children":10985},{"style":974},[10986],{"type":23,"value":3711},{"type":17,"tag":126,"props":10988,"children":10989},{"style":325},[10990],{"type":23,"value":438},{"type":17,"tag":126,"props":10992,"children":10993},{"class":310,"line":2122},[10994],{"type":17,"tag":126,"props":10995,"children":10996},{"emptyLinePlaceholder":659},[10997],{"type":23,"value":662},{"type":17,"tag":126,"props":10999,"children":11000},{"class":310,"line":2140},[11001],{"type":17,"tag":126,"props":11002,"children":11003},{"style":315},[11004],{"type":23,"value":11005},"# Sort by the 'Name' column in descending order\n",{"type":17,"tag":126,"props":11007,"children":11008},{"class":310,"line":2148},[11009,11014,11018,11022,11026,11030,11034,11038,11042],{"type":17,"tag":126,"props":11010,"children":11011},{"style":325},[11012],{"type":23,"value":11013},"df_sorted_by_name_desc ",{"type":17,"tag":126,"props":11015,"children":11016},{"style":337},[11017],{"type":23,"value":340},{"type":17,"tag":126,"props":11019,"children":11020},{"style":325},[11021],{"type":23,"value":10940},{"type":17,"tag":126,"props":11023,"children":11024},{"style":974},[11025],{"type":23,"value":7049},{"type":17,"tag":126,"props":11027,"children":11028},{"style":325},[11029],{"type":23,"value":351},{"type":17,"tag":126,"props":11031,"children":11032},{"style":331},[11033],{"type":23,"value":10639},{"type":17,"tag":126,"props":11035,"children":11036},{"style":337},[11037],{"type":23,"value":340},{"type":17,"tag":126,"props":11039,"children":11040},{"style":343},[11041],{"type":23,"value":416},{"type":17,"tag":126,"props":11043,"children":11044},{"style":325},[11045],{"type":23,"value":438},{"type":17,"tag":126,"props":11047,"children":11048},{"class":310,"line":2157},[11049,11053,11057,11061,11066,11070,11075,11079,11083],{"type":17,"tag":126,"props":11050,"children":11051},{"style":343},[11052],{"type":23,"value":752},{"type":17,"tag":126,"props":11054,"children":11055},{"style":325},[11056],{"type":23,"value":3681},{"type":17,"tag":126,"props":11058,"children":11059},{"style":337},[11060],{"type":23,"value":3686},{"type":17,"tag":126,"props":11062,"children":11063},{"style":974},[11064],{"type":23,"value":11065},"\"Sorted by 'Name' column in descending order:",{"type":17,"tag":126,"props":11067,"children":11068},{"style":343},[11069],{"type":23,"value":10973},{"type":17,"tag":126,"props":11071,"children":11072},{"style":325},[11073],{"type":23,"value":11074},"df_sorted_by_name_desc",{"type":17,"tag":126,"props":11076,"children":11077},{"style":343},[11078],{"type":23,"value":3706},{"type":17,"tag":126,"props":11080,"children":11081},{"style":974},[11082],{"type":23,"value":3711},{"type":17,"tag":126,"props":11084,"children":11085},{"style":325},[11086],{"type":23,"value":438},{"type":17,"tag":126,"props":11088,"children":11089},{"class":310,"line":4000},[11090],{"type":17,"tag":126,"props":11091,"children":11092},{"emptyLinePlaceholder":659},[11093],{"type":23,"value":662},{"type":17,"tag":126,"props":11095,"children":11096},{"class":310,"line":4008},[11097],{"type":17,"tag":126,"props":11098,"children":11099},{"style":315},[11100],{"type":23,"value":11101},"# Sort by multiple columns, 'Age' in ascending order, 'Name' in descending order\n",{"type":17,"tag":126,"props":11103,"children":11104},{"class":310,"line":4017},[11105,11110,11114,11119,11123,11127,11131,11135,11139,11143,11147,11151,11155,11159],{"type":17,"tag":126,"props":11106,"children":11107},{"style":325},[11108],{"type":23,"value":11109},"df_sorted_multi ",{"type":17,"tag":126,"props":11111,"children":11112},{"style":337},[11113],{"type":23,"value":340},{"type":17,"tag":126,"props":11115,"children":11116},{"style":325},[11117],{"type":23,"value":11118}," df.sort_values([",{"type":17,"tag":126,"props":11120,"children":11121},{"style":974},[11122],{"type":23,"value":7058},{"type":17,"tag":126,"props":11124,"children":11125},{"style":325},[11126],{"type":23,"value":351},{"type":17,"tag":126,"props":11128,"children":11129},{"style":974},[11130],{"type":23,"value":7049},{"type":17,"tag":126,"props":11132,"children":11133},{"style":325},[11134],{"type":23,"value":958},{"type":17,"tag":126,"props":11136,"children":11137},{"style":331},[11138],{"type":23,"value":10639},{"type":17,"tag":126,"props":11140,"children":11141},{"style":337},[11142],{"type":23,"value":340},{"type":17,"tag":126,"props":11144,"children":11145},{"style":325},[11146],{"type":23,"value":971},{"type":17,"tag":126,"props":11148,"children":11149},{"style":343},[11150],{"type":23,"value":574},{"type":17,"tag":126,"props":11152,"children":11153},{"style":325},[11154],{"type":23,"value":351},{"type":17,"tag":126,"props":11156,"children":11157},{"style":343},[11158],{"type":23,"value":416},{"type":17,"tag":126,"props":11160,"children":11161},{"style":325},[11162],{"type":23,"value":726},{"type":17,"tag":126,"props":11164,"children":11165},{"class":310,"line":4233},[11166,11170,11174,11178,11183,11187,11192,11196,11200],{"type":17,"tag":126,"props":11167,"children":11168},{"style":343},[11169],{"type":23,"value":752},{"type":17,"tag":126,"props":11171,"children":11172},{"style":325},[11173],{"type":23,"value":3681},{"type":17,"tag":126,"props":11175,"children":11176},{"style":337},[11177],{"type":23,"value":3686},{"type":17,"tag":126,"props":11179,"children":11180},{"style":974},[11181],{"type":23,"value":11182},"\"Sorted by multiple columns, 'Age' in ascending order, 'Name' in descending order:",{"type":17,"tag":126,"props":11184,"children":11185},{"style":343},[11186],{"type":23,"value":10973},{"type":17,"tag":126,"props":11188,"children":11189},{"style":325},[11190],{"type":23,"value":11191},"df_sorted_multi",{"type":17,"tag":126,"props":11193,"children":11194},{"style":343},[11195],{"type":23,"value":3706},{"type":17,"tag":126,"props":11197,"children":11198},{"style":974},[11199],{"type":23,"value":3711},{"type":17,"tag":126,"props":11201,"children":11202},{"style":325},[11203],{"type":23,"value":438},{"type":17,"tag":3082,"props":11205,"children":11206},{"start":321},[11207],{"type":17,"tag":51,"props":11208,"children":11209},{},[11210],{"type":23,"value":11211},"Sort by index",{"type":17,"tag":299,"props":11213,"children":11215},{"code":11214,"language":302,"meta":7,"className":303,"style":7},"DataFrame.sort_index(axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')\n",[11216],{"type":17,"tag":146,"props":11217,"children":11218},{"__ignoreMap":7},[11219],{"type":17,"tag":126,"props":11220,"children":11221},{"class":310,"line":311},[11222,11227,11231,11235,11239,11243,11247,11251,11255,11259,11263,11267,11271,11275,11279,11283,11287,11291,11295,11299,11303],{"type":17,"tag":126,"props":11223,"children":11224},{"style":325},[11225],{"type":23,"value":11226},"DataFrame.sort_index(",{"type":17,"tag":126,"props":11228,"children":11229},{"style":331},[11230],{"type":23,"value":3479},{"type":17,"tag":126,"props":11232,"children":11233},{"style":337},[11234],{"type":23,"value":340},{"type":17,"tag":126,"props":11236,"children":11237},{"style":343},[11238],{"type":23,"value":3993},{"type":17,"tag":126,"props":11240,"children":11241},{"style":325},[11242],{"type":23,"value":351},{"type":17,"tag":126,"props":11244,"children":11245},{"style":331},[11246],{"type":23,"value":10639},{"type":17,"tag":126,"props":11248,"children":11249},{"style":337},[11250],{"type":23,"value":340},{"type":17,"tag":126,"props":11252,"children":11253},{"style":343},[11254],{"type":23,"value":574},{"type":17,"tag":126,"props":11256,"children":11257},{"style":325},[11258],{"type":23,"value":351},{"type":17,"tag":126,"props":11260,"children":11261},{"style":331},[11262],{"type":23,"value":6817},{"type":17,"tag":126,"props":11264,"children":11265},{"style":337},[11266],{"type":23,"value":340},{"type":17,"tag":126,"props":11268,"children":11269},{"style":343},[11270],{"type":23,"value":416},{"type":17,"tag":126,"props":11272,"children":11273},{"style":325},[11274],{"type":23,"value":351},{"type":17,"tag":126,"props":11276,"children":11277},{"style":331},[11278],{"type":23,"value":10672},{"type":17,"tag":126,"props":11280,"children":11281},{"style":337},[11282],{"type":23,"value":340},{"type":17,"tag":126,"props":11284,"children":11285},{"style":974},[11286],{"type":23,"value":10681},{"type":17,"tag":126,"props":11288,"children":11289},{"style":325},[11290],{"type":23,"value":351},{"type":17,"tag":126,"props":11292,"children":11293},{"style":331},[11294],{"type":23,"value":10690},{"type":17,"tag":126,"props":11296,"children":11297},{"style":337},[11298],{"type":23,"value":340},{"type":17,"tag":126,"props":11300,"children":11301},{"style":974},[11302],{"type":23,"value":10699},{"type":17,"tag":126,"props":11304,"children":11305},{"style":325},[11306],{"type":23,"value":438},{"type":17,"tag":26,"props":11308,"children":11309},{},[11310],{"type":23,"value":6834},{"type":17,"tag":47,"props":11312,"children":11313},{},[11314,11323,11332,11341,11350],{"type":17,"tag":51,"props":11315,"children":11316},{},[11317,11322],{"type":17,"tag":146,"props":11318,"children":11320},{"className":11319},[],[11321],{"type":23,"value":3479},{"type":23,"value":10731},{"type":17,"tag":51,"props":11324,"children":11325},{},[11326,11331],{"type":17,"tag":146,"props":11327,"children":11329},{"className":11328},[],[11330],{"type":23,"value":10639},{"type":23,"value":10741},{"type":17,"tag":51,"props":11333,"children":11334},{},[11335,11340],{"type":17,"tag":146,"props":11336,"children":11338},{"className":11337},[],[11339],{"type":23,"value":6817},{"type":23,"value":10751},{"type":17,"tag":51,"props":11342,"children":11343},{},[11344,11349],{"type":17,"tag":146,"props":11345,"children":11347},{"className":11346},[],[11348],{"type":23,"value":10672},{"type":23,"value":10761},{"type":17,"tag":51,"props":11351,"children":11352},{},[11353,11358],{"type":17,"tag":146,"props":11354,"children":11356},{"className":11355},[],[11357],{"type":23,"value":10690},{"type":23,"value":10771},{"type":17,"tag":2251,"props":11360,"children":11361},{":editable":2253,":show-in-col":2253,"max-height":2254},[11362],{"type":17,"tag":299,"props":11363,"children":11365},{"code":11364,"language":302,"meta":7,"className":303,"style":7},"# Create a DataFrame with string index\ndata = {'A': [1, 2, 3], 'B': [4, 5, 6]}\ndf = pd.DataFrame(data, index=['c', 'a', 'b'])\n\n# Sort by index in ascending order\ndf_sorted_by_index = df.sort_index()\nprint(df_sorted_by_index)\n",[11366],{"type":17,"tag":146,"props":11367,"children":11368},{"__ignoreMap":7},[11369,11377,11462,11516,11523,11531,11548],{"type":17,"tag":126,"props":11370,"children":11371},{"class":310,"line":311},[11372],{"type":17,"tag":126,"props":11373,"children":11374},{"style":315},[11375],{"type":23,"value":11376},"# Create a DataFrame with string index\n",{"type":17,"tag":126,"props":11378,"children":11379},{"class":310,"line":321},[11380,11384,11388,11392,11397,11401,11405,11409,11413,11417,11422,11426,11431,11435,11440,11444,11449,11453,11458],{"type":17,"tag":126,"props":11381,"children":11382},{"style":325},[11383],{"type":23,"value":680},{"type":17,"tag":126,"props":11385,"children":11386},{"style":337},[11387],{"type":23,"value":340},{"type":17,"tag":126,"props":11389,"children":11390},{"style":325},[11391],{"type":23,"value":1233},{"type":17,"tag":126,"props":11393,"children":11394},{"style":974},[11395],{"type":23,"value":11396},"'A'",{"type":17,"tag":126,"props":11398,"children":11399},{"style":325},[11400],{"type":23,"value":1998},{"type":17,"tag":126,"props":11402,"children":11403},{"style":343},[11404],{"type":23,"value":847},{"type":17,"tag":126,"props":11406,"children":11407},{"style":325},[11408],{"type":23,"value":351},{"type":17,"tag":126,"props":11410,"children":11411},{"style":343},[11412],{"type":23,"value":7177},{"type":17,"tag":126,"props":11414,"children":11415},{"style":325},[11416],{"type":23,"value":351},{"type":17,"tag":126,"props":11418,"children":11419},{"style":343},[11420],{"type":23,"value":11421},"3",{"type":17,"tag":126,"props":11423,"children":11424},{"style":325},[11425],{"type":23,"value":958},{"type":17,"tag":126,"props":11427,"children":11428},{"style":974},[11429],{"type":23,"value":11430},"'B'",{"type":17,"tag":126,"props":11432,"children":11433},{"style":325},[11434],{"type":23,"value":1998},{"type":17,"tag":126,"props":11436,"children":11437},{"style":343},[11438],{"type":23,"value":11439},"4",{"type":17,"tag":126,"props":11441,"children":11442},{"style":325},[11443],{"type":23,"value":351},{"type":17,"tag":126,"props":11445,"children":11446},{"style":343},[11447],{"type":23,"value":11448},"5",{"type":17,"tag":126,"props":11450,"children":11451},{"style":325},[11452],{"type":23,"value":351},{"type":17,"tag":126,"props":11454,"children":11455},{"style":343},[11456],{"type":23,"value":11457},"6",{"type":17,"tag":126,"props":11459,"children":11460},{"style":325},[11461],{"type":23,"value":8800},{"type":17,"tag":126,"props":11463,"children":11464},{"class":310,"line":665},[11465,11469,11473,11477,11481,11485,11489,11494,11498,11503,11507,11512],{"type":17,"tag":126,"props":11466,"children":11467},{"style":325},[11468],{"type":23,"value":2128},{"type":17,"tag":126,"props":11470,"children":11471},{"style":337},[11472],{"type":23,"value":340},{"type":17,"tag":126,"props":11474,"children":11475},{"style":325},[11476],{"type":23,"value":2436},{"type":17,"tag":126,"props":11478,"children":11479},{"style":331},[11480],{"type":23,"value":356},{"type":17,"tag":126,"props":11482,"children":11483},{"style":337},[11484],{"type":23,"value":340},{"type":17,"tag":126,"props":11486,"children":11487},{"style":325},[11488],{"type":23,"value":971},{"type":17,"tag":126,"props":11490,"children":11491},{"style":974},[11492],{"type":23,"value":11493},"'c'",{"type":17,"tag":126,"props":11495,"children":11496},{"style":325},[11497],{"type":23,"value":351},{"type":17,"tag":126,"props":11499,"children":11500},{"style":974},[11501],{"type":23,"value":11502},"'a'",{"type":17,"tag":126,"props":11504,"children":11505},{"style":325},[11506],{"type":23,"value":351},{"type":17,"tag":126,"props":11508,"children":11509},{"style":974},[11510],{"type":23,"value":11511},"'b'",{"type":17,"tag":126,"props":11513,"children":11514},{"style":325},[11515],{"type":23,"value":726},{"type":17,"tag":126,"props":11517,"children":11518},{"class":310,"line":674},[11519],{"type":17,"tag":126,"props":11520,"children":11521},{"emptyLinePlaceholder":659},[11522],{"type":23,"value":662},{"type":17,"tag":126,"props":11524,"children":11525},{"class":310,"line":729},[11526],{"type":17,"tag":126,"props":11527,"children":11528},{"style":315},[11529],{"type":23,"value":11530},"# Sort by index in ascending order\n",{"type":17,"tag":126,"props":11532,"children":11533},{"class":310,"line":737},[11534,11539,11543],{"type":17,"tag":126,"props":11535,"children":11536},{"style":325},[11537],{"type":23,"value":11538},"df_sorted_by_index ",{"type":17,"tag":126,"props":11540,"children":11541},{"style":337},[11542],{"type":23,"value":340},{"type":17,"tag":126,"props":11544,"children":11545},{"style":325},[11546],{"type":23,"value":11547}," df.sort_index()\n",{"type":17,"tag":126,"props":11549,"children":11550},{"class":310,"line":746},[11551,11555],{"type":17,"tag":126,"props":11552,"children":11553},{"style":343},[11554],{"type":23,"value":752},{"type":17,"tag":126,"props":11556,"children":11557},{"style":325},[11558],{"type":23,"value":11559},"(df_sorted_by_index)\n",{"type":17,"tag":134,"props":11561,"children":11563},{"id":11562},"_4-data-grouping-and-aggregation",[11564],{"type":23,"value":11565},"4. Data Grouping and Aggregation",{"type":17,"tag":3082,"props":11567,"children":11568},{},[11569],{"type":17,"tag":51,"props":11570,"children":11571},{},[11572,11574],{"type":23,"value":11573},"Group data by a specified column: ",{"type":17,"tag":146,"props":11575,"children":11577},{"className":11576},[],[11578],{"type":23,"value":11579},"df.groupby(column_name)",{"type":17,"tag":2251,"props":11581,"children":11582},{":editable":2253,":show-in-col":2253,"max-height":2254},[11583],{"type":17,"tag":299,"props":11584,"children":11586},{"code":11585,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a DataFrame\ndata = {'Name': ['Alice', 'Bob', 'Charlie', 'Alice'], 'Age': [25, 30, 28, 25], 'City': ['New York', 'Los Angeles', 'Chicago', 'New York']}\ndf = pd.DataFrame(data)\n\n# Group by the 'City' column\ngrouped = df.groupby('City')\n\n# Calculate the average age for each group\nprint(grouped['Age'].mean())\n",[11587],{"type":17,"tag":146,"props":11588,"children":11589},{"__ignoreMap":7},[11590,11609,11616,11623,11759,11774,11781,11789,11814,11821,11829],{"type":17,"tag":126,"props":11591,"children":11592},{"class":310,"line":311},[11593,11597,11601,11605],{"type":17,"tag":126,"props":11594,"children":11595},{"style":337},[11596],{"type":23,"value":638},{"type":17,"tag":126,"props":11598,"children":11599},{"style":325},[11600],{"type":23,"value":643},{"type":17,"tag":126,"props":11602,"children":11603},{"style":337},[11604],{"type":23,"value":648},{"type":17,"tag":126,"props":11606,"children":11607},{"style":325},[11608],{"type":23,"value":653},{"type":17,"tag":126,"props":11610,"children":11611},{"class":310,"line":321},[11612],{"type":17,"tag":126,"props":11613,"children":11614},{"emptyLinePlaceholder":659},[11615],{"type":23,"value":662},{"type":17,"tag":126,"props":11617,"children":11618},{"class":310,"line":665},[11619],{"type":17,"tag":126,"props":11620,"children":11621},{"style":315},[11622],{"type":23,"value":10047},{"type":17,"tag":126,"props":11624,"children":11625},{"class":310,"line":674},[11626,11630,11634,11638,11642,11646,11650,11654,11658,11662,11666,11670,11674,11678,11682,11686,11690,11694,11698,11702,11706,11710,11714,11718,11723,11727,11731,11735,11739,11743,11747,11751,11755],{"type":17,"tag":126,"props":11627,"children":11628},{"style":325},[11629],{"type":23,"value":680},{"type":17,"tag":126,"props":11631,"children":11632},{"style":337},[11633],{"type":23,"value":340},{"type":17,"tag":126,"props":11635,"children":11636},{"style":325},[11637],{"type":23,"value":1233},{"type":17,"tag":126,"props":11639,"children":11640},{"style":974},[11641],{"type":23,"value":7049},{"type":17,"tag":126,"props":11643,"children":11644},{"style":325},[11645],{"type":23,"value":1998},{"type":17,"tag":126,"props":11647,"children":11648},{"style":974},[11649],{"type":23,"value":7989},{"type":17,"tag":126,"props":11651,"children":11652},{"style":325},[11653],{"type":23,"value":351},{"type":17,"tag":126,"props":11655,"children":11656},{"style":974},[11657],{"type":23,"value":7998},{"type":17,"tag":126,"props":11659,"children":11660},{"style":325},[11661],{"type":23,"value":351},{"type":17,"tag":126,"props":11663,"children":11664},{"style":974},[11665],{"type":23,"value":8424},{"type":17,"tag":126,"props":11667,"children":11668},{"style":325},[11669],{"type":23,"value":351},{"type":17,"tag":126,"props":11671,"children":11672},{"style":974},[11673],{"type":23,"value":7989},{"type":17,"tag":126,"props":11675,"children":11676},{"style":325},[11677],{"type":23,"value":958},{"type":17,"tag":126,"props":11679,"children":11680},{"style":974},[11681],{"type":23,"value":7058},{"type":17,"tag":126,"props":11683,"children":11684},{"style":325},[11685],{"type":23,"value":1998},{"type":17,"tag":126,"props":11687,"children":11688},{"style":343},[11689],{"type":23,"value":2061},{"type":17,"tag":126,"props":11691,"children":11692},{"style":325},[11693],{"type":23,"value":351},{"type":17,"tag":126,"props":11695,"children":11696},{"style":343},[11697],{"type":23,"value":1281},{"type":17,"tag":126,"props":11699,"children":11700},{"style":325},[11701],{"type":23,"value":351},{"type":17,"tag":126,"props":11703,"children":11704},{"style":343},[11705],{"type":23,"value":2043},{"type":17,"tag":126,"props":11707,"children":11708},{"style":325},[11709],{"type":23,"value":351},{"type":17,"tag":126,"props":11711,"children":11712},{"style":343},[11713],{"type":23,"value":2061},{"type":17,"tag":126,"props":11715,"children":11716},{"style":325},[11717],{"type":23,"value":958},{"type":17,"tag":126,"props":11719,"children":11720},{"style":974},[11721],{"type":23,"value":11722},"'City'",{"type":17,"tag":126,"props":11724,"children":11725},{"style":325},[11726],{"type":23,"value":1998},{"type":17,"tag":126,"props":11728,"children":11729},{"style":974},[11730],{"type":23,"value":8097},{"type":17,"tag":126,"props":11732,"children":11733},{"style":325},[11734],{"type":23,"value":351},{"type":17,"tag":126,"props":11736,"children":11737},{"style":974},[11738],{"type":23,"value":8106},{"type":17,"tag":126,"props":11740,"children":11741},{"style":325},[11742],{"type":23,"value":351},{"type":17,"tag":126,"props":11744,"children":11745},{"style":974},[11746],{"type":23,"value":8123},{"type":17,"tag":126,"props":11748,"children":11749},{"style":325},[11750],{"type":23,"value":351},{"type":17,"tag":126,"props":11752,"children":11753},{"style":974},[11754],{"type":23,"value":8097},{"type":17,"tag":126,"props":11756,"children":11757},{"style":325},[11758],{"type":23,"value":8800},{"type":17,"tag":126,"props":11760,"children":11761},{"class":310,"line":729},[11762,11766,11770],{"type":17,"tag":126,"props":11763,"children":11764},{"style":325},[11765],{"type":23,"value":2128},{"type":17,"tag":126,"props":11767,"children":11768},{"style":337},[11769],{"type":23,"value":340},{"type":17,"tag":126,"props":11771,"children":11772},{"style":325},[11773],{"type":23,"value":2137},{"type":17,"tag":126,"props":11775,"children":11776},{"class":310,"line":737},[11777],{"type":17,"tag":126,"props":11778,"children":11779},{"emptyLinePlaceholder":659},[11780],{"type":23,"value":662},{"type":17,"tag":126,"props":11782,"children":11783},{"class":310,"line":746},[11784],{"type":17,"tag":126,"props":11785,"children":11786},{"style":315},[11787],{"type":23,"value":11788},"# Group by the 'City' column\n",{"type":17,"tag":126,"props":11790,"children":11791},{"class":310,"line":1337},[11792,11797,11801,11806,11810],{"type":17,"tag":126,"props":11793,"children":11794},{"style":325},[11795],{"type":23,"value":11796},"grouped ",{"type":17,"tag":126,"props":11798,"children":11799},{"style":337},[11800],{"type":23,"value":340},{"type":17,"tag":126,"props":11802,"children":11803},{"style":325},[11804],{"type":23,"value":11805}," df.groupby(",{"type":17,"tag":126,"props":11807,"children":11808},{"style":974},[11809],{"type":23,"value":11722},{"type":17,"tag":126,"props":11811,"children":11812},{"style":325},[11813],{"type":23,"value":438},{"type":17,"tag":126,"props":11815,"children":11816},{"class":310,"line":11},[11817],{"type":17,"tag":126,"props":11818,"children":11819},{"emptyLinePlaceholder":659},[11820],{"type":23,"value":662},{"type":17,"tag":126,"props":11822,"children":11823},{"class":310,"line":2122},[11824],{"type":17,"tag":126,"props":11825,"children":11826},{"style":315},[11827],{"type":23,"value":11828},"# Calculate the average age for each group\n",{"type":17,"tag":126,"props":11830,"children":11831},{"class":310,"line":2140},[11832,11836,11841,11845],{"type":17,"tag":126,"props":11833,"children":11834},{"style":343},[11835],{"type":23,"value":752},{"type":17,"tag":126,"props":11837,"children":11838},{"style":325},[11839],{"type":23,"value":11840},"(grouped[",{"type":17,"tag":126,"props":11842,"children":11843},{"style":974},[11844],{"type":23,"value":7058},{"type":17,"tag":126,"props":11846,"children":11847},{"style":325},[11848],{"type":23,"value":7625},{"type":17,"tag":3082,"props":11850,"children":11851},{"start":321},[11852],{"type":17,"tag":51,"props":11853,"children":11854},{},[11855,11857],{"type":23,"value":11856},"Apply aggregation functions to grouped data: ",{"type":17,"tag":146,"props":11858,"children":11860},{"className":11859},[],[11861],{"type":23,"value":11862},"df.aggregate({column_name:[function_name]})",{"type":17,"tag":2251,"props":11864,"children":11865},{":editable":2253,":show-in-col":2253,"max-height":2254},[11866],{"type":17,"tag":299,"props":11867,"children":11869},{"code":11868,"language":302,"meta":7,"className":303,"style":7},"# Calculate the mean and max for the grouped data\nprint(grouped.aggregate({'Age': ['mean', 'max']}))\n",[11870],{"type":17,"tag":146,"props":11871,"children":11872},{"__ignoreMap":7},[11873,11881],{"type":17,"tag":126,"props":11874,"children":11875},{"class":310,"line":311},[11876],{"type":17,"tag":126,"props":11877,"children":11878},{"style":315},[11879],{"type":23,"value":11880},"# Calculate the mean and max for the grouped data\n",{"type":17,"tag":126,"props":11882,"children":11883},{"class":310,"line":321},[11884,11888,11893,11897,11901,11906,11910,11915],{"type":17,"tag":126,"props":11885,"children":11886},{"style":343},[11887],{"type":23,"value":752},{"type":17,"tag":126,"props":11889,"children":11890},{"style":325},[11891],{"type":23,"value":11892},"(grouped.aggregate({",{"type":17,"tag":126,"props":11894,"children":11895},{"style":974},[11896],{"type":23,"value":7058},{"type":17,"tag":126,"props":11898,"children":11899},{"style":325},[11900],{"type":23,"value":1998},{"type":17,"tag":126,"props":11902,"children":11903},{"style":974},[11904],{"type":23,"value":11905},"'mean'",{"type":17,"tag":126,"props":11907,"children":11908},{"style":325},[11909],{"type":23,"value":351},{"type":17,"tag":126,"props":11911,"children":11912},{"style":974},[11913],{"type":23,"value":11914},"'max'",{"type":17,"tag":126,"props":11916,"children":11917},{"style":325},[11918],{"type":23,"value":11919},"]}))\n",{"type":17,"tag":3082,"props":11921,"children":11922},{"start":665},[11923],{"type":17,"tag":51,"props":11924,"children":11925},{},[11926],{"type":23,"value":11927},"Create a pivot table",{"type":17,"tag":299,"props":11929,"children":11931},{"code":11930,"language":302,"meta":7,"className":303,"style":7},"DataFrame.pivot_table(values, index, columns, aggfunc)\n",[11932],{"type":17,"tag":146,"props":11933,"children":11934},{"__ignoreMap":7},[11935],{"type":17,"tag":126,"props":11936,"children":11937},{"class":310,"line":311},[11938],{"type":17,"tag":126,"props":11939,"children":11940},{"style":325},[11941],{"type":23,"value":11930},{"type":17,"tag":26,"props":11943,"children":11944},{},[11945],{"type":23,"value":6834},{"type":17,"tag":47,"props":11947,"children":11948},{},[11949,11960,11970,11980],{"type":17,"tag":51,"props":11950,"children":11951},{},[11952,11958],{"type":17,"tag":146,"props":11953,"children":11955},{"className":11954},[],[11956],{"type":23,"value":11957},"values",{"type":23,"value":11959},": The column to aggregate.",{"type":17,"tag":51,"props":11961,"children":11962},{},[11963,11968],{"type":17,"tag":146,"props":11964,"children":11966},{"className":11965},[],[11967],{"type":23,"value":356},{"type":23,"value":11969},": The column(s) to use as row index.",{"type":17,"tag":51,"props":11971,"children":11972},{},[11973,11978],{"type":17,"tag":146,"props":11974,"children":11976},{"className":11975},[],[11977],{"type":23,"value":1736},{"type":23,"value":11979},": The column(s) to use as column index.",{"type":17,"tag":51,"props":11981,"children":11982},{},[11983,11989],{"type":17,"tag":146,"props":11984,"children":11986},{"className":11985},[],[11987],{"type":23,"value":11988},"aggfunc",{"type":23,"value":11990},": The aggregation function.",{"type":17,"tag":2251,"props":11992,"children":11993},{":editable":2253,":show-in-col":2253,"max-height":2254},[11994],{"type":17,"tag":299,"props":11995,"children":11997},{"code":11996,"language":302,"meta":7,"className":303,"style":7},"# Create a pivot table, grouping by city and age, and counting the number of people in each group\npivot_table = df.pivot_table(values='Name', index='City', columns='Age', aggfunc='count')\nprint(pivot_table)\n",[11998],{"type":17,"tag":146,"props":11999,"children":12000},{"__ignoreMap":7},[12001,12009,12091],{"type":17,"tag":126,"props":12002,"children":12003},{"class":310,"line":311},[12004],{"type":17,"tag":126,"props":12005,"children":12006},{"style":315},[12007],{"type":23,"value":12008},"# Create a pivot table, grouping by city and age, and counting the number of people in each group\n",{"type":17,"tag":126,"props":12010,"children":12011},{"class":310,"line":321},[12012,12017,12021,12026,12030,12034,12038,12042,12046,12050,12054,12058,12062,12066,12070,12074,12078,12082,12087],{"type":17,"tag":126,"props":12013,"children":12014},{"style":325},[12015],{"type":23,"value":12016},"pivot_table ",{"type":17,"tag":126,"props":12018,"children":12019},{"style":337},[12020],{"type":23,"value":340},{"type":17,"tag":126,"props":12022,"children":12023},{"style":325},[12024],{"type":23,"value":12025}," df.pivot_table(",{"type":17,"tag":126,"props":12027,"children":12028},{"style":331},[12029],{"type":23,"value":11957},{"type":17,"tag":126,"props":12031,"children":12032},{"style":337},[12033],{"type":23,"value":340},{"type":17,"tag":126,"props":12035,"children":12036},{"style":974},[12037],{"type":23,"value":7049},{"type":17,"tag":126,"props":12039,"children":12040},{"style":325},[12041],{"type":23,"value":351},{"type":17,"tag":126,"props":12043,"children":12044},{"style":331},[12045],{"type":23,"value":356},{"type":17,"tag":126,"props":12047,"children":12048},{"style":337},[12049],{"type":23,"value":340},{"type":17,"tag":126,"props":12051,"children":12052},{"style":974},[12053],{"type":23,"value":11722},{"type":17,"tag":126,"props":12055,"children":12056},{"style":325},[12057],{"type":23,"value":351},{"type":17,"tag":126,"props":12059,"children":12060},{"style":331},[12061],{"type":23,"value":1736},{"type":17,"tag":126,"props":12063,"children":12064},{"style":337},[12065],{"type":23,"value":340},{"type":17,"tag":126,"props":12067,"children":12068},{"style":974},[12069],{"type":23,"value":7058},{"type":17,"tag":126,"props":12071,"children":12072},{"style":325},[12073],{"type":23,"value":351},{"type":17,"tag":126,"props":12075,"children":12076},{"style":331},[12077],{"type":23,"value":11988},{"type":17,"tag":126,"props":12079,"children":12080},{"style":337},[12081],{"type":23,"value":340},{"type":17,"tag":126,"props":12083,"children":12084},{"style":974},[12085],{"type":23,"value":12086},"'count'",{"type":17,"tag":126,"props":12088,"children":12089},{"style":325},[12090],{"type":23,"value":438},{"type":17,"tag":126,"props":12092,"children":12093},{"class":310,"line":665},[12094,12098],{"type":17,"tag":126,"props":12095,"children":12096},{"style":343},[12097],{"type":23,"value":752},{"type":17,"tag":126,"props":12099,"children":12100},{"style":325},[12101],{"type":23,"value":12102},"(pivot_table)\n",{"type":17,"tag":134,"props":12104,"children":12106},{"id":12105},"_5-data-merging",[12107],{"type":23,"value":12108},"5. Data Merging",{"type":17,"tag":3082,"props":12110,"children":12111},{},[12112],{"type":17,"tag":51,"props":12113,"children":12114},{},[12115,12117],{"type":23,"value":12116},"Concatenate multiple DataFrames along rows or columns: ",{"type":17,"tag":146,"props":12118,"children":12120},{"className":12119},[],[12121],{"type":23,"value":12122},"pd.concat([df1, df2])",{"type":17,"tag":299,"props":12124,"children":12126},{"code":12125,"language":302,"meta":7,"className":303,"style":7},"# Create two DataFrames\ndf1 = pd.DataFrame({'A': [1, 2], 'B': [3, 4]})\ndf2 = pd.DataFrame({'A': [5, 6], 'B': [7, 8]})\n\n# Concatenate along rows\ndf_concat_rows = pd.concat([df1, df2])\nprint(df_concat_rows)\n\n# Concatenate along columns\ndf_concat_cols = pd.concat([df1, df2], axis=1)\nprint(df_concat_cols)\n",[12127],{"type":17,"tag":146,"props":12128,"children":12129},{"__ignoreMap":7},[12130,12138,12204,12270,12277,12285,12302,12314,12321,12329,12362],{"type":17,"tag":126,"props":12131,"children":12132},{"class":310,"line":311},[12133],{"type":17,"tag":126,"props":12134,"children":12135},{"style":315},[12136],{"type":23,"value":12137},"# Create two DataFrames\n",{"type":17,"tag":126,"props":12139,"children":12140},{"class":310,"line":321},[12141,12146,12150,12155,12159,12163,12167,12171,12175,12179,12183,12187,12191,12195,12199],{"type":17,"tag":126,"props":12142,"children":12143},{"style":325},[12144],{"type":23,"value":12145},"df1 ",{"type":17,"tag":126,"props":12147,"children":12148},{"style":337},[12149],{"type":23,"value":340},{"type":17,"tag":126,"props":12151,"children":12152},{"style":325},[12153],{"type":23,"value":12154}," pd.DataFrame({",{"type":17,"tag":126,"props":12156,"children":12157},{"style":974},[12158],{"type":23,"value":11396},{"type":17,"tag":126,"props":12160,"children":12161},{"style":325},[12162],{"type":23,"value":1998},{"type":17,"tag":126,"props":12164,"children":12165},{"style":343},[12166],{"type":23,"value":847},{"type":17,"tag":126,"props":12168,"children":12169},{"style":325},[12170],{"type":23,"value":351},{"type":17,"tag":126,"props":12172,"children":12173},{"style":343},[12174],{"type":23,"value":7177},{"type":17,"tag":126,"props":12176,"children":12177},{"style":325},[12178],{"type":23,"value":958},{"type":17,"tag":126,"props":12180,"children":12181},{"style":974},[12182],{"type":23,"value":11430},{"type":17,"tag":126,"props":12184,"children":12185},{"style":325},[12186],{"type":23,"value":1998},{"type":17,"tag":126,"props":12188,"children":12189},{"style":343},[12190],{"type":23,"value":11421},{"type":17,"tag":126,"props":12192,"children":12193},{"style":325},[12194],{"type":23,"value":351},{"type":17,"tag":126,"props":12196,"children":12197},{"style":343},[12198],{"type":23,"value":11439},{"type":17,"tag":126,"props":12200,"children":12201},{"style":325},[12202],{"type":23,"value":12203},"]})\n",{"type":17,"tag":126,"props":12205,"children":12206},{"class":310,"line":665},[12207,12212,12216,12220,12224,12228,12232,12236,12240,12244,12248,12252,12257,12261,12266],{"type":17,"tag":126,"props":12208,"children":12209},{"style":325},[12210],{"type":23,"value":12211},"df2 ",{"type":17,"tag":126,"props":12213,"children":12214},{"style":337},[12215],{"type":23,"value":340},{"type":17,"tag":126,"props":12217,"children":12218},{"style":325},[12219],{"type":23,"value":12154},{"type":17,"tag":126,"props":12221,"children":12222},{"style":974},[12223],{"type":23,"value":11396},{"type":17,"tag":126,"props":12225,"children":12226},{"style":325},[12227],{"type":23,"value":1998},{"type":17,"tag":126,"props":12229,"children":12230},{"style":343},[12231],{"type":23,"value":11448},{"type":17,"tag":126,"props":12233,"children":12234},{"style":325},[12235],{"type":23,"value":351},{"type":17,"tag":126,"props":12237,"children":12238},{"style":343},[12239],{"type":23,"value":11457},{"type":17,"tag":126,"props":12241,"children":12242},{"style":325},[12243],{"type":23,"value":958},{"type":17,"tag":126,"props":12245,"children":12246},{"style":974},[12247],{"type":23,"value":11430},{"type":17,"tag":126,"props":12249,"children":12250},{"style":325},[12251],{"type":23,"value":1998},{"type":17,"tag":126,"props":12253,"children":12254},{"style":343},[12255],{"type":23,"value":12256},"7",{"type":17,"tag":126,"props":12258,"children":12259},{"style":325},[12260],{"type":23,"value":351},{"type":17,"tag":126,"props":12262,"children":12263},{"style":343},[12264],{"type":23,"value":12265},"8",{"type":17,"tag":126,"props":12267,"children":12268},{"style":325},[12269],{"type":23,"value":12203},{"type":17,"tag":126,"props":12271,"children":12272},{"class":310,"line":674},[12273],{"type":17,"tag":126,"props":12274,"children":12275},{"emptyLinePlaceholder":659},[12276],{"type":23,"value":662},{"type":17,"tag":126,"props":12278,"children":12279},{"class":310,"line":729},[12280],{"type":17,"tag":126,"props":12281,"children":12282},{"style":315},[12283],{"type":23,"value":12284},"# Concatenate along rows\n",{"type":17,"tag":126,"props":12286,"children":12287},{"class":310,"line":737},[12288,12293,12297],{"type":17,"tag":126,"props":12289,"children":12290},{"style":325},[12291],{"type":23,"value":12292},"df_concat_rows ",{"type":17,"tag":126,"props":12294,"children":12295},{"style":337},[12296],{"type":23,"value":340},{"type":17,"tag":126,"props":12298,"children":12299},{"style":325},[12300],{"type":23,"value":12301}," pd.concat([df1, df2])\n",{"type":17,"tag":126,"props":12303,"children":12304},{"class":310,"line":746},[12305,12309],{"type":17,"tag":126,"props":12306,"children":12307},{"style":343},[12308],{"type":23,"value":752},{"type":17,"tag":126,"props":12310,"children":12311},{"style":325},[12312],{"type":23,"value":12313},"(df_concat_rows)\n",{"type":17,"tag":126,"props":12315,"children":12316},{"class":310,"line":1337},[12317],{"type":17,"tag":126,"props":12318,"children":12319},{"emptyLinePlaceholder":659},[12320],{"type":23,"value":662},{"type":17,"tag":126,"props":12322,"children":12323},{"class":310,"line":11},[12324],{"type":17,"tag":126,"props":12325,"children":12326},{"style":315},[12327],{"type":23,"value":12328},"# Concatenate along columns\n",{"type":17,"tag":126,"props":12330,"children":12331},{"class":310,"line":2122},[12332,12337,12341,12346,12350,12354,12358],{"type":17,"tag":126,"props":12333,"children":12334},{"style":325},[12335],{"type":23,"value":12336},"df_concat_cols ",{"type":17,"tag":126,"props":12338,"children":12339},{"style":337},[12340],{"type":23,"value":340},{"type":17,"tag":126,"props":12342,"children":12343},{"style":325},[12344],{"type":23,"value":12345}," pd.concat([df1, df2], ",{"type":17,"tag":126,"props":12347,"children":12348},{"style":331},[12349],{"type":23,"value":3479},{"type":17,"tag":126,"props":12351,"children":12352},{"style":337},[12353],{"type":23,"value":340},{"type":17,"tag":126,"props":12355,"children":12356},{"style":343},[12357],{"type":23,"value":847},{"type":17,"tag":126,"props":12359,"children":12360},{"style":325},[12361],{"type":23,"value":438},{"type":17,"tag":126,"props":12363,"children":12364},{"class":310,"line":2140},[12365,12369],{"type":17,"tag":126,"props":12366,"children":12367},{"style":343},[12368],{"type":23,"value":752},{"type":17,"tag":126,"props":12370,"children":12371},{"style":325},[12372],{"type":23,"value":12373},"(df_concat_cols)\n",{"type":17,"tag":26,"props":12375,"children":12376},{},[12377],{"type":23,"value":762},{"type":17,"tag":299,"props":12379,"children":12381},{"code":12380,"language":766,"meta":7,"className":767,"style":7},"# Concatenate along rows:\n   A  B\n0  1  3\n1  2  4\n0  5  7\n1  6  8\n# Concatenate along columns:\n   A  B  A  B\n0  1  3  5  7\n1  2  4  6  8\n",[12382],{"type":17,"tag":146,"props":12383,"children":12384},{"__ignoreMap":7},[12385,12393,12401,12409,12417,12425,12433,12441,12449,12457],{"type":17,"tag":126,"props":12386,"children":12387},{"class":310,"line":311},[12388],{"type":17,"tag":126,"props":12389,"children":12390},{},[12391],{"type":23,"value":12392},"# Concatenate along rows:\n",{"type":17,"tag":126,"props":12394,"children":12395},{"class":310,"line":321},[12396],{"type":17,"tag":126,"props":12397,"children":12398},{},[12399],{"type":23,"value":12400},"   A  B\n",{"type":17,"tag":126,"props":12402,"children":12403},{"class":310,"line":665},[12404],{"type":17,"tag":126,"props":12405,"children":12406},{},[12407],{"type":23,"value":12408},"0  1  3\n",{"type":17,"tag":126,"props":12410,"children":12411},{"class":310,"line":674},[12412],{"type":17,"tag":126,"props":12413,"children":12414},{},[12415],{"type":23,"value":12416},"1  2  4\n",{"type":17,"tag":126,"props":12418,"children":12419},{"class":310,"line":729},[12420],{"type":17,"tag":126,"props":12421,"children":12422},{},[12423],{"type":23,"value":12424},"0  5  7\n",{"type":17,"tag":126,"props":12426,"children":12427},{"class":310,"line":737},[12428],{"type":17,"tag":126,"props":12429,"children":12430},{},[12431],{"type":23,"value":12432},"1  6  8\n",{"type":17,"tag":126,"props":12434,"children":12435},{"class":310,"line":746},[12436],{"type":17,"tag":126,"props":12437,"children":12438},{},[12439],{"type":23,"value":12440},"# Concatenate along columns:\n",{"type":17,"tag":126,"props":12442,"children":12443},{"class":310,"line":1337},[12444],{"type":17,"tag":126,"props":12445,"children":12446},{},[12447],{"type":23,"value":12448},"   A  B  A  B\n",{"type":17,"tag":126,"props":12450,"children":12451},{"class":310,"line":11},[12452],{"type":17,"tag":126,"props":12453,"children":12454},{},[12455],{"type":23,"value":12456},"0  1  3  5  7\n",{"type":17,"tag":126,"props":12458,"children":12459},{"class":310,"line":2122},[12460],{"type":17,"tag":126,"props":12461,"children":12462},{},[12463],{"type":23,"value":12464},"1  2  4  6  8\n",{"type":17,"tag":3082,"props":12466,"children":12467},{"start":321},[12468],{"type":17,"tag":51,"props":12469,"children":12470},{},[12471,12473],{"type":23,"value":12472},"Merge two DataFrames based on a specified column, similar to SQL JOIN: ",{"type":17,"tag":146,"props":12474,"children":12476},{"className":12475},[],[12477],{"type":23,"value":12478},"pd.merge(df1, df2, on=column_name)",{"type":17,"tag":299,"props":12480,"children":12482},{"code":12481,"language":302,"meta":7,"className":303,"style":7},"# Create two DataFrames with a common column 'Name'\ndf1 = pd.DataFrame({'Name': ['Alice', 'Bob'], 'Age': [25, 30]})\ndf2 = pd.DataFrame({'Name': ['Alice', 'Charlie'], 'City': ['New York', 'Chicago']})\n\n# Merge on the 'Name' column\ndf_merged = pd.merge(df1, df2, on='Name')\nprint(df_merged)\n",[12483],{"type":17,"tag":146,"props":12484,"children":12485},{"__ignoreMap":7},[12486,12494,12557,12620,12627,12635,12669],{"type":17,"tag":126,"props":12487,"children":12488},{"class":310,"line":311},[12489],{"type":17,"tag":126,"props":12490,"children":12491},{"style":315},[12492],{"type":23,"value":12493},"# Create two DataFrames with a common column 'Name'\n",{"type":17,"tag":126,"props":12495,"children":12496},{"class":310,"line":321},[12497,12501,12505,12509,12513,12517,12521,12525,12529,12533,12537,12541,12545,12549,12553],{"type":17,"tag":126,"props":12498,"children":12499},{"style":325},[12500],{"type":23,"value":12145},{"type":17,"tag":126,"props":12502,"children":12503},{"style":337},[12504],{"type":23,"value":340},{"type":17,"tag":126,"props":12506,"children":12507},{"style":325},[12508],{"type":23,"value":12154},{"type":17,"tag":126,"props":12510,"children":12511},{"style":974},[12512],{"type":23,"value":7049},{"type":17,"tag":126,"props":12514,"children":12515},{"style":325},[12516],{"type":23,"value":1998},{"type":17,"tag":126,"props":12518,"children":12519},{"style":974},[12520],{"type":23,"value":7989},{"type":17,"tag":126,"props":12522,"children":12523},{"style":325},[12524],{"type":23,"value":351},{"type":17,"tag":126,"props":12526,"children":12527},{"style":974},[12528],{"type":23,"value":7998},{"type":17,"tag":126,"props":12530,"children":12531},{"style":325},[12532],{"type":23,"value":958},{"type":17,"tag":126,"props":12534,"children":12535},{"style":974},[12536],{"type":23,"value":7058},{"type":17,"tag":126,"props":12538,"children":12539},{"style":325},[12540],{"type":23,"value":1998},{"type":17,"tag":126,"props":12542,"children":12543},{"style":343},[12544],{"type":23,"value":2061},{"type":17,"tag":126,"props":12546,"children":12547},{"style":325},[12548],{"type":23,"value":351},{"type":17,"tag":126,"props":12550,"children":12551},{"style":343},[12552],{"type":23,"value":1281},{"type":17,"tag":126,"props":12554,"children":12555},{"style":325},[12556],{"type":23,"value":12203},{"type":17,"tag":126,"props":12558,"children":12559},{"class":310,"line":665},[12560,12564,12568,12572,12576,12580,12584,12588,12592,12596,12600,12604,12608,12612,12616],{"type":17,"tag":126,"props":12561,"children":12562},{"style":325},[12563],{"type":23,"value":12211},{"type":17,"tag":126,"props":12565,"children":12566},{"style":337},[12567],{"type":23,"value":340},{"type":17,"tag":126,"props":12569,"children":12570},{"style":325},[12571],{"type":23,"value":12154},{"type":17,"tag":126,"props":12573,"children":12574},{"style":974},[12575],{"type":23,"value":7049},{"type":17,"tag":126,"props":12577,"children":12578},{"style":325},[12579],{"type":23,"value":1998},{"type":17,"tag":126,"props":12581,"children":12582},{"style":974},[12583],{"type":23,"value":7989},{"type":17,"tag":126,"props":12585,"children":12586},{"style":325},[12587],{"type":23,"value":351},{"type":17,"tag":126,"props":12589,"children":12590},{"style":974},[12591],{"type":23,"value":8424},{"type":17,"tag":126,"props":12593,"children":12594},{"style":325},[12595],{"type":23,"value":958},{"type":17,"tag":126,"props":12597,"children":12598},{"style":974},[12599],{"type":23,"value":11722},{"type":17,"tag":126,"props":12601,"children":12602},{"style":325},[12603],{"type":23,"value":1998},{"type":17,"tag":126,"props":12605,"children":12606},{"style":974},[12607],{"type":23,"value":8097},{"type":17,"tag":126,"props":12609,"children":12610},{"style":325},[12611],{"type":23,"value":351},{"type":17,"tag":126,"props":12613,"children":12614},{"style":974},[12615],{"type":23,"value":8123},{"type":17,"tag":126,"props":12617,"children":12618},{"style":325},[12619],{"type":23,"value":12203},{"type":17,"tag":126,"props":12621,"children":12622},{"class":310,"line":674},[12623],{"type":17,"tag":126,"props":12624,"children":12625},{"emptyLinePlaceholder":659},[12626],{"type":23,"value":662},{"type":17,"tag":126,"props":12628,"children":12629},{"class":310,"line":729},[12630],{"type":17,"tag":126,"props":12631,"children":12632},{"style":315},[12633],{"type":23,"value":12634},"# Merge on the 'Name' column\n",{"type":17,"tag":126,"props":12636,"children":12637},{"class":310,"line":737},[12638,12643,12647,12652,12657,12661,12665],{"type":17,"tag":126,"props":12639,"children":12640},{"style":325},[12641],{"type":23,"value":12642},"df_merged ",{"type":17,"tag":126,"props":12644,"children":12645},{"style":337},[12646],{"type":23,"value":340},{"type":17,"tag":126,"props":12648,"children":12649},{"style":325},[12650],{"type":23,"value":12651}," pd.merge(df1, df2, ",{"type":17,"tag":126,"props":12653,"children":12654},{"style":331},[12655],{"type":23,"value":12656},"on",{"type":17,"tag":126,"props":12658,"children":12659},{"style":337},[12660],{"type":23,"value":340},{"type":17,"tag":126,"props":12662,"children":12663},{"style":974},[12664],{"type":23,"value":7049},{"type":17,"tag":126,"props":12666,"children":12667},{"style":325},[12668],{"type":23,"value":438},{"type":17,"tag":126,"props":12670,"children":12671},{"class":310,"line":746},[12672,12676],{"type":17,"tag":126,"props":12673,"children":12674},{"style":343},[12675],{"type":23,"value":752},{"type":17,"tag":126,"props":12677,"children":12678},{"style":325},[12679],{"type":23,"value":12680},"(df_merged)\n",{"type":17,"tag":26,"props":12682,"children":12683},{},[12684],{"type":23,"value":762},{"type":17,"tag":299,"props":12686,"children":12688},{"code":12687,"language":766,"meta":7,"className":767,"style":7},"Name  Age      City\n0  Alice   25  New York\n",[12689],{"type":17,"tag":146,"props":12690,"children":12691},{"__ignoreMap":7},[12692,12700],{"type":17,"tag":126,"props":12693,"children":12694},{"class":310,"line":311},[12695],{"type":17,"tag":126,"props":12696,"children":12697},{},[12698],{"type":23,"value":12699},"Name  Age      City\n",{"type":17,"tag":126,"props":12701,"children":12702},{"class":310,"line":321},[12703],{"type":17,"tag":126,"props":12704,"children":12705},{},[12706],{"type":23,"value":12707},"0  Alice   25  New York\n",{"type":17,"tag":134,"props":12709,"children":12711},{"id":12710},"_6-data-selection-and-filtering",[12712],{"type":23,"value":12713},"6. Data Selection and Filtering",{"type":17,"tag":3082,"props":12715,"children":12716},{},[12717],{"type":17,"tag":51,"props":12718,"children":12719},{},[12720,12722],{"type":23,"value":12721},"Conditional filtering: ",{"type":17,"tag":146,"props":12723,"children":12725},{"className":12724},[],[12726],{"type":23,"value":12727},"df[df['column_name'] > value]",{"type":17,"tag":299,"props":12729,"children":12731},{"code":12730,"language":302,"meta":7,"className":303,"style":7},"import pandas as pd\n\n# Create a sample DataFrame\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David'],\n    'Age': [25, 30, 35, 40],\n    'City': ['New York', 'Los Angeles', 'New York', 'Chicago']\n}\ndf = pd.DataFrame(data)\n\n# Conditional filtering: select people older than 25\ndf_filtered = df[df['Age'] > 25]\nprint(df_filtered)\n",[12732],{"type":17,"tag":146,"props":12733,"children":12734},{"__ignoreMap":7},[12735,12754,12761,12768,12783,12826,12869,12912,12919,12934,12941,12949,12986],{"type":17,"tag":126,"props":12736,"children":12737},{"class":310,"line":311},[12738,12742,12746,12750],{"type":17,"tag":126,"props":12739,"children":12740},{"style":337},[12741],{"type":23,"value":638},{"type":17,"tag":126,"props":12743,"children":12744},{"style":325},[12745],{"type":23,"value":643},{"type":17,"tag":126,"props":12747,"children":12748},{"style":337},[12749],{"type":23,"value":648},{"type":17,"tag":126,"props":12751,"children":12752},{"style":325},[12753],{"type":23,"value":653},{"type":17,"tag":126,"props":12755,"children":12756},{"class":310,"line":321},[12757],{"type":17,"tag":126,"props":12758,"children":12759},{"emptyLinePlaceholder":659},[12760],{"type":23,"value":662},{"type":17,"tag":126,"props":12762,"children":12763},{"class":310,"line":665},[12764],{"type":17,"tag":126,"props":12765,"children":12766},{"style":315},[12767],{"type":23,"value":7957},{"type":17,"tag":126,"props":12769,"children":12770},{"class":310,"line":674},[12771,12775,12779],{"type":17,"tag":126,"props":12772,"children":12773},{"style":325},[12774],{"type":23,"value":680},{"type":17,"tag":126,"props":12776,"children":12777},{"style":337},[12778],{"type":23,"value":340},{"type":17,"tag":126,"props":12780,"children":12781},{"style":325},[12782],{"type":23,"value":1985},{"type":17,"tag":126,"props":12784,"children":12785},{"class":310,"line":729},[12786,12790,12794,12798,12802,12806,12810,12814,12818,12822],{"type":17,"tag":126,"props":12787,"children":12788},{"style":974},[12789],{"type":23,"value":7980},{"type":17,"tag":126,"props":12791,"children":12792},{"style":325},[12793],{"type":23,"value":1998},{"type":17,"tag":126,"props":12795,"children":12796},{"style":974},[12797],{"type":23,"value":7989},{"type":17,"tag":126,"props":12799,"children":12800},{"style":325},[12801],{"type":23,"value":351},{"type":17,"tag":126,"props":12803,"children":12804},{"style":974},[12805],{"type":23,"value":7998},{"type":17,"tag":126,"props":12807,"children":12808},{"style":325},[12809],{"type":23,"value":351},{"type":17,"tag":126,"props":12811,"children":12812},{"style":974},[12813],{"type":23,"value":8424},{"type":17,"tag":126,"props":12815,"children":12816},{"style":325},[12817],{"type":23,"value":351},{"type":17,"tag":126,"props":12819,"children":12820},{"style":974},[12821],{"type":23,"value":8015},{"type":17,"tag":126,"props":12823,"children":12824},{"style":325},[12825],{"type":23,"value":2026},{"type":17,"tag":126,"props":12827,"children":12828},{"class":310,"line":737},[12829,12833,12837,12841,12845,12849,12853,12857,12861,12865],{"type":17,"tag":126,"props":12830,"children":12831},{"style":974},[12832],{"type":23,"value":8035},{"type":17,"tag":126,"props":12834,"children":12835},{"style":325},[12836],{"type":23,"value":1998},{"type":17,"tag":126,"props":12838,"children":12839},{"style":343},[12840],{"type":23,"value":2061},{"type":17,"tag":126,"props":12842,"children":12843},{"style":325},[12844],{"type":23,"value":351},{"type":17,"tag":126,"props":12846,"children":12847},{"style":343},[12848],{"type":23,"value":1281},{"type":17,"tag":126,"props":12850,"children":12851},{"style":325},[12852],{"type":23,"value":351},{"type":17,"tag":126,"props":12854,"children":12855},{"style":343},[12856],{"type":23,"value":8068},{"type":17,"tag":126,"props":12858,"children":12859},{"style":325},[12860],{"type":23,"value":351},{"type":17,"tag":126,"props":12862,"children":12863},{"style":343},[12864],{"type":23,"value":1298},{"type":17,"tag":126,"props":12866,"children":12867},{"style":325},[12868],{"type":23,"value":2026},{"type":17,"tag":126,"props":12870,"children":12871},{"class":310,"line":746},[12872,12876,12880,12884,12888,12892,12896,12900,12904,12908],{"type":17,"tag":126,"props":12873,"children":12874},{"style":974},[12875],{"type":23,"value":8088},{"type":17,"tag":126,"props":12877,"children":12878},{"style":325},[12879],{"type":23,"value":1998},{"type":17,"tag":126,"props":12881,"children":12882},{"style":974},[12883],{"type":23,"value":8097},{"type":17,"tag":126,"props":12885,"children":12886},{"style":325},[12887],{"type":23,"value":351},{"type":17,"tag":126,"props":12889,"children":12890},{"style":974},[12891],{"type":23,"value":8106},{"type":17,"tag":126,"props":12893,"children":12894},{"style":325},[12895],{"type":23,"value":351},{"type":17,"tag":126,"props":12897,"children":12898},{"style":974},[12899],{"type":23,"value":8097},{"type":17,"tag":126,"props":12901,"children":12902},{"style":325},[12903],{"type":23,"value":351},{"type":17,"tag":126,"props":12905,"children":12906},{"style":974},[12907],{"type":23,"value":8123},{"type":17,"tag":126,"props":12909,"children":12910},{"style":325},[12911],{"type":23,"value":2105},{"type":17,"tag":126,"props":12913,"children":12914},{"class":310,"line":1337},[12915],{"type":17,"tag":126,"props":12916,"children":12917},{"style":325},[12918],{"type":23,"value":1303},{"type":17,"tag":126,"props":12920,"children":12921},{"class":310,"line":11},[12922,12926,12930],{"type":17,"tag":126,"props":12923,"children":12924},{"style":325},[12925],{"type":23,"value":2128},{"type":17,"tag":126,"props":12927,"children":12928},{"style":337},[12929],{"type":23,"value":340},{"type":17,"tag":126,"props":12931,"children":12932},{"style":325},[12933],{"type":23,"value":2137},{"type":17,"tag":126,"props":12935,"children":12936},{"class":310,"line":2122},[12937],{"type":17,"tag":126,"props":12938,"children":12939},{"emptyLinePlaceholder":659},[12940],{"type":23,"value":662},{"type":17,"tag":126,"props":12942,"children":12943},{"class":310,"line":2140},[12944],{"type":17,"tag":126,"props":12945,"children":12946},{"style":315},[12947],{"type":23,"value":12948},"# Conditional filtering: select people older than 25\n",{"type":17,"tag":126,"props":12950,"children":12951},{"class":310,"line":2148},[12952,12957,12961,12965,12969,12973,12977,12982],{"type":17,"tag":126,"props":12953,"children":12954},{"style":325},[12955],{"type":23,"value":12956},"df_filtered ",{"type":17,"tag":126,"props":12958,"children":12959},{"style":337},[12960],{"type":23,"value":340},{"type":17,"tag":126,"props":12962,"children":12963},{"style":325},[12964],{"type":23,"value":3561},{"type":17,"tag":126,"props":12966,"children":12967},{"style":974},[12968],{"type":23,"value":7058},{"type":17,"tag":126,"props":12970,"children":12971},{"style":325},[12972],{"type":23,"value":3354},{"type":17,"tag":126,"props":12974,"children":12975},{"style":337},[12976],{"type":23,"value":3574},{"type":17,"tag":126,"props":12978,"children":12979},{"style":343},[12980],{"type":23,"value":12981}," 25",{"type":17,"tag":126,"props":12983,"children":12984},{"style":325},[12985],{"type":23,"value":2105},{"type":17,"tag":126,"props":12987,"children":12988},{"class":310,"line":2157},[12989,12993],{"type":17,"tag":126,"props":12990,"children":12991},{"style":343},[12992],{"type":23,"value":752},{"type":17,"tag":126,"props":12994,"children":12995},{"style":325},[12996],{"type":23,"value":12997},"(df_filtered)\n",{"type":17,"tag":26,"props":12999,"children":13000},{},[13001],{"type":23,"value":762},{"type":17,"tag":299,"props":13003,"children":13005},{"code":13004,"language":766,"meta":7,"className":767,"style":7},"Name  Age         City\n1      Bob   30  Los Angeles\n2  Charlie   35     New York\n3    David   40      Chicago\n",[13006],{"type":17,"tag":146,"props":13007,"children":13008},{"__ignoreMap":7},[13009,13016,13024,13032],{"type":17,"tag":126,"props":13010,"children":13011},{"class":310,"line":311},[13012],{"type":17,"tag":126,"props":13013,"children":13014},{},[13015],{"type":23,"value":9336},{"type":17,"tag":126,"props":13017,"children":13018},{"class":310,"line":321},[13019],{"type":17,"tag":126,"props":13020,"children":13021},{},[13022],{"type":23,"value":13023},"1      Bob   30  Los Angeles\n",{"type":17,"tag":126,"props":13025,"children":13026},{"class":310,"line":665},[13027],{"type":17,"tag":126,"props":13028,"children":13029},{},[13030],{"type":23,"value":13031},"2  Charlie   35     New York\n",{"type":17,"tag":126,"props":13033,"children":13034},{"class":310,"line":674},[13035],{"type":17,"tag":126,"props":13036,"children":13037},{},[13038],{"type":23,"value":13039},"3    David   40      Chicago\n",{"type":17,"tag":3082,"props":13041,"children":13042},{"start":321},[13043],{"type":17,"tag":51,"props":13044,"children":13045},{},[13046,13048],{"type":23,"value":13047},"Select rows that meet conditions using a string expression: ",{"type":17,"tag":146,"props":13049,"children":13051},{"className":13050},[],[13052],{"type":23,"value":13053},"df.query('column_name > value')",{"type":17,"tag":2251,"props":13055,"children":13056},{":editable":2253,":show-in-col":2253,"max-height":2254},[13057],{"type":17,"tag":299,"props":13058,"children":13060},{"code":13059,"language":302,"meta":7,"className":303,"style":7},"# Select rows that meet conditions using a string expression: select people older than 25 and from New York\ndf_filtered_query = df.query('Age > 25 and City == \"New York\"')\nprint(df_filtered_query)\n",[13061],{"type":17,"tag":146,"props":13062,"children":13063},{"__ignoreMap":7},[13064,13072,13098],{"type":17,"tag":126,"props":13065,"children":13066},{"class":310,"line":311},[13067],{"type":17,"tag":126,"props":13068,"children":13069},{"style":315},[13070],{"type":23,"value":13071},"# Select rows that meet conditions using a string expression: select people older than 25 and from New York\n",{"type":17,"tag":126,"props":13073,"children":13074},{"class":310,"line":321},[13075,13080,13084,13089,13094],{"type":17,"tag":126,"props":13076,"children":13077},{"style":325},[13078],{"type":23,"value":13079},"df_filtered_query ",{"type":17,"tag":126,"props":13081,"children":13082},{"style":337},[13083],{"type":23,"value":340},{"type":17,"tag":126,"props":13085,"children":13086},{"style":325},[13087],{"type":23,"value":13088}," df.query(",{"type":17,"tag":126,"props":13090,"children":13091},{"style":974},[13092],{"type":23,"value":13093},"'Age > 25 and City == \"New York\"'",{"type":17,"tag":126,"props":13095,"children":13096},{"style":325},[13097],{"type":23,"value":438},{"type":17,"tag":126,"props":13099,"children":13100},{"class":310,"line":665},[13101,13105],{"type":17,"tag":126,"props":13102,"children":13103},{"style":343},[13104],{"type":23,"value":752},{"type":17,"tag":126,"props":13106,"children":13107},{"style":325},[13108],{"type":23,"value":13109},"(df_filtered_query)\n",{"type":17,"tag":134,"props":13111,"children":13113},{"id":13112},"_7-case-study",[13114],{"type":23,"value":13115},"7. Case Study",{"type":17,"tag":26,"props":13117,"children":13118},{},[13119],{"type":23,"value":13120},"Use the following case exercises to become familiar with the important functions mentioned in this chapter:",{"type":17,"tag":26,"props":13122,"children":13123},{},[13124],{"type":17,"tag":4062,"props":13125,"children":13128},{"href":13126,"rel":13127},"https://www.kaggle.com/code/zhaowenxi/pandas-for-python-3",[4066],[13129],{"type":23,"value":13126},{"type":17,"tag":26,"props":13131,"children":13132},{},[13133],{"type":23,"value":13134},"As a data analyst, you have an employee dataset containing information about employees' names, ages, cities, and departments. Your task is to perform a series of data processing operations using the Pandas library. Here is the initial state of the dataset:",{"type":17,"tag":9403,"props":13136,"children":13137},{},[13138,13161],{"type":17,"tag":9407,"props":13139,"children":13140},{},[13141],{"type":17,"tag":9411,"props":13142,"children":13143},{},[13144,13148,13152,13156],{"type":17,"tag":9415,"props":13145,"children":13146},{},[13147],{"type":23,"value":2221},{"type":17,"tag":9415,"props":13149,"children":13150},{},[13151],{"type":23,"value":2228},{"type":17,"tag":9415,"props":13153,"children":13154},{},[13155],{"type":23,"value":9432},{"type":17,"tag":9415,"props":13157,"children":13158},{},[13159],{"type":23,"value":13160},"Department",{"type":17,"tag":9434,"props":13162,"children":13163},{},[13164,13184,13204,13225,13244],{"type":17,"tag":9411,"props":13165,"children":13166},{},[13167,13171,13175,13179],{"type":17,"tag":9441,"props":13168,"children":13169},{},[13170],{"type":23,"value":9445},{"type":17,"tag":9441,"props":13172,"children":13173},{},[13174],{"type":23,"value":2061},{"type":17,"tag":9441,"props":13176,"children":13177},{},[13178],{"type":23,"value":9458},{"type":17,"tag":9441,"props":13180,"children":13181},{},[13182],{"type":23,"value":13183},"HR",{"type":17,"tag":9411,"props":13185,"children":13186},{},[13187,13191,13195,13199],{"type":17,"tag":9441,"props":13188,"children":13189},{},[13190],{"type":23,"value":9466},{"type":17,"tag":9441,"props":13192,"children":13193},{},[13194],{"type":23,"value":1281},{"type":17,"tag":9441,"props":13196,"children":13197},{},[13198],{"type":23,"value":9479},{"type":17,"tag":9441,"props":13200,"children":13201},{},[13202],{"type":23,"value":13203},"Sales",{"type":17,"tag":9411,"props":13205,"children":13206},{},[13207,13212,13216,13220],{"type":17,"tag":9441,"props":13208,"children":13209},{},[13210],{"type":23,"value":13211},"Charlie",{"type":17,"tag":9441,"props":13213,"children":13214},{},[13215],{"type":23,"value":2043},{"type":17,"tag":9441,"props":13217,"children":13218},{},[13219],{"type":23,"value":9500},{"type":17,"tag":9441,"props":13221,"children":13222},{},[13223],{"type":23,"value":13224},"IT",{"type":17,"tag":9411,"props":13226,"children":13227},{},[13228,13232,13236,13240],{"type":17,"tag":9441,"props":13229,"children":13230},{},[13231],{"type":23,"value":9527},{"type":17,"tag":9441,"props":13233,"children":13234},{},[13235],{"type":23,"value":1298},{"type":17,"tag":9441,"props":13237,"children":13238},{},[13239],{"type":23,"value":9500},{"type":17,"tag":9441,"props":13241,"children":13242},{},[13243],{"type":23,"value":13224},{"type":17,"tag":9411,"props":13245,"children":13246},{},[13247,13251,13255,13259],{"type":17,"tag":9441,"props":13248,"children":13249},{},[13250],{"type":23,"value":9445},{"type":17,"tag":9441,"props":13252,"children":13253},{},[13254],{"type":23,"value":2061},{"type":17,"tag":9441,"props":13256,"children":13257},{},[13258],{"type":23,"value":9458},{"type":17,"tag":9441,"props":13260,"children":13261},{},[13262],{"type":23,"value":13183},{"type":17,"tag":26,"props":13264,"children":13265},{},[13266],{"type":23,"value":13267},"Please complete the following data processing tasks:",{"type":17,"tag":3082,"props":13269,"children":13270},{},[13271,13306,13340,13369,13386,13403],{"type":17,"tag":51,"props":13272,"children":13273},{},[13274,13279,13280],{"type":17,"tag":83,"props":13275,"children":13276},{},[13277],{"type":23,"value":13278},"Data Reading and Viewing",{"type":23,"value":1175},{"type":17,"tag":47,"props":13281,"children":13282},{},[13283,13294],{"type":17,"tag":51,"props":13284,"children":13285},{},[13286,13288,13293],{"type":23,"value":13287},"Read the above dataset and create a DataFrame ",{"type":17,"tag":146,"props":13289,"children":13291},{"className":13290},[],[13292],{"type":23,"value":9399},{"type":23,"value":96},{"type":17,"tag":51,"props":13295,"children":13296},{},[13297,13298,13304],{"type":23,"value":9566},{"type":17,"tag":146,"props":13299,"children":13301},{"className":13300},[],[13302],{"type":23,"value":13303},"head()",{"type":23,"value":13305}," method to view the first two rows of the dataset.",{"type":17,"tag":51,"props":13307,"children":13308},{},[13309,13314,13315],{"type":17,"tag":83,"props":13310,"children":13311},{},[13312],{"type":23,"value":13313},"Data Cleaning",{"type":23,"value":1175},{"type":17,"tag":47,"props":13316,"children":13317},{},[13318,13329],{"type":17,"tag":51,"props":13319,"children":13320},{},[13321,13322,13327],{"type":23,"value":9566},{"type":17,"tag":146,"props":13323,"children":13325},{"className":13324},[],[13326],{"type":23,"value":6712},{"type":23,"value":13328}," method to delete rows containing missing values.",{"type":17,"tag":51,"props":13330,"children":13331},{},[13332,13333,13338],{"type":23,"value":9566},{"type":17,"tag":146,"props":13334,"children":13336},{"className":13335},[],[13337],{"type":23,"value":3764},{"type":23,"value":13339}," method to replace all missing age values with the mean of the age column.",{"type":17,"tag":51,"props":13341,"children":13342},{},[13343,13348,13349],{"type":17,"tag":83,"props":13344,"children":13345},{},[13346],{"type":23,"value":13347},"Data Selection and Slicing",{"type":23,"value":1175},{"type":17,"tag":47,"props":13350,"children":13351},{},[13352,13357],{"type":17,"tag":51,"props":13353,"children":13354},{},[13355],{"type":23,"value":13356},"Directly obtain the \"Age\" column data by column name.",{"type":17,"tag":51,"props":13358,"children":13359},{},[13360,13361,13367],{"type":23,"value":4522},{"type":17,"tag":146,"props":13362,"children":13364},{"className":13363},[],[13365],{"type":23,"value":13366},"loc",{"type":23,"value":13368}," to select the \"Name\" column data of the second row.",{"type":17,"tag":51,"props":13370,"children":13371},{},[13372,13377,13378],{"type":17,"tag":83,"props":13373,"children":13374},{},[13375],{"type":23,"value":13376},"Data Sorting",{"type":23,"value":1175},{"type":17,"tag":47,"props":13379,"children":13380},{},[13381],{"type":17,"tag":51,"props":13382,"children":13383},{},[13384],{"type":23,"value":13385},"Sort the dataset in ascending order by the \"Age\" column and print the result.",{"type":17,"tag":51,"props":13387,"children":13388},{},[13389,13394,13395],{"type":17,"tag":83,"props":13390,"children":13391},{},[13392],{"type":23,"value":13393},"Data Grouping and Aggregation",{"type":23,"value":1175},{"type":17,"tag":47,"props":13396,"children":13397},{},[13398],{"type":17,"tag":51,"props":13399,"children":13400},{},[13401],{"type":23,"value":13402},"Group the data by the \"City\" column and calculate the average age of employees in each city.",{"type":17,"tag":51,"props":13404,"children":13405},{},[13406,13411,13412],{"type":17,"tag":83,"props":13407,"children":13408},{},[13409],{"type":23,"value":13410},"Data Merging",{"type":23,"value":1175},{"type":17,"tag":47,"props":13413,"children":13414},{},[13415,13436],{"type":17,"tag":51,"props":13416,"children":13417},{},[13418,13420,13426,13428],{"type":23,"value":13419},"Assume there is another DataFrame ",{"type":17,"tag":146,"props":13421,"children":13423},{"className":13422},[],[13424],{"type":23,"value":13425},"df_departments",{"type":23,"value":13427}," containing department budget information as follows:\n",{"type":17,"tag":299,"props":13429,"children":13431},{"code":13430},"Department  Budget\nHR          10000\nSales       20000\nIT          15000\n",[13432],{"type":17,"tag":146,"props":13433,"children":13434},{"__ignoreMap":7},[13435],{"type":23,"value":13430},{"type":17,"tag":51,"props":13437,"children":13438},{},[13439,13440,13446,13448,13453,13454,13459],{"type":23,"value":9566},{"type":17,"tag":146,"props":13441,"children":13443},{"className":13442},[],[13444],{"type":23,"value":13445},"merge()",{"type":23,"value":13447}," method to merge ",{"type":17,"tag":146,"props":13449,"children":13451},{"className":13450},[],[13452],{"type":23,"value":9399},{"type":23,"value":89},{"type":17,"tag":146,"props":13455,"children":13457},{"className":13456},[],[13458],{"type":23,"value":13425},{"type":23,"value":13460}," by the \"Department\" column and print the result.",{"type":17,"tag":13462,"props":13463,"children":13464},"style",{},[13465],{"type":23,"value":13466},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":321,"depth":321,"links":13468},[13469,13470,13475,13479,13486],{"id":20,"depth":321,"text":24},{"id":73,"depth":321,"text":76,"children":13471},[13472,13473,13474],{"id":136,"depth":665,"text":139},{"id":1534,"depth":665,"text":1537},{"id":4049,"depth":665,"text":4052},{"id":4071,"depth":321,"text":4074,"children":13476},[13477,13478],{"id":4077,"depth":665,"text":4080},{"id":4932,"depth":665,"text":4935},{"id":6147,"depth":321,"text":6150,"children":13480},[13481,13482,13483,13484,13485],{"id":6158,"depth":665,"text":6161},{"id":7882,"depth":665,"text":7885},{"id":8321,"depth":665,"text":8324},{"id":8984,"depth":665,"text":8987},{"id":9371,"depth":665,"text":9374},{"id":9752,"depth":321,"text":9755,"children":13487},[13488,13489,13490,13491,13492,13493,13494],{"id":9758,"depth":665,"text":9761},{"id":9986,"depth":665,"text":9989},{"id":10585,"depth":665,"text":10588},{"id":11562,"depth":665,"text":11565},{"id":12105,"depth":665,"text":12108},{"id":12710,"depth":665,"text":12713},{"id":13112,"depth":665,"text":13115},"markdown","content:python-zero:4.pandas.md","content","python-zero/4.pandas.md","python-zero/4.pandas","md",1739934417033]