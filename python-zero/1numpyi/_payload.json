[{"data":1,"prerenderedAt":6378},["ShallowReactive",2],{"content-query-MXRzE757dp":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"navigation":10,"body":13,"_type":6372,"_id":6373,"_source":6374,"_file":6375,"_stem":6376,"_extension":6377},"/python-zero/1numpyi","python-zero",false,"","3.1 Numpy for Python I","Notes for Python beginners",{"index":11,"icon":12},8,"i-ph-info-duotone",{"type":14,"children":15,"toc":6355},"root",[16,69,76,83,88,93,98,117,126,131,137,142,169,212,218,224,229,234,399,407,420,425,633,675,772,785,814,820,825,833,840,854,866,982,987,1078,1083,1096,1234,1246,1367,1379,1499,1511,1634,1652,1820,1832,1861,1894,1920,1925,2036,2040,2073,2091,2278,2319,2331,2378,2382,2424,2436,2579,2585,2630,2773,2777,2841,2857,3107,3113,3118,3127,3133,3138,3143,3151,3180,3303,3346,3370,3413,3437,3465,3489,3494,3500,3506,3511,3524,3530,3535,3593,3598,3742,3757,3805,3820,3868,3883,3950,3965,4032,4047,4114,4120,4140,4152,4163,4228,4232,4287,4299,4599,4611,4622,4654,4658,4680,4691,4908,4914,4919,4932,4937,4942,4947,5245,5250,5268,5276,5281,5286,5291,5510,5535,5540,5706,5718,5723,5968,5973,5978,5987,6049,6173,6191,6349],{"type":17,"tag":18,"props":19,"children":20},"element","blockquote",{},[21,34],{"type":17,"tag":22,"props":23,"children":24},"p",{},[25,32],{"type":17,"tag":26,"props":27,"children":28},"span",{},[29],{"type":30,"value":31},"text","!Note",{"type":30,"value":33},"\nReference URLs:",{"type":17,"tag":35,"props":36,"children":37},"ul",{},[38,55],{"type":17,"tag":39,"props":40,"children":41},"li",{},[42,44],{"type":30,"value":43},"Official Numpy Documentation in Chinese: ",{"type":17,"tag":26,"props":45,"children":46},{},[47],{"type":17,"tag":48,"props":49,"children":53},"a",{"href":50,"rel":51},"https://www.numpy.org.cn/",[52],"nofollow",[54],{"type":30,"value":50},{"type":17,"tag":39,"props":56,"children":57},{},[58,60],{"type":30,"value":59},"Simple Numpy Tutorial: ",{"type":17,"tag":26,"props":61,"children":62},{},[63],{"type":17,"tag":48,"props":64,"children":67},{"href":65,"rel":66},"https://numpy123.com/",[52],[68],{"type":30,"value":65},{"type":17,"tag":70,"props":71,"children":73},"h2",{"id":72},"_1-introduction-to-numpy",[74],{"type":30,"value":75},"1. Introduction to Numpy",{"type":17,"tag":77,"props":78,"children":80},"h3",{"id":79},"_1-the-role-of-numpy",[81],{"type":30,"value":82},"1. The Role of Numpy",{"type":17,"tag":22,"props":84,"children":85},{},[86],{"type":30,"value":87},"Numpy is a scientific computing library for Python that supports large multi-dimensional arrays and matrices, along with a collection of high-performance mathematical functions to operate on these arrays. Numpy is the foundation for libraries like Scipy, Pandas, and others used for data processing or scientific computing.",{"type":17,"tag":22,"props":89,"children":90},{},[91],{"type":30,"value":92},"In simple terms, Numpy is a fast mathematical computation library primarily used for array calculations. Its core is the ndarray object, which is an N-dimensional array, also known as a multi-dimensional array. Additionally, Numpy provides many broadcasting functions, tools to integrate C/C++/Fortran code, and can be used to store and process large matrices. It also offers functionalities like linear algebra, Fourier transform, and random number generation, making it the fundamental library for scientific computing in Python.",{"type":17,"tag":22,"props":94,"children":95},{},[96],{"type":30,"value":97},"Numpy has the following advantages:",{"type":17,"tag":99,"props":100,"children":101},"ol",{},[102,107,112],{"type":17,"tag":39,"props":103,"children":104},{},[105],{"type":30,"value":106},"Fast computation: Numpy is written in C, so some of its algorithm libraries are optimized to provide fast mathematical operations. For the same computational tasks, using Numpy is 10 to 100 times faster than using Python's built-in lists.",{"type":17,"tag":39,"props":108,"children":109},{},[110],{"type":30,"value":111},"Performance optimization: Numpy uses vectorized operations internally, which avoids loops in Python, making the code more concise and faster.",{"type":17,"tag":39,"props":113,"children":114},{},[115],{"type":30,"value":116},"Rich function library: Numpy provides a large number of mathematical functions for array operations, including statistics, linear algebra, Fourier transform, etc.",{"type":17,"tag":22,"props":118,"children":119},{},[120],{"type":17,"tag":121,"props":122,"children":125},"img",{"alt":123,"src":124},"alt text","http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/Numpy%E7%9A%84%E4%BC%98%E5%8A%BFen.png",[],{"type":17,"tag":22,"props":127,"children":128},{},[129],{"type":30,"value":130},"Numpy is often used together with Scipy (scientific computing library), Matplotlib (plotting library), and Pandas (data processing library). These libraries are all based on Numpy, forming a powerful scientific computing environment.",{"type":17,"tag":77,"props":132,"children":134},{"id":133},"_2-ndarray-object",[135],{"type":30,"value":136},"2. ndarray Object",{"type":17,"tag":22,"props":138,"children":139},{},[140],{"type":30,"value":141},"The core of Numpy is the ndarray object, an N-dimensional array object, also known as a multi-dimensional array. The ndarray object is a fast and flexible container for large datasets, capable of holding multiple elements of the same type.",{"type":17,"tag":35,"props":143,"children":144},{},[145,159,164],{"type":17,"tag":39,"props":146,"children":147},{},[148,150,157],{"type":30,"value":149},"The ndarray object is a collection of ",{"type":17,"tag":151,"props":152,"children":154},"code",{"className":153},[],[155],{"type":30,"value":156},"same type of data",{"type":30,"value":158},", which can be of any dimension.",{"type":17,"tag":39,"props":160,"children":161},{},[162],{"type":30,"value":163},"Each element in the ndarray object occupies the same size area in memory.",{"type":17,"tag":39,"props":165,"children":166},{},[167],{"type":30,"value":168},"The indices in the ndarray object start from 0.",{"type":17,"tag":18,"props":170,"children":171},{},[172],{"type":17,"tag":22,"props":173,"children":174},{},[175,180,182,188,190,196,197,203,204,210],{"type":17,"tag":26,"props":176,"children":177},{},[178],{"type":30,"value":179},"!Important",{"type":30,"value":181},"\nBy default, all elements in a Numpy ndarray object are of the same type, which is different from Python lists. If different types of data are passed when creating an ndarray, Numpy will automatically convert the data types to the same type to ensure consistency, with the priority being: ",{"type":17,"tag":151,"props":183,"children":185},{"className":184},[],[186],{"type":30,"value":187},"bool",{"type":30,"value":189}," \u003C ",{"type":17,"tag":151,"props":191,"children":193},{"className":192},[],[194],{"type":30,"value":195},"int",{"type":30,"value":189},{"type":17,"tag":151,"props":198,"children":200},{"className":199},[],[201],{"type":30,"value":202},"float",{"type":30,"value":189},{"type":17,"tag":151,"props":205,"children":207},{"className":206},[],[208],{"type":30,"value":209},"str",{"type":30,"value":211},".",{"type":17,"tag":70,"props":213,"children":215},{"id":214},"_2-creating-ndarray-objects",[216],{"type":30,"value":217},"2. Creating ndarray Objects",{"type":17,"tag":77,"props":219,"children":221},{"id":220},"_1-data-types",[222],{"type":30,"value":223},"1. Data Types",{"type":17,"tag":22,"props":225,"children":226},{},[227],{"type":30,"value":228},"To create an ndarray object, you first need to know which data types it supports.",{"type":17,"tag":22,"props":230,"children":231},{},[232],{"type":30,"value":233},"Numpy provides more rich and efficient data types than Python's built-in types to support more complex numerical computation needs. Below are some common Numpy data types:",{"type":17,"tag":235,"props":236,"children":237},"table",{},[238,258],{"type":17,"tag":239,"props":240,"children":241},"thead",{},[242],{"type":17,"tag":243,"props":244,"children":245},"tr",{},[246,253],{"type":17,"tag":247,"props":248,"children":250},"th",{"align":249},"center",[251],{"type":30,"value":252},"Data Type",{"type":17,"tag":247,"props":254,"children":255},{"align":249},[256],{"type":30,"value":257},"Description",{"type":17,"tag":259,"props":260,"children":261},"tbody",{},[262,280,297,314,331,348,365,382],{"type":17,"tag":243,"props":263,"children":264},{},[265,275],{"type":17,"tag":266,"props":267,"children":268},"td",{"align":249},[269],{"type":17,"tag":151,"props":270,"children":272},{"className":271},[],[273],{"type":30,"value":274},"bool_",{"type":17,"tag":266,"props":276,"children":277},{"align":249},[278],{"type":30,"value":279},"Boolean data type, includes only True and False",{"type":17,"tag":243,"props":281,"children":282},{},[283,292],{"type":17,"tag":266,"props":284,"children":285},{"align":249},[286],{"type":17,"tag":151,"props":287,"children":289},{"className":288},[],[290],{"type":30,"value":291},"int_",{"type":17,"tag":266,"props":293,"children":294},{"align":249},[295],{"type":30,"value":296},"Default integer type, similar to long in C, usually int32 or int64, depending on the platform",{"type":17,"tag":243,"props":298,"children":299},{},[300,309],{"type":17,"tag":266,"props":301,"children":302},{"align":249},[303],{"type":17,"tag":151,"props":304,"children":306},{"className":305},[],[307],{"type":30,"value":308},"intp",{"type":17,"tag":266,"props":310,"children":311},{"align":249},[312],{"type":30,"value":313},"Integer type used for indexing, similar to ssize_t in C, generally int32 or int64",{"type":17,"tag":243,"props":315,"children":316},{},[317,326],{"type":17,"tag":266,"props":318,"children":319},{"align":249},[320],{"type":17,"tag":151,"props":321,"children":323},{"className":322},[],[324],{"type":30,"value":325},"uint8",{"type":17,"tag":266,"props":327,"children":328},{"align":249},[329],{"type":30,"value":330},"8-bit unsigned integer, range from 0 to 255",{"type":17,"tag":243,"props":332,"children":333},{},[334,343],{"type":17,"tag":266,"props":335,"children":336},{"align":249},[337],{"type":17,"tag":151,"props":338,"children":340},{"className":339},[],[341],{"type":30,"value":342},"uint64",{"type":17,"tag":266,"props":344,"children":345},{"align":249},[346],{"type":30,"value":347},"64-bit unsigned integer, range from 0 to 18446744073709551615",{"type":17,"tag":243,"props":349,"children":350},{},[351,360],{"type":17,"tag":266,"props":352,"children":353},{"align":249},[354],{"type":17,"tag":151,"props":355,"children":357},{"className":356},[],[358],{"type":30,"value":359},"float_",{"type":17,"tag":266,"props":361,"children":362},{"align":249},[363],{"type":30,"value":364},"Default floating-point type, alias for float64, usually used for more precise floating-point representation",{"type":17,"tag":243,"props":366,"children":367},{},[368,377],{"type":17,"tag":266,"props":369,"children":370},{"align":249},[371],{"type":17,"tag":151,"props":372,"children":374},{"className":373},[],[375],{"type":30,"value":376},"float64",{"type":17,"tag":266,"props":378,"children":379},{"align":249},[380],{"type":30,"value":381},"Double precision floating-point number (64-bit): includes 1-bit sign, 11-bit exponent, and 52-bit mantissa",{"type":17,"tag":243,"props":383,"children":384},{},[385,394],{"type":17,"tag":266,"props":386,"children":387},{"align":249},[388],{"type":17,"tag":151,"props":389,"children":391},{"className":390},[],[392],{"type":30,"value":393},"complex_",{"type":17,"tag":266,"props":395,"children":396},{"align":249},[397],{"type":30,"value":398},"Default complex type, alias for complex128, uses 64-bit floating-point numbers to represent real and imaginary parts",{"type":17,"tag":22,"props":400,"children":401},{},[402],{"type":17,"tag":121,"props":403,"children":406},{"alt":404,"src":405},"data types","http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/Numpy%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Ben.png",[],{"type":17,"tag":22,"props":408,"children":409},{},[410,412,418],{"type":30,"value":411},"These data types are called ",{"type":17,"tag":151,"props":413,"children":415},{"className":414},[],[416],{"type":30,"value":417},"dtype",{"type":30,"value":419}," objects in Numpy, supporting efficient numerical computation, making Numpy an important tool in scientific computing and data processing.",{"type":17,"tag":22,"props":421,"children":422},{},[423],{"type":30,"value":424},"In practice, Numpy supports using character codes to identify data types, making the definition of data types more concise. Below are common character codes and their corresponding data types:",{"type":17,"tag":235,"props":426,"children":427},{},[428,443],{"type":17,"tag":239,"props":429,"children":430},{},[431],{"type":17,"tag":243,"props":432,"children":433},{},[434,439],{"type":17,"tag":247,"props":435,"children":436},{"align":249},[437],{"type":30,"value":438},"Character Code",{"type":17,"tag":247,"props":440,"children":441},{"align":249},[442],{"type":30,"value":252},{"type":17,"tag":259,"props":444,"children":445},{},[446,463,480,497,514,531,548,565,582,599,616],{"type":17,"tag":243,"props":447,"children":448},{},[449,458],{"type":17,"tag":266,"props":450,"children":451},{"align":249},[452],{"type":17,"tag":151,"props":453,"children":455},{"className":454},[],[456],{"type":30,"value":457},"b",{"type":17,"tag":266,"props":459,"children":460},{"align":249},[461],{"type":30,"value":462},"Boolean (bool)",{"type":17,"tag":243,"props":464,"children":465},{},[466,475],{"type":17,"tag":266,"props":467,"children":468},{"align":249},[469],{"type":17,"tag":151,"props":470,"children":472},{"className":471},[],[473],{"type":30,"value":474},"i",{"type":17,"tag":266,"props":476,"children":477},{"align":249},[478],{"type":30,"value":479},"Signed integer (int)",{"type":17,"tag":243,"props":481,"children":482},{},[483,492],{"type":17,"tag":266,"props":484,"children":485},{"align":249},[486],{"type":17,"tag":151,"props":487,"children":489},{"className":488},[],[490],{"type":30,"value":491},"u",{"type":17,"tag":266,"props":493,"children":494},{"align":249},[495],{"type":30,"value":496},"Unsigned integer (unsigned int)",{"type":17,"tag":243,"props":498,"children":499},{},[500,509],{"type":17,"tag":266,"props":501,"children":502},{"align":249},[503],{"type":17,"tag":151,"props":504,"children":506},{"className":505},[],[507],{"type":30,"value":508},"f",{"type":17,"tag":266,"props":510,"children":511},{"align":249},[512],{"type":30,"value":513},"Floating-point (float)",{"type":17,"tag":243,"props":515,"children":516},{},[517,526],{"type":17,"tag":266,"props":518,"children":519},{"align":249},[520],{"type":17,"tag":151,"props":521,"children":523},{"className":522},[],[524],{"type":30,"value":525},"c",{"type":17,"tag":266,"props":527,"children":528},{"align":249},[529],{"type":30,"value":530},"Complex floating-point (complex)",{"type":17,"tag":243,"props":532,"children":533},{},[534,543],{"type":17,"tag":266,"props":535,"children":536},{"align":249},[537],{"type":17,"tag":151,"props":538,"children":540},{"className":539},[],[541],{"type":30,"value":542},"m",{"type":17,"tag":266,"props":544,"children":545},{"align":249},[546],{"type":30,"value":547},"Time interval (timedelta)",{"type":17,"tag":243,"props":549,"children":550},{},[551,560],{"type":17,"tag":266,"props":552,"children":553},{"align":249},[554],{"type":17,"tag":151,"props":555,"children":557},{"className":556},[],[558],{"type":30,"value":559},"M",{"type":17,"tag":266,"props":561,"children":562},{"align":249},[563],{"type":30,"value":564},"Date-time (datetime)",{"type":17,"tag":243,"props":566,"children":567},{},[568,577],{"type":17,"tag":266,"props":569,"children":570},{"align":249},[571],{"type":17,"tag":151,"props":572,"children":574},{"className":573},[],[575],{"type":30,"value":576},"O",{"type":17,"tag":266,"props":578,"children":579},{"align":249},[580],{"type":30,"value":581},"Python object (object)",{"type":17,"tag":243,"props":583,"children":584},{},[585,594],{"type":17,"tag":266,"props":586,"children":587},{"align":249},[588],{"type":17,"tag":151,"props":589,"children":591},{"className":590},[],[592],{"type":30,"value":593},"S",{"type":17,"tag":266,"props":595,"children":596},{"align":249},[597],{"type":30,"value":598},"String (string)",{"type":17,"tag":243,"props":600,"children":601},{},[602,611],{"type":17,"tag":266,"props":603,"children":604},{"align":249},[605],{"type":17,"tag":151,"props":606,"children":608},{"className":607},[],[609],{"type":30,"value":610},"U",{"type":17,"tag":266,"props":612,"children":613},{"align":249},[614],{"type":30,"value":615},"Unicode string (unicode string)",{"type":17,"tag":243,"props":617,"children":618},{},[619,628],{"type":17,"tag":266,"props":620,"children":621},{"align":249},[622],{"type":17,"tag":151,"props":623,"children":625},{"className":624},[],[626],{"type":30,"value":627},"V",{"type":17,"tag":266,"props":629,"children":630},{"align":249},[631],{"type":30,"value":632},"Raw data type (void), used to define fixed-size raw data blocks",{"type":17,"tag":22,"props":634,"children":635},{},[636,638,643,645,650,652,658,660,665,667,673],{"type":30,"value":637},"In Numpy, we can also customize ",{"type":17,"tag":151,"props":639,"children":641},{"className":640},[],[642],{"type":30,"value":417},{"type":30,"value":644}," objects to achieve more flexible data type definitions. A ",{"type":17,"tag":151,"props":646,"children":648},{"className":647},[],[649],{"type":30,"value":417},{"type":30,"value":651}," object contains metadata about the data type, such as the data type name, data size, byte order, etc. We can use the ",{"type":17,"tag":151,"props":653,"children":655},{"className":654},[],[656],{"type":30,"value":657},"np.dtype()",{"type":30,"value":659}," function to create a ",{"type":17,"tag":151,"props":661,"children":663},{"className":662},[],[664],{"type":30,"value":417},{"type":30,"value":666}," object, which accepts a list where each element is a tuple in the format: ",{"type":17,"tag":151,"props":668,"children":670},{"className":669},[],[671],{"type":30,"value":672},"(field name, data type)",{"type":30,"value":674},". For example, we can create a custom data type containing integer and floating-point fields:",{"type":17,"tag":676,"props":677,"children":681},"pre",{"className":678,"code":679,"language":680,"meta":7,"style":7},"language-python shiki shiki-themes github-light github-dark","import numpy as np\n\n# Define a structure containing an integer and a floating-point number\ncustom_dtype = np.dtype([('age', np.int32), ('height', np.float32)])\n","python",[682],{"type":17,"tag":151,"props":683,"children":684},{"__ignoreMap":7},[685,712,722,732],{"type":17,"tag":26,"props":686,"children":689},{"class":687,"line":688},"line",1,[690,696,702,707],{"type":17,"tag":26,"props":691,"children":693},{"style":692},"--shiki-light:#D73A49;--shiki-dark:#F97583",[694],{"type":30,"value":695},"import",{"type":17,"tag":26,"props":697,"children":699},{"style":698},"--shiki-light:#24292E;--shiki-dark:#E1E4E8",[700],{"type":30,"value":701}," numpy ",{"type":17,"tag":26,"props":703,"children":704},{"style":692},[705],{"type":30,"value":706},"as",{"type":17,"tag":26,"props":708,"children":709},{"style":698},[710],{"type":30,"value":711}," np\n",{"type":17,"tag":26,"props":713,"children":715},{"class":687,"line":714},2,[716],{"type":17,"tag":26,"props":717,"children":719},{"emptyLinePlaceholder":718},true,[720],{"type":30,"value":721},"\n",{"type":17,"tag":26,"props":723,"children":725},{"class":687,"line":724},3,[726],{"type":17,"tag":26,"props":727,"children":729},{"style":728},"--shiki-light:#6A737D;--shiki-dark:#6A737D",[730],{"type":30,"value":731},"# Define a structure containing an integer and a floating-point number\n",{"type":17,"tag":26,"props":733,"children":735},{"class":687,"line":734},4,[736,741,746,751,757,762,767],{"type":17,"tag":26,"props":737,"children":738},{"style":698},[739],{"type":30,"value":740},"custom_dtype ",{"type":17,"tag":26,"props":742,"children":743},{"style":692},[744],{"type":30,"value":745},"=",{"type":17,"tag":26,"props":747,"children":748},{"style":698},[749],{"type":30,"value":750}," np.dtype([(",{"type":17,"tag":26,"props":752,"children":754},{"style":753},"--shiki-light:#032F62;--shiki-dark:#9ECBFF",[755],{"type":30,"value":756},"'age'",{"type":17,"tag":26,"props":758,"children":759},{"style":698},[760],{"type":30,"value":761},", np.int32), (",{"type":17,"tag":26,"props":763,"children":764},{"style":753},[765],{"type":30,"value":766},"'height'",{"type":17,"tag":26,"props":768,"children":769},{"style":698},[770],{"type":30,"value":771},", np.float32)])\n",{"type":17,"tag":22,"props":773,"children":774},{},[775,777,783],{"type":30,"value":776},"In the above example, the custom data type ",{"type":17,"tag":151,"props":778,"children":780},{"className":779},[],[781],{"type":30,"value":782},"custom_dtype",{"type":30,"value":784}," contains two fields:",{"type":17,"tag":35,"props":786,"children":787},{},[788,801],{"type":17,"tag":39,"props":789,"children":790},{},[791,793,799],{"type":30,"value":792},"age: ",{"type":17,"tag":151,"props":794,"children":796},{"className":795},[],[797],{"type":30,"value":798},"np.int32",{"type":30,"value":800}," type integer field",{"type":17,"tag":39,"props":802,"children":803},{},[804,806,812],{"type":30,"value":805},"height: ",{"type":17,"tag":151,"props":807,"children":809},{"className":808},[],[810],{"type":30,"value":811},"np.float32",{"type":30,"value":813}," type floating-point field",{"type":17,"tag":77,"props":815,"children":817},{"id":816},"_2-common-functions-to-create-ndarray-objects",[818],{"type":30,"value":819},"2. Common Functions to Create ndarray Objects",{"type":17,"tag":22,"props":821,"children":822},{},[823],{"type":30,"value":824},"In Numpy, there are the following commonly used functions to create ndarray objects:",{"type":17,"tag":22,"props":826,"children":827},{},[828],{"type":17,"tag":121,"props":829,"children":832},{"alt":830,"src":831},"创建 ndarray 对象的函数 en","http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E5%88%9B%E5%BB%BAndarray%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0en.png",[],{"type":17,"tag":834,"props":835,"children":837},"h4",{"id":836},"_1-basic-creation-functions",[838],{"type":30,"value":839},"(1) Basic Creation Functions",{"type":17,"tag":99,"props":841,"children":842},{},[843],{"type":17,"tag":39,"props":844,"children":845},{},[846,852],{"type":17,"tag":151,"props":847,"children":849},{"className":848},[],[850],{"type":30,"value":851},"array()",{"type":30,"value":853}," Function",{"type":17,"tag":22,"props":855,"children":856},{},[857,859,864],{"type":30,"value":858},"We can use the ",{"type":17,"tag":151,"props":860,"children":862},{"className":861},[],[863],{"type":30,"value":851},{"type":30,"value":865}," function to create an ndarray object from Python sequence types like lists or tuples. The syntax of this function is as follows:",{"type":17,"tag":676,"props":867,"children":869},{"className":678,"code":868,"language":680,"meta":7,"style":7},"numpy.array(object, dtype=None, copy=True, order=None, subok=False, ndmin=0)\n",[870],{"type":17,"tag":151,"props":871,"children":872},{"__ignoreMap":7},[873],{"type":17,"tag":26,"props":874,"children":875},{"class":687,"line":688},[876,881,887,892,897,901,906,910,915,919,924,928,933,937,941,945,950,954,959,963,968,972,977],{"type":17,"tag":26,"props":877,"children":878},{"style":698},[879],{"type":30,"value":880},"numpy.array(",{"type":17,"tag":26,"props":882,"children":884},{"style":883},"--shiki-light:#005CC5;--shiki-dark:#79B8FF",[885],{"type":30,"value":886},"object",{"type":17,"tag":26,"props":888,"children":889},{"style":698},[890],{"type":30,"value":891},", ",{"type":17,"tag":26,"props":893,"children":895},{"style":894},"--shiki-light:#E36209;--shiki-dark:#FFAB70",[896],{"type":30,"value":417},{"type":17,"tag":26,"props":898,"children":899},{"style":692},[900],{"type":30,"value":745},{"type":17,"tag":26,"props":902,"children":903},{"style":883},[904],{"type":30,"value":905},"None",{"type":17,"tag":26,"props":907,"children":908},{"style":698},[909],{"type":30,"value":891},{"type":17,"tag":26,"props":911,"children":912},{"style":894},[913],{"type":30,"value":914},"copy",{"type":17,"tag":26,"props":916,"children":917},{"style":692},[918],{"type":30,"value":745},{"type":17,"tag":26,"props":920,"children":921},{"style":883},[922],{"type":30,"value":923},"True",{"type":17,"tag":26,"props":925,"children":926},{"style":698},[927],{"type":30,"value":891},{"type":17,"tag":26,"props":929,"children":930},{"style":894},[931],{"type":30,"value":932},"order",{"type":17,"tag":26,"props":934,"children":935},{"style":692},[936],{"type":30,"value":745},{"type":17,"tag":26,"props":938,"children":939},{"style":883},[940],{"type":30,"value":905},{"type":17,"tag":26,"props":942,"children":943},{"style":698},[944],{"type":30,"value":891},{"type":17,"tag":26,"props":946,"children":947},{"style":894},[948],{"type":30,"value":949},"subok",{"type":17,"tag":26,"props":951,"children":952},{"style":692},[953],{"type":30,"value":745},{"type":17,"tag":26,"props":955,"children":956},{"style":883},[957],{"type":30,"value":958},"False",{"type":17,"tag":26,"props":960,"children":961},{"style":698},[962],{"type":30,"value":891},{"type":17,"tag":26,"props":964,"children":965},{"style":894},[966],{"type":30,"value":967},"ndmin",{"type":17,"tag":26,"props":969,"children":970},{"style":692},[971],{"type":30,"value":745},{"type":17,"tag":26,"props":973,"children":974},{"style":883},[975],{"type":30,"value":976},"0",{"type":17,"tag":26,"props":978,"children":979},{"style":698},[980],{"type":30,"value":981},")\n",{"type":17,"tag":22,"props":983,"children":984},{},[985],{"type":30,"value":986},"Parameter Description:",{"type":17,"tag":35,"props":988,"children":989},{},[990,1000,1010,1034,1044,1068],{"type":17,"tag":39,"props":991,"children":992},{},[993,998],{"type":17,"tag":151,"props":994,"children":996},{"className":995},[],[997],{"type":30,"value":886},{"type":30,"value":999},": The Python sequence type to be passed, such as a list or tuple.",{"type":17,"tag":39,"props":1001,"children":1002},{},[1003,1008],{"type":17,"tag":151,"props":1004,"children":1006},{"className":1005},[],[1007],{"type":30,"value":417},{"type":30,"value":1009},": Data type (optional). If not specified, Numpy will automatically infer the appropriate data type.",{"type":17,"tag":39,"props":1011,"children":1012},{},[1013,1018,1020,1025,1027,1032],{"type":17,"tag":151,"props":1014,"children":1016},{"className":1015},[],[1017],{"type":30,"value":914},{"type":30,"value":1019},": Boolean value (optional). If ",{"type":17,"tag":151,"props":1021,"children":1023},{"className":1022},[],[1024],{"type":30,"value":923},{"type":30,"value":1026}," (default), a new object will be created; if ",{"type":17,"tag":151,"props":1028,"children":1030},{"className":1029},[],[1031],{"type":30,"value":958},{"type":30,"value":1033},", the existing object will be referenced directly.",{"type":17,"tag":39,"props":1035,"children":1036},{},[1037,1042],{"type":17,"tag":151,"props":1038,"children":1040},{"className":1039},[],[1041],{"type":30,"value":932},{"type":30,"value":1043},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction), A any direction (default).",{"type":17,"tag":39,"props":1045,"children":1046},{},[1047,1052,1054,1059,1061,1066],{"type":17,"tag":151,"props":1048,"children":1050},{"className":1049},[],[1051],{"type":30,"value":949},{"type":30,"value":1053},": Boolean value (optional). Default is ",{"type":17,"tag":151,"props":1055,"children":1057},{"className":1056},[],[1058],{"type":30,"value":958},{"type":30,"value":1060},", returns base class array; if ",{"type":17,"tag":151,"props":1062,"children":1064},{"className":1063},[],[1065],{"type":30,"value":923},{"type":30,"value":1067},", returns subclass array.",{"type":17,"tag":39,"props":1069,"children":1070},{},[1071,1076],{"type":17,"tag":151,"props":1072,"children":1074},{"className":1073},[],[1075],{"type":30,"value":967},{"type":30,"value":1077},": Specifies the minimum number of dimensions of the generated array (optional).",{"type":17,"tag":22,"props":1079,"children":1080},{},[1081],{"type":30,"value":1082},"Below are some examples of creating ndarray objects:",{"type":17,"tag":22,"props":1084,"children":1085},{},[1086,1088,1094],{"type":30,"value":1087},"Example 1: Creating an ",{"type":17,"tag":151,"props":1089,"children":1091},{"className":1090},[],[1092],{"type":30,"value":1093},"ndarray",{"type":30,"value":1095}," object from a list",{"type":17,"tag":1097,"props":1098,"children":1101},"code-mirror-run",{":editable":1099,":show-in-col":1099,"max-height":1100},"true","20rem",[1102],{"type":17,"tag":676,"props":1103,"children":1105},{"className":678,"code":1104,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create an ndarray object from a list\narr = np.array([1, 2, 3, 4])\nprint(arr)\nprint(type(arr))\n",[1106],{"type":17,"tag":151,"props":1107,"children":1108},{"__ignoreMap":7},[1109,1128,1135,1143,1197,1211],{"type":17,"tag":26,"props":1110,"children":1111},{"class":687,"line":688},[1112,1116,1120,1124],{"type":17,"tag":26,"props":1113,"children":1114},{"style":692},[1115],{"type":30,"value":695},{"type":17,"tag":26,"props":1117,"children":1118},{"style":698},[1119],{"type":30,"value":701},{"type":17,"tag":26,"props":1121,"children":1122},{"style":692},[1123],{"type":30,"value":706},{"type":17,"tag":26,"props":1125,"children":1126},{"style":698},[1127],{"type":30,"value":711},{"type":17,"tag":26,"props":1129,"children":1130},{"class":687,"line":714},[1131],{"type":17,"tag":26,"props":1132,"children":1133},{"emptyLinePlaceholder":718},[1134],{"type":30,"value":721},{"type":17,"tag":26,"props":1136,"children":1137},{"class":687,"line":724},[1138],{"type":17,"tag":26,"props":1139,"children":1140},{"style":728},[1141],{"type":30,"value":1142},"# Create an ndarray object from a list\n",{"type":17,"tag":26,"props":1144,"children":1145},{"class":687,"line":734},[1146,1151,1155,1160,1165,1169,1174,1178,1183,1187,1192],{"type":17,"tag":26,"props":1147,"children":1148},{"style":698},[1149],{"type":30,"value":1150},"arr ",{"type":17,"tag":26,"props":1152,"children":1153},{"style":692},[1154],{"type":30,"value":745},{"type":17,"tag":26,"props":1156,"children":1157},{"style":698},[1158],{"type":30,"value":1159}," np.array([",{"type":17,"tag":26,"props":1161,"children":1162},{"style":883},[1163],{"type":30,"value":1164},"1",{"type":17,"tag":26,"props":1166,"children":1167},{"style":698},[1168],{"type":30,"value":891},{"type":17,"tag":26,"props":1170,"children":1171},{"style":883},[1172],{"type":30,"value":1173},"2",{"type":17,"tag":26,"props":1175,"children":1176},{"style":698},[1177],{"type":30,"value":891},{"type":17,"tag":26,"props":1179,"children":1180},{"style":883},[1181],{"type":30,"value":1182},"3",{"type":17,"tag":26,"props":1184,"children":1185},{"style":698},[1186],{"type":30,"value":891},{"type":17,"tag":26,"props":1188,"children":1189},{"style":883},[1190],{"type":30,"value":1191},"4",{"type":17,"tag":26,"props":1193,"children":1194},{"style":698},[1195],{"type":30,"value":1196},"])\n",{"type":17,"tag":26,"props":1198,"children":1200},{"class":687,"line":1199},5,[1201,1206],{"type":17,"tag":26,"props":1202,"children":1203},{"style":883},[1204],{"type":30,"value":1205},"print",{"type":17,"tag":26,"props":1207,"children":1208},{"style":698},[1209],{"type":30,"value":1210},"(arr)\n",{"type":17,"tag":26,"props":1212,"children":1214},{"class":687,"line":1213},6,[1215,1219,1224,1229],{"type":17,"tag":26,"props":1216,"children":1217},{"style":883},[1218],{"type":30,"value":1205},{"type":17,"tag":26,"props":1220,"children":1221},{"style":698},[1222],{"type":30,"value":1223},"(",{"type":17,"tag":26,"props":1225,"children":1226},{"style":883},[1227],{"type":30,"value":1228},"type",{"type":17,"tag":26,"props":1230,"children":1231},{"style":698},[1232],{"type":30,"value":1233},"(arr))\n",{"type":17,"tag":22,"props":1235,"children":1236},{},[1237,1239,1244],{"type":30,"value":1238},"Example 2: Elements in the ",{"type":17,"tag":151,"props":1240,"children":1242},{"className":1241},[],[1243],{"type":30,"value":1093},{"type":30,"value":1245}," object are of the same type",{"type":17,"tag":676,"props":1247,"children":1249},{"className":678,"code":1248,"language":680,"meta":7,"style":7},"# Even if the provided data types are inconsistent, Numpy will automatically convert them to a single type\narr_mixed = np.array([1, 2.5, 3, 4.7])\nprint(arr_mixed)\nprint(arr_mixed.dtype)\n\n# Output\n# [1.  2.5 3.  4.7]\n# float64\n",[1250],{"type":17,"tag":151,"props":1251,"children":1252},{"__ignoreMap":7},[1253,1261,1311,1323,1335,1342,1350,1359],{"type":17,"tag":26,"props":1254,"children":1255},{"class":687,"line":688},[1256],{"type":17,"tag":26,"props":1257,"children":1258},{"style":728},[1259],{"type":30,"value":1260},"# Even if the provided data types are inconsistent, Numpy will automatically convert them to a single type\n",{"type":17,"tag":26,"props":1262,"children":1263},{"class":687,"line":714},[1264,1269,1273,1277,1281,1285,1290,1294,1298,1302,1307],{"type":17,"tag":26,"props":1265,"children":1266},{"style":698},[1267],{"type":30,"value":1268},"arr_mixed ",{"type":17,"tag":26,"props":1270,"children":1271},{"style":692},[1272],{"type":30,"value":745},{"type":17,"tag":26,"props":1274,"children":1275},{"style":698},[1276],{"type":30,"value":1159},{"type":17,"tag":26,"props":1278,"children":1279},{"style":883},[1280],{"type":30,"value":1164},{"type":17,"tag":26,"props":1282,"children":1283},{"style":698},[1284],{"type":30,"value":891},{"type":17,"tag":26,"props":1286,"children":1287},{"style":883},[1288],{"type":30,"value":1289},"2.5",{"type":17,"tag":26,"props":1291,"children":1292},{"style":698},[1293],{"type":30,"value":891},{"type":17,"tag":26,"props":1295,"children":1296},{"style":883},[1297],{"type":30,"value":1182},{"type":17,"tag":26,"props":1299,"children":1300},{"style":698},[1301],{"type":30,"value":891},{"type":17,"tag":26,"props":1303,"children":1304},{"style":883},[1305],{"type":30,"value":1306},"4.7",{"type":17,"tag":26,"props":1308,"children":1309},{"style":698},[1310],{"type":30,"value":1196},{"type":17,"tag":26,"props":1312,"children":1313},{"class":687,"line":724},[1314,1318],{"type":17,"tag":26,"props":1315,"children":1316},{"style":883},[1317],{"type":30,"value":1205},{"type":17,"tag":26,"props":1319,"children":1320},{"style":698},[1321],{"type":30,"value":1322},"(arr_mixed)\n",{"type":17,"tag":26,"props":1324,"children":1325},{"class":687,"line":734},[1326,1330],{"type":17,"tag":26,"props":1327,"children":1328},{"style":883},[1329],{"type":30,"value":1205},{"type":17,"tag":26,"props":1331,"children":1332},{"style":698},[1333],{"type":30,"value":1334},"(arr_mixed.dtype)\n",{"type":17,"tag":26,"props":1336,"children":1337},{"class":687,"line":1199},[1338],{"type":17,"tag":26,"props":1339,"children":1340},{"emptyLinePlaceholder":718},[1341],{"type":30,"value":721},{"type":17,"tag":26,"props":1343,"children":1344},{"class":687,"line":1213},[1345],{"type":17,"tag":26,"props":1346,"children":1347},{"style":728},[1348],{"type":30,"value":1349},"# Output\n",{"type":17,"tag":26,"props":1351,"children":1353},{"class":687,"line":1352},7,[1354],{"type":17,"tag":26,"props":1355,"children":1356},{"style":728},[1357],{"type":30,"value":1358},"# [1.  2.5 3.  4.7]\n",{"type":17,"tag":26,"props":1360,"children":1361},{"class":687,"line":11},[1362],{"type":17,"tag":26,"props":1363,"children":1364},{"style":728},[1365],{"type":30,"value":1366},"# float64\n",{"type":17,"tag":22,"props":1368,"children":1369},{},[1370,1372,1377],{"type":30,"value":1371},"Example 3: Creating a multi-dimensional ",{"type":17,"tag":151,"props":1373,"children":1375},{"className":1374},[],[1376],{"type":30,"value":1093},{"type":30,"value":1378}," object",{"type":17,"tag":1097,"props":1380,"children":1381},{":editable":1099,":show-in-col":1099,"max-height":1100},[1382],{"type":17,"tag":676,"props":1383,"children":1385},{"className":678,"code":1384,"language":680,"meta":7,"style":7},"# Create a two-dimensional array\nmulti_dim_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(multi_dim_arr)\nprint(\"Array dimensions:\", multi_dim_arr.ndim)\n",[1386],{"type":17,"tag":151,"props":1387,"children":1388},{"__ignoreMap":7},[1389,1397,1466,1478],{"type":17,"tag":26,"props":1390,"children":1391},{"class":687,"line":688},[1392],{"type":17,"tag":26,"props":1393,"children":1394},{"style":728},[1395],{"type":30,"value":1396},"# Create a two-dimensional array\n",{"type":17,"tag":26,"props":1398,"children":1399},{"class":687,"line":714},[1400,1405,1409,1414,1418,1422,1426,1430,1434,1439,1443,1447,1452,1456,1461],{"type":17,"tag":26,"props":1401,"children":1402},{"style":698},[1403],{"type":30,"value":1404},"multi_dim_arr ",{"type":17,"tag":26,"props":1406,"children":1407},{"style":692},[1408],{"type":30,"value":745},{"type":17,"tag":26,"props":1410,"children":1411},{"style":698},[1412],{"type":30,"value":1413}," np.array([[",{"type":17,"tag":26,"props":1415,"children":1416},{"style":883},[1417],{"type":30,"value":1164},{"type":17,"tag":26,"props":1419,"children":1420},{"style":698},[1421],{"type":30,"value":891},{"type":17,"tag":26,"props":1423,"children":1424},{"style":883},[1425],{"type":30,"value":1173},{"type":17,"tag":26,"props":1427,"children":1428},{"style":698},[1429],{"type":30,"value":891},{"type":17,"tag":26,"props":1431,"children":1432},{"style":883},[1433],{"type":30,"value":1182},{"type":17,"tag":26,"props":1435,"children":1436},{"style":698},[1437],{"type":30,"value":1438},"], [",{"type":17,"tag":26,"props":1440,"children":1441},{"style":883},[1442],{"type":30,"value":1191},{"type":17,"tag":26,"props":1444,"children":1445},{"style":698},[1446],{"type":30,"value":891},{"type":17,"tag":26,"props":1448,"children":1449},{"style":883},[1450],{"type":30,"value":1451},"5",{"type":17,"tag":26,"props":1453,"children":1454},{"style":698},[1455],{"type":30,"value":891},{"type":17,"tag":26,"props":1457,"children":1458},{"style":883},[1459],{"type":30,"value":1460},"6",{"type":17,"tag":26,"props":1462,"children":1463},{"style":698},[1464],{"type":30,"value":1465},"]])\n",{"type":17,"tag":26,"props":1467,"children":1468},{"class":687,"line":724},[1469,1473],{"type":17,"tag":26,"props":1470,"children":1471},{"style":883},[1472],{"type":30,"value":1205},{"type":17,"tag":26,"props":1474,"children":1475},{"style":698},[1476],{"type":30,"value":1477},"(multi_dim_arr)\n",{"type":17,"tag":26,"props":1479,"children":1480},{"class":687,"line":734},[1481,1485,1489,1494],{"type":17,"tag":26,"props":1482,"children":1483},{"style":883},[1484],{"type":30,"value":1205},{"type":17,"tag":26,"props":1486,"children":1487},{"style":698},[1488],{"type":30,"value":1223},{"type":17,"tag":26,"props":1490,"children":1491},{"style":753},[1492],{"type":30,"value":1493},"\"Array dimensions:\"",{"type":17,"tag":26,"props":1495,"children":1496},{"style":698},[1497],{"type":30,"value":1498},", multi_dim_arr.ndim)\n",{"type":17,"tag":22,"props":1500,"children":1501},{},[1502,1504,1509],{"type":30,"value":1503},"Example 4: Using the ",{"type":17,"tag":151,"props":1505,"children":1507},{"className":1506},[],[1508],{"type":30,"value":417},{"type":30,"value":1510}," parameter to specify the data type",{"type":17,"tag":676,"props":1512,"children":1514},{"className":678,"code":1513,"language":680,"meta":7,"style":7},"# Use dtype to specify the data type as float\narr_float = np.array([1, 2, 3], dtype=np.float32)\nprint(arr_float)\nprint(arr_float.dtype)\n\n# Output\n# [1. 2. 3.]\n# float32\n",[1515],{"type":17,"tag":151,"props":1516,"children":1517},{"__ignoreMap":7},[1518,1526,1580,1592,1604,1611,1618,1626],{"type":17,"tag":26,"props":1519,"children":1520},{"class":687,"line":688},[1521],{"type":17,"tag":26,"props":1522,"children":1523},{"style":728},[1524],{"type":30,"value":1525},"# Use dtype to specify the data type as float\n",{"type":17,"tag":26,"props":1527,"children":1528},{"class":687,"line":714},[1529,1534,1538,1542,1546,1550,1554,1558,1562,1567,1571,1575],{"type":17,"tag":26,"props":1530,"children":1531},{"style":698},[1532],{"type":30,"value":1533},"arr_float ",{"type":17,"tag":26,"props":1535,"children":1536},{"style":692},[1537],{"type":30,"value":745},{"type":17,"tag":26,"props":1539,"children":1540},{"style":698},[1541],{"type":30,"value":1159},{"type":17,"tag":26,"props":1543,"children":1544},{"style":883},[1545],{"type":30,"value":1164},{"type":17,"tag":26,"props":1547,"children":1548},{"style":698},[1549],{"type":30,"value":891},{"type":17,"tag":26,"props":1551,"children":1552},{"style":883},[1553],{"type":30,"value":1173},{"type":17,"tag":26,"props":1555,"children":1556},{"style":698},[1557],{"type":30,"value":891},{"type":17,"tag":26,"props":1559,"children":1560},{"style":883},[1561],{"type":30,"value":1182},{"type":17,"tag":26,"props":1563,"children":1564},{"style":698},[1565],{"type":30,"value":1566},"], ",{"type":17,"tag":26,"props":1568,"children":1569},{"style":894},[1570],{"type":30,"value":417},{"type":17,"tag":26,"props":1572,"children":1573},{"style":692},[1574],{"type":30,"value":745},{"type":17,"tag":26,"props":1576,"children":1577},{"style":698},[1578],{"type":30,"value":1579},"np.float32)\n",{"type":17,"tag":26,"props":1581,"children":1582},{"class":687,"line":724},[1583,1587],{"type":17,"tag":26,"props":1584,"children":1585},{"style":883},[1586],{"type":30,"value":1205},{"type":17,"tag":26,"props":1588,"children":1589},{"style":698},[1590],{"type":30,"value":1591},"(arr_float)\n",{"type":17,"tag":26,"props":1593,"children":1594},{"class":687,"line":734},[1595,1599],{"type":17,"tag":26,"props":1596,"children":1597},{"style":883},[1598],{"type":30,"value":1205},{"type":17,"tag":26,"props":1600,"children":1601},{"style":698},[1602],{"type":30,"value":1603},"(arr_float.dtype)\n",{"type":17,"tag":26,"props":1605,"children":1606},{"class":687,"line":1199},[1607],{"type":17,"tag":26,"props":1608,"children":1609},{"emptyLinePlaceholder":718},[1610],{"type":30,"value":721},{"type":17,"tag":26,"props":1612,"children":1613},{"class":687,"line":1213},[1614],{"type":17,"tag":26,"props":1615,"children":1616},{"style":728},[1617],{"type":30,"value":1349},{"type":17,"tag":26,"props":1619,"children":1620},{"class":687,"line":1352},[1621],{"type":17,"tag":26,"props":1622,"children":1623},{"style":728},[1624],{"type":30,"value":1625},"# [1. 2. 3.]\n",{"type":17,"tag":26,"props":1627,"children":1628},{"class":687,"line":11},[1629],{"type":17,"tag":26,"props":1630,"children":1631},{"style":728},[1632],{"type":30,"value":1633},"# float32\n",{"type":17,"tag":22,"props":1635,"children":1636},{},[1637,1639,1644,1646,1651],{"type":30,"value":1638},"Example 5: Customizing a ",{"type":17,"tag":151,"props":1640,"children":1642},{"className":1641},[],[1643],{"type":30,"value":417},{"type":30,"value":1645}," object and using it to create an ",{"type":17,"tag":151,"props":1647,"children":1649},{"className":1648},[],[1650],{"type":30,"value":1093},{"type":30,"value":1378},{"type":17,"tag":1097,"props":1653,"children":1654},{":editable":1099,":show-in-col":1099,"max-height":1100},[1655],{"type":17,"tag":676,"props":1656,"children":1658},{"className":678,"code":1657,"language":680,"meta":7,"style":7},"# Custom dtype containing an integer and a floating-point field\ncustom_dtype = np.dtype([('age', np.int32), ('height', np.float32)])\narr_custom = np.array([(25, 5.9), (30, 6.1)], dtype=custom_dtype)\nprint(arr_custom)\nprint(arr_custom['age'])\nprint(arr_custom['height'])\n",[1659],{"type":17,"tag":151,"props":1660,"children":1661},{"__ignoreMap":7},[1662,1670,1701,1769,1781,1801],{"type":17,"tag":26,"props":1663,"children":1664},{"class":687,"line":688},[1665],{"type":17,"tag":26,"props":1666,"children":1667},{"style":728},[1668],{"type":30,"value":1669},"# Custom dtype containing an integer and a floating-point field\n",{"type":17,"tag":26,"props":1671,"children":1672},{"class":687,"line":714},[1673,1677,1681,1685,1689,1693,1697],{"type":17,"tag":26,"props":1674,"children":1675},{"style":698},[1676],{"type":30,"value":740},{"type":17,"tag":26,"props":1678,"children":1679},{"style":692},[1680],{"type":30,"value":745},{"type":17,"tag":26,"props":1682,"children":1683},{"style":698},[1684],{"type":30,"value":750},{"type":17,"tag":26,"props":1686,"children":1687},{"style":753},[1688],{"type":30,"value":756},{"type":17,"tag":26,"props":1690,"children":1691},{"style":698},[1692],{"type":30,"value":761},{"type":17,"tag":26,"props":1694,"children":1695},{"style":753},[1696],{"type":30,"value":766},{"type":17,"tag":26,"props":1698,"children":1699},{"style":698},[1700],{"type":30,"value":771},{"type":17,"tag":26,"props":1702,"children":1703},{"class":687,"line":724},[1704,1709,1713,1718,1723,1727,1732,1737,1742,1746,1751,1756,1760,1764],{"type":17,"tag":26,"props":1705,"children":1706},{"style":698},[1707],{"type":30,"value":1708},"arr_custom ",{"type":17,"tag":26,"props":1710,"children":1711},{"style":692},[1712],{"type":30,"value":745},{"type":17,"tag":26,"props":1714,"children":1715},{"style":698},[1716],{"type":30,"value":1717}," np.array([(",{"type":17,"tag":26,"props":1719,"children":1720},{"style":883},[1721],{"type":30,"value":1722},"25",{"type":17,"tag":26,"props":1724,"children":1725},{"style":698},[1726],{"type":30,"value":891},{"type":17,"tag":26,"props":1728,"children":1729},{"style":883},[1730],{"type":30,"value":1731},"5.9",{"type":17,"tag":26,"props":1733,"children":1734},{"style":698},[1735],{"type":30,"value":1736},"), (",{"type":17,"tag":26,"props":1738,"children":1739},{"style":883},[1740],{"type":30,"value":1741},"30",{"type":17,"tag":26,"props":1743,"children":1744},{"style":698},[1745],{"type":30,"value":891},{"type":17,"tag":26,"props":1747,"children":1748},{"style":883},[1749],{"type":30,"value":1750},"6.1",{"type":17,"tag":26,"props":1752,"children":1753},{"style":698},[1754],{"type":30,"value":1755},")], ",{"type":17,"tag":26,"props":1757,"children":1758},{"style":894},[1759],{"type":30,"value":417},{"type":17,"tag":26,"props":1761,"children":1762},{"style":692},[1763],{"type":30,"value":745},{"type":17,"tag":26,"props":1765,"children":1766},{"style":698},[1767],{"type":30,"value":1768},"custom_dtype)\n",{"type":17,"tag":26,"props":1770,"children":1771},{"class":687,"line":734},[1772,1776],{"type":17,"tag":26,"props":1773,"children":1774},{"style":883},[1775],{"type":30,"value":1205},{"type":17,"tag":26,"props":1777,"children":1778},{"style":698},[1779],{"type":30,"value":1780},"(arr_custom)\n",{"type":17,"tag":26,"props":1782,"children":1783},{"class":687,"line":1199},[1784,1788,1793,1797],{"type":17,"tag":26,"props":1785,"children":1786},{"style":883},[1787],{"type":30,"value":1205},{"type":17,"tag":26,"props":1789,"children":1790},{"style":698},[1791],{"type":30,"value":1792},"(arr_custom[",{"type":17,"tag":26,"props":1794,"children":1795},{"style":753},[1796],{"type":30,"value":756},{"type":17,"tag":26,"props":1798,"children":1799},{"style":698},[1800],{"type":30,"value":1196},{"type":17,"tag":26,"props":1802,"children":1803},{"class":687,"line":1213},[1804,1808,1812,1816],{"type":17,"tag":26,"props":1805,"children":1806},{"style":883},[1807],{"type":30,"value":1205},{"type":17,"tag":26,"props":1809,"children":1810},{"style":698},[1811],{"type":30,"value":1792},{"type":17,"tag":26,"props":1813,"children":1814},{"style":753},[1815],{"type":30,"value":766},{"type":17,"tag":26,"props":1817,"children":1818},{"style":698},[1819],{"type":30,"value":1196},{"type":17,"tag":22,"props":1821,"children":1822},{},[1823,1825,1830],{"type":30,"value":1824},"Through these examples, we can see that the ",{"type":17,"tag":151,"props":1826,"children":1828},{"className":1827},[],[1829],{"type":30,"value":851},{"type":30,"value":1831}," function in Numpy provides powerful flexibility, making it easier to create diverse data structures.",{"type":17,"tag":99,"props":1833,"children":1834},{"start":714},[1835],{"type":17,"tag":39,"props":1836,"children":1837},{},[1838,1844,1845,1851,1853,1859],{"type":17,"tag":151,"props":1839,"children":1841},{"className":1840},[],[1842],{"type":30,"value":1843},"empty()",{"type":30,"value":891},{"type":17,"tag":151,"props":1846,"children":1848},{"className":1847},[],[1849],{"type":30,"value":1850},"zeros()",{"type":30,"value":1852},", and ",{"type":17,"tag":151,"props":1854,"children":1856},{"className":1855},[],[1857],{"type":30,"value":1858},"full()",{"type":30,"value":1860}," Functions",{"type":17,"tag":22,"props":1862,"children":1863},{},[1864,1866,1871,1873,1879,1881,1886,1887,1892],{"type":30,"value":1865},"In addition to using the ",{"type":17,"tag":151,"props":1867,"children":1869},{"className":1868},[],[1870],{"type":30,"value":851},{"type":30,"value":1872}," and ",{"type":17,"tag":151,"props":1874,"children":1876},{"className":1875},[],[1877],{"type":30,"value":1878},"asarray()",{"type":30,"value":1880}," functions, we can also use the ",{"type":17,"tag":151,"props":1882,"children":1884},{"className":1883},[],[1885],{"type":30,"value":1843},{"type":30,"value":1872},{"type":17,"tag":151,"props":1888,"children":1890},{"className":1889},[],[1891],{"type":30,"value":1850},{"type":30,"value":1893}," functions to create ndarray objects. These two functions are typically used to create arrays of specified shapes but do not initialize the array elements.",{"type":17,"tag":35,"props":1895,"children":1896},{},[1897,1909],{"type":17,"tag":39,"props":1898,"children":1899},{},[1900,1902,1907],{"type":30,"value":1901},"The ",{"type":17,"tag":151,"props":1903,"children":1905},{"className":1904},[],[1906],{"type":30,"value":1843},{"type":30,"value":1908}," function creates an array of a specified shape with uninitialized elements, meaning the elements will have random values.",{"type":17,"tag":39,"props":1910,"children":1911},{},[1912,1913,1918],{"type":30,"value":1901},{"type":17,"tag":151,"props":1914,"children":1916},{"className":1915},[],[1917],{"type":30,"value":1850},{"type":30,"value":1919}," function creates an array of a specified shape with all elements initialized to 0.",{"type":17,"tag":22,"props":1921,"children":1922},{},[1923],{"type":30,"value":1924},"Their syntax is as follows:",{"type":17,"tag":676,"props":1926,"children":1928},{"className":678,"code":1927,"language":680,"meta":7,"style":7},"# empty() function\nnumpy.empty(shape, dtype=float, order='C')\n\n# zeros() function\nnumpy.zeros(shape, dtype=float, order='C')\n",[1929],{"type":17,"tag":151,"props":1930,"children":1931},{"__ignoreMap":7},[1932,1940,1981,1988,1996],{"type":17,"tag":26,"props":1933,"children":1934},{"class":687,"line":688},[1935],{"type":17,"tag":26,"props":1936,"children":1937},{"style":728},[1938],{"type":30,"value":1939},"# empty() function\n",{"type":17,"tag":26,"props":1941,"children":1942},{"class":687,"line":714},[1943,1948,1952,1956,1960,1964,1968,1972,1977],{"type":17,"tag":26,"props":1944,"children":1945},{"style":698},[1946],{"type":30,"value":1947},"numpy.empty(shape, ",{"type":17,"tag":26,"props":1949,"children":1950},{"style":894},[1951],{"type":30,"value":417},{"type":17,"tag":26,"props":1953,"children":1954},{"style":692},[1955],{"type":30,"value":745},{"type":17,"tag":26,"props":1957,"children":1958},{"style":883},[1959],{"type":30,"value":202},{"type":17,"tag":26,"props":1961,"children":1962},{"style":698},[1963],{"type":30,"value":891},{"type":17,"tag":26,"props":1965,"children":1966},{"style":894},[1967],{"type":30,"value":932},{"type":17,"tag":26,"props":1969,"children":1970},{"style":692},[1971],{"type":30,"value":745},{"type":17,"tag":26,"props":1973,"children":1974},{"style":753},[1975],{"type":30,"value":1976},"'C'",{"type":17,"tag":26,"props":1978,"children":1979},{"style":698},[1980],{"type":30,"value":981},{"type":17,"tag":26,"props":1982,"children":1983},{"class":687,"line":724},[1984],{"type":17,"tag":26,"props":1985,"children":1986},{"emptyLinePlaceholder":718},[1987],{"type":30,"value":721},{"type":17,"tag":26,"props":1989,"children":1990},{"class":687,"line":734},[1991],{"type":17,"tag":26,"props":1992,"children":1993},{"style":728},[1994],{"type":30,"value":1995},"# zeros() function\n",{"type":17,"tag":26,"props":1997,"children":1998},{"class":687,"line":1199},[1999,2004,2008,2012,2016,2020,2024,2028,2032],{"type":17,"tag":26,"props":2000,"children":2001},{"style":698},[2002],{"type":30,"value":2003},"numpy.zeros(shape, ",{"type":17,"tag":26,"props":2005,"children":2006},{"style":894},[2007],{"type":30,"value":417},{"type":17,"tag":26,"props":2009,"children":2010},{"style":692},[2011],{"type":30,"value":745},{"type":17,"tag":26,"props":2013,"children":2014},{"style":883},[2015],{"type":30,"value":202},{"type":17,"tag":26,"props":2017,"children":2018},{"style":698},[2019],{"type":30,"value":891},{"type":17,"tag":26,"props":2021,"children":2022},{"style":894},[2023],{"type":30,"value":932},{"type":17,"tag":26,"props":2025,"children":2026},{"style":692},[2027],{"type":30,"value":745},{"type":17,"tag":26,"props":2029,"children":2030},{"style":753},[2031],{"type":30,"value":1976},{"type":17,"tag":26,"props":2033,"children":2034},{"style":698},[2035],{"type":30,"value":981},{"type":17,"tag":22,"props":2037,"children":2038},{},[2039],{"type":30,"value":986},{"type":17,"tag":35,"props":2041,"children":2042},{},[2043,2054,2063],{"type":17,"tag":39,"props":2044,"children":2045},{},[2046,2052],{"type":17,"tag":151,"props":2047,"children":2049},{"className":2048},[],[2050],{"type":30,"value":2051},"shape",{"type":30,"value":2053},": The shape of the array, which can be an integer or a tuple of integers. For example, 5 represents a one-dimensional array, and (2, 3) represents a two-dimensional array with 2 rows and 3 columns.",{"type":17,"tag":39,"props":2055,"children":2056},{},[2057,2062],{"type":17,"tag":151,"props":2058,"children":2060},{"className":2059},[],[2061],{"type":30,"value":417},{"type":30,"value":1009},{"type":17,"tag":39,"props":2064,"children":2065},{},[2066,2071],{"type":17,"tag":151,"props":2067,"children":2069},{"className":2068},[],[2070],{"type":30,"value":932},{"type":30,"value":2072},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction).",{"type":17,"tag":22,"props":2074,"children":2075},{},[2076,2078,2083,2084,2089],{"type":30,"value":2077},"Below is an example of creating arrays using the ",{"type":17,"tag":151,"props":2079,"children":2081},{"className":2080},[],[2082],{"type":30,"value":1843},{"type":30,"value":1872},{"type":17,"tag":151,"props":2085,"children":2087},{"className":2086},[],[2088],{"type":30,"value":1850},{"type":30,"value":2090}," functions:",{"type":17,"tag":1097,"props":2092,"children":2093},{":editable":1099,":show-in-col":1099,"max-height":1100},[2094],{"type":17,"tag":676,"props":2095,"children":2097},{"className":678,"code":2096,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a 2x3 uninitialized array using the empty() function\nempty_array = np.empty((2, 3))\nprint(\"Array created using empty():\\n\", empty_array)\n\n# Create a 2x3 array with all elements as 0 using the zeros() function\nzeros_array = np.zeros((2, 3))\nprint(\"Array created using zeros():\\n\", zeros_array)\n",[2098],{"type":17,"tag":151,"props":2099,"children":2100},{"__ignoreMap":7},[2101,2120,2127,2135,2169,2200,2207,2215,2248],{"type":17,"tag":26,"props":2102,"children":2103},{"class":687,"line":688},[2104,2108,2112,2116],{"type":17,"tag":26,"props":2105,"children":2106},{"style":692},[2107],{"type":30,"value":695},{"type":17,"tag":26,"props":2109,"children":2110},{"style":698},[2111],{"type":30,"value":701},{"type":17,"tag":26,"props":2113,"children":2114},{"style":692},[2115],{"type":30,"value":706},{"type":17,"tag":26,"props":2117,"children":2118},{"style":698},[2119],{"type":30,"value":711},{"type":17,"tag":26,"props":2121,"children":2122},{"class":687,"line":714},[2123],{"type":17,"tag":26,"props":2124,"children":2125},{"emptyLinePlaceholder":718},[2126],{"type":30,"value":721},{"type":17,"tag":26,"props":2128,"children":2129},{"class":687,"line":724},[2130],{"type":17,"tag":26,"props":2131,"children":2132},{"style":728},[2133],{"type":30,"value":2134},"# Create a 2x3 uninitialized array using the empty() function\n",{"type":17,"tag":26,"props":2136,"children":2137},{"class":687,"line":734},[2138,2143,2147,2152,2156,2160,2164],{"type":17,"tag":26,"props":2139,"children":2140},{"style":698},[2141],{"type":30,"value":2142},"empty_array ",{"type":17,"tag":26,"props":2144,"children":2145},{"style":692},[2146],{"type":30,"value":745},{"type":17,"tag":26,"props":2148,"children":2149},{"style":698},[2150],{"type":30,"value":2151}," np.empty((",{"type":17,"tag":26,"props":2153,"children":2154},{"style":883},[2155],{"type":30,"value":1173},{"type":17,"tag":26,"props":2157,"children":2158},{"style":698},[2159],{"type":30,"value":891},{"type":17,"tag":26,"props":2161,"children":2162},{"style":883},[2163],{"type":30,"value":1182},{"type":17,"tag":26,"props":2165,"children":2166},{"style":698},[2167],{"type":30,"value":2168},"))\n",{"type":17,"tag":26,"props":2170,"children":2171},{"class":687,"line":1199},[2172,2176,2180,2185,2190,2195],{"type":17,"tag":26,"props":2173,"children":2174},{"style":883},[2175],{"type":30,"value":1205},{"type":17,"tag":26,"props":2177,"children":2178},{"style":698},[2179],{"type":30,"value":1223},{"type":17,"tag":26,"props":2181,"children":2182},{"style":753},[2183],{"type":30,"value":2184},"\"Array created using empty():",{"type":17,"tag":26,"props":2186,"children":2187},{"style":883},[2188],{"type":30,"value":2189},"\\n",{"type":17,"tag":26,"props":2191,"children":2192},{"style":753},[2193],{"type":30,"value":2194},"\"",{"type":17,"tag":26,"props":2196,"children":2197},{"style":698},[2198],{"type":30,"value":2199},", empty_array)\n",{"type":17,"tag":26,"props":2201,"children":2202},{"class":687,"line":1213},[2203],{"type":17,"tag":26,"props":2204,"children":2205},{"emptyLinePlaceholder":718},[2206],{"type":30,"value":721},{"type":17,"tag":26,"props":2208,"children":2209},{"class":687,"line":1352},[2210],{"type":17,"tag":26,"props":2211,"children":2212},{"style":728},[2213],{"type":30,"value":2214},"# Create a 2x3 array with all elements as 0 using the zeros() function\n",{"type":17,"tag":26,"props":2216,"children":2217},{"class":687,"line":11},[2218,2223,2227,2232,2236,2240,2244],{"type":17,"tag":26,"props":2219,"children":2220},{"style":698},[2221],{"type":30,"value":2222},"zeros_array ",{"type":17,"tag":26,"props":2224,"children":2225},{"style":692},[2226],{"type":30,"value":745},{"type":17,"tag":26,"props":2228,"children":2229},{"style":698},[2230],{"type":30,"value":2231}," np.zeros((",{"type":17,"tag":26,"props":2233,"children":2234},{"style":883},[2235],{"type":30,"value":1173},{"type":17,"tag":26,"props":2237,"children":2238},{"style":698},[2239],{"type":30,"value":891},{"type":17,"tag":26,"props":2241,"children":2242},{"style":883},[2243],{"type":30,"value":1182},{"type":17,"tag":26,"props":2245,"children":2246},{"style":698},[2247],{"type":30,"value":2168},{"type":17,"tag":26,"props":2249,"children":2251},{"class":687,"line":2250},9,[2252,2256,2260,2265,2269,2273],{"type":17,"tag":26,"props":2253,"children":2254},{"style":883},[2255],{"type":30,"value":1205},{"type":17,"tag":26,"props":2257,"children":2258},{"style":698},[2259],{"type":30,"value":1223},{"type":17,"tag":26,"props":2261,"children":2262},{"style":753},[2263],{"type":30,"value":2264},"\"Array created using zeros():",{"type":17,"tag":26,"props":2266,"children":2267},{"style":883},[2268],{"type":30,"value":2189},{"type":17,"tag":26,"props":2270,"children":2271},{"style":753},[2272],{"type":30,"value":2194},{"type":17,"tag":26,"props":2274,"children":2275},{"style":698},[2276],{"type":30,"value":2277},", zeros_array)\n",{"type":17,"tag":18,"props":2279,"children":2280},{},[2281],{"type":17,"tag":22,"props":2282,"children":2283},{},[2284,2288,2290,2295,2297,2303,2305,2310,2312,2317],{"type":17,"tag":26,"props":2285,"children":2286},{},[2287],{"type":30,"value":31},{"type":30,"value":2289},"\nIn addition to the ",{"type":17,"tag":151,"props":2291,"children":2293},{"className":2292},[],[2294],{"type":30,"value":1850},{"type":30,"value":2296}," function, Numpy also provides the ",{"type":17,"tag":151,"props":2298,"children":2300},{"className":2299},[],[2301],{"type":30,"value":2302},"ones()",{"type":30,"value":2304}," function to create an array of specified shape with all elements as 1. The syntax of the ",{"type":17,"tag":151,"props":2306,"children":2308},{"className":2307},[],[2309],{"type":30,"value":2302},{"type":30,"value":2311}," function is the same as that of the ",{"type":17,"tag":151,"props":2313,"children":2315},{"className":2314},[],[2316],{"type":30,"value":1850},{"type":30,"value":2318}," function, except that it initializes the array elements to 1.",{"type":17,"tag":22,"props":2320,"children":2321},{},[2322,2324,2329],{"type":30,"value":2323},"If you want more flexibility in initializing array elements, you can use the ",{"type":17,"tag":151,"props":2325,"children":2327},{"className":2326},[],[2328],{"type":30,"value":1858},{"type":30,"value":2330}," function, which allows you to specify the value to initialize the array elements. Its syntax is as follows:",{"type":17,"tag":676,"props":2332,"children":2334},{"className":678,"code":2333,"language":680,"meta":7,"style":7},"numpy.full(shape, fill_value, dtype=None, order='C')\n",[2335],{"type":17,"tag":151,"props":2336,"children":2337},{"__ignoreMap":7},[2338],{"type":17,"tag":26,"props":2339,"children":2340},{"class":687,"line":688},[2341,2346,2350,2354,2358,2362,2366,2370,2374],{"type":17,"tag":26,"props":2342,"children":2343},{"style":698},[2344],{"type":30,"value":2345},"numpy.full(shape, fill_value, ",{"type":17,"tag":26,"props":2347,"children":2348},{"style":894},[2349],{"type":30,"value":417},{"type":17,"tag":26,"props":2351,"children":2352},{"style":692},[2353],{"type":30,"value":745},{"type":17,"tag":26,"props":2355,"children":2356},{"style":883},[2357],{"type":30,"value":905},{"type":17,"tag":26,"props":2359,"children":2360},{"style":698},[2361],{"type":30,"value":891},{"type":17,"tag":26,"props":2363,"children":2364},{"style":894},[2365],{"type":30,"value":932},{"type":17,"tag":26,"props":2367,"children":2368},{"style":692},[2369],{"type":30,"value":745},{"type":17,"tag":26,"props":2371,"children":2372},{"style":753},[2373],{"type":30,"value":1976},{"type":17,"tag":26,"props":2375,"children":2376},{"style":698},[2377],{"type":30,"value":981},{"type":17,"tag":22,"props":2379,"children":2380},{},[2381],{"type":30,"value":986},{"type":17,"tag":35,"props":2383,"children":2384},{},[2385,2395,2406,2415],{"type":17,"tag":39,"props":2386,"children":2387},{},[2388,2393],{"type":17,"tag":151,"props":2389,"children":2391},{"className":2390},[],[2392],{"type":30,"value":2051},{"type":30,"value":2394},": The shape of the array, which can be an integer or a tuple of integers.",{"type":17,"tag":39,"props":2396,"children":2397},{},[2398,2404],{"type":17,"tag":151,"props":2399,"children":2401},{"className":2400},[],[2402],{"type":30,"value":2403},"fill_value",{"type":30,"value":2405},": The value to initialize the array elements.",{"type":17,"tag":39,"props":2407,"children":2408},{},[2409,2414],{"type":17,"tag":151,"props":2410,"children":2412},{"className":2411},[],[2413],{"type":30,"value":417},{"type":30,"value":1009},{"type":17,"tag":39,"props":2416,"children":2417},{},[2418,2423],{"type":17,"tag":151,"props":2419,"children":2421},{"className":2420},[],[2422],{"type":30,"value":932},{"type":30,"value":2072},{"type":17,"tag":22,"props":2425,"children":2426},{},[2427,2429,2434],{"type":30,"value":2428},"Below is an example of creating an array using the ",{"type":17,"tag":151,"props":2430,"children":2432},{"className":2431},[],[2433],{"type":30,"value":1858},{"type":30,"value":2435}," function:",{"type":17,"tag":676,"props":2437,"children":2439},{"className":678,"code":2438,"language":680,"meta":7,"style":7},"import numpy as np\n# Create a 2x3 array with all elements as 5 using the full() function\nfull_array = np.full((2, 3), 5)\nprint(\"Array created using full():\\n\", full_array)\n\n# Output\n# Array created using full()\n# [[5 5 5]\n# [5 5 5]]\n",[2440],{"type":17,"tag":151,"props":2441,"children":2442},{"__ignoreMap":7},[2443,2462,2470,2512,2541,2548,2555,2563,2571],{"type":17,"tag":26,"props":2444,"children":2445},{"class":687,"line":688},[2446,2450,2454,2458],{"type":17,"tag":26,"props":2447,"children":2448},{"style":692},[2449],{"type":30,"value":695},{"type":17,"tag":26,"props":2451,"children":2452},{"style":698},[2453],{"type":30,"value":701},{"type":17,"tag":26,"props":2455,"children":2456},{"style":692},[2457],{"type":30,"value":706},{"type":17,"tag":26,"props":2459,"children":2460},{"style":698},[2461],{"type":30,"value":711},{"type":17,"tag":26,"props":2463,"children":2464},{"class":687,"line":714},[2465],{"type":17,"tag":26,"props":2466,"children":2467},{"style":728},[2468],{"type":30,"value":2469},"# Create a 2x3 array with all elements as 5 using the full() function\n",{"type":17,"tag":26,"props":2471,"children":2472},{"class":687,"line":724},[2473,2478,2482,2487,2491,2495,2499,2504,2508],{"type":17,"tag":26,"props":2474,"children":2475},{"style":698},[2476],{"type":30,"value":2477},"full_array ",{"type":17,"tag":26,"props":2479,"children":2480},{"style":692},[2481],{"type":30,"value":745},{"type":17,"tag":26,"props":2483,"children":2484},{"style":698},[2485],{"type":30,"value":2486}," np.full((",{"type":17,"tag":26,"props":2488,"children":2489},{"style":883},[2490],{"type":30,"value":1173},{"type":17,"tag":26,"props":2492,"children":2493},{"style":698},[2494],{"type":30,"value":891},{"type":17,"tag":26,"props":2496,"children":2497},{"style":883},[2498],{"type":30,"value":1182},{"type":17,"tag":26,"props":2500,"children":2501},{"style":698},[2502],{"type":30,"value":2503},"), ",{"type":17,"tag":26,"props":2505,"children":2506},{"style":883},[2507],{"type":30,"value":1451},{"type":17,"tag":26,"props":2509,"children":2510},{"style":698},[2511],{"type":30,"value":981},{"type":17,"tag":26,"props":2513,"children":2514},{"class":687,"line":734},[2515,2519,2523,2528,2532,2536],{"type":17,"tag":26,"props":2516,"children":2517},{"style":883},[2518],{"type":30,"value":1205},{"type":17,"tag":26,"props":2520,"children":2521},{"style":698},[2522],{"type":30,"value":1223},{"type":17,"tag":26,"props":2524,"children":2525},{"style":753},[2526],{"type":30,"value":2527},"\"Array created using full():",{"type":17,"tag":26,"props":2529,"children":2530},{"style":883},[2531],{"type":30,"value":2189},{"type":17,"tag":26,"props":2533,"children":2534},{"style":753},[2535],{"type":30,"value":2194},{"type":17,"tag":26,"props":2537,"children":2538},{"style":698},[2539],{"type":30,"value":2540},", full_array)\n",{"type":17,"tag":26,"props":2542,"children":2543},{"class":687,"line":1199},[2544],{"type":17,"tag":26,"props":2545,"children":2546},{"emptyLinePlaceholder":718},[2547],{"type":30,"value":721},{"type":17,"tag":26,"props":2549,"children":2550},{"class":687,"line":1213},[2551],{"type":17,"tag":26,"props":2552,"children":2553},{"style":728},[2554],{"type":30,"value":1349},{"type":17,"tag":26,"props":2556,"children":2557},{"class":687,"line":1352},[2558],{"type":17,"tag":26,"props":2559,"children":2560},{"style":728},[2561],{"type":30,"value":2562},"# Array created using full()\n",{"type":17,"tag":26,"props":2564,"children":2565},{"class":687,"line":11},[2566],{"type":17,"tag":26,"props":2567,"children":2568},{"style":728},[2569],{"type":30,"value":2570},"# [[5 5 5]\n",{"type":17,"tag":26,"props":2572,"children":2573},{"class":687,"line":2250},[2574],{"type":17,"tag":26,"props":2575,"children":2576},{"style":728},[2577],{"type":30,"value":2578},"# [5 5 5]]\n",{"type":17,"tag":834,"props":2580,"children":2582},{"id":2581},"_2-creation-based-on-existing-arrays",[2583],{"type":30,"value":2584},"(2) Creation Based on Existing Arrays",{"type":17,"tag":22,"props":2586,"children":2587},{},[2588,2590,2595,2596,2601,2602,2607,2608,2613,2615,2621,2622,2628],{"type":30,"value":2589},"In addition to the ",{"type":17,"tag":151,"props":2591,"children":2593},{"className":2592},[],[2594],{"type":30,"value":1843},{"type":30,"value":891},{"type":17,"tag":151,"props":2597,"children":2599},{"className":2598},[],[2600],{"type":30,"value":1850},{"type":30,"value":891},{"type":17,"tag":151,"props":2603,"children":2605},{"className":2604},[],[2606],{"type":30,"value":2302},{"type":30,"value":1852},{"type":17,"tag":151,"props":2609,"children":2611},{"className":2610},[],[2612],{"type":30,"value":1858},{"type":30,"value":2614}," functions, Numpy also provides the ",{"type":17,"tag":151,"props":2616,"children":2618},{"className":2617},[],[2619],{"type":30,"value":2620},"zeros_like()",{"type":30,"value":1872},{"type":17,"tag":151,"props":2623,"children":2625},{"className":2624},[],[2626],{"type":30,"value":2627},"full_like()",{"type":30,"value":2629}," functions to create arrays of the same shape as a specified array, with all elements initialized to 0 or a specified value. The syntax of these two functions is as follows:",{"type":17,"tag":676,"props":2631,"children":2633},{"className":678,"code":2632,"language":680,"meta":7,"style":7},"# zeros_like() function\nnumpy.zeros_like(a, dtype=None, order='K', subok=True)\n\n# full_like() function\nnumpy.full_like(a, fill_value, dtype=None, order='K', subok=True)\n",[2634],{"type":17,"tag":151,"props":2635,"children":2636},{"__ignoreMap":7},[2637,2645,2702,2709,2717],{"type":17,"tag":26,"props":2638,"children":2639},{"class":687,"line":688},[2640],{"type":17,"tag":26,"props":2641,"children":2642},{"style":728},[2643],{"type":30,"value":2644},"# zeros_like() function\n",{"type":17,"tag":26,"props":2646,"children":2647},{"class":687,"line":714},[2648,2653,2657,2661,2665,2669,2673,2677,2682,2686,2690,2694,2698],{"type":17,"tag":26,"props":2649,"children":2650},{"style":698},[2651],{"type":30,"value":2652},"numpy.zeros_like(a, ",{"type":17,"tag":26,"props":2654,"children":2655},{"style":894},[2656],{"type":30,"value":417},{"type":17,"tag":26,"props":2658,"children":2659},{"style":692},[2660],{"type":30,"value":745},{"type":17,"tag":26,"props":2662,"children":2663},{"style":883},[2664],{"type":30,"value":905},{"type":17,"tag":26,"props":2666,"children":2667},{"style":698},[2668],{"type":30,"value":891},{"type":17,"tag":26,"props":2670,"children":2671},{"style":894},[2672],{"type":30,"value":932},{"type":17,"tag":26,"props":2674,"children":2675},{"style":692},[2676],{"type":30,"value":745},{"type":17,"tag":26,"props":2678,"children":2679},{"style":753},[2680],{"type":30,"value":2681},"'K'",{"type":17,"tag":26,"props":2683,"children":2684},{"style":698},[2685],{"type":30,"value":891},{"type":17,"tag":26,"props":2687,"children":2688},{"style":894},[2689],{"type":30,"value":949},{"type":17,"tag":26,"props":2691,"children":2692},{"style":692},[2693],{"type":30,"value":745},{"type":17,"tag":26,"props":2695,"children":2696},{"style":883},[2697],{"type":30,"value":923},{"type":17,"tag":26,"props":2699,"children":2700},{"style":698},[2701],{"type":30,"value":981},{"type":17,"tag":26,"props":2703,"children":2704},{"class":687,"line":724},[2705],{"type":17,"tag":26,"props":2706,"children":2707},{"emptyLinePlaceholder":718},[2708],{"type":30,"value":721},{"type":17,"tag":26,"props":2710,"children":2711},{"class":687,"line":734},[2712],{"type":17,"tag":26,"props":2713,"children":2714},{"style":728},[2715],{"type":30,"value":2716},"# full_like() function\n",{"type":17,"tag":26,"props":2718,"children":2719},{"class":687,"line":1199},[2720,2725,2729,2733,2737,2741,2745,2749,2753,2757,2761,2765,2769],{"type":17,"tag":26,"props":2721,"children":2722},{"style":698},[2723],{"type":30,"value":2724},"numpy.full_like(a, fill_value, ",{"type":17,"tag":26,"props":2726,"children":2727},{"style":894},[2728],{"type":30,"value":417},{"type":17,"tag":26,"props":2730,"children":2731},{"style":692},[2732],{"type":30,"value":745},{"type":17,"tag":26,"props":2734,"children":2735},{"style":883},[2736],{"type":30,"value":905},{"type":17,"tag":26,"props":2738,"children":2739},{"style":698},[2740],{"type":30,"value":891},{"type":17,"tag":26,"props":2742,"children":2743},{"style":894},[2744],{"type":30,"value":932},{"type":17,"tag":26,"props":2746,"children":2747},{"style":692},[2748],{"type":30,"value":745},{"type":17,"tag":26,"props":2750,"children":2751},{"style":753},[2752],{"type":30,"value":2681},{"type":17,"tag":26,"props":2754,"children":2755},{"style":698},[2756],{"type":30,"value":891},{"type":17,"tag":26,"props":2758,"children":2759},{"style":894},[2760],{"type":30,"value":949},{"type":17,"tag":26,"props":2762,"children":2763},{"style":692},[2764],{"type":30,"value":745},{"type":17,"tag":26,"props":2766,"children":2767},{"style":883},[2768],{"type":30,"value":923},{"type":17,"tag":26,"props":2770,"children":2771},{"style":698},[2772],{"type":30,"value":981},{"type":17,"tag":22,"props":2774,"children":2775},{},[2776],{"type":30,"value":986},{"type":17,"tag":35,"props":2778,"children":2779},{},[2780,2790,2799,2808,2818],{"type":17,"tag":39,"props":2781,"children":2782},{},[2783,2788],{"type":17,"tag":151,"props":2784,"children":2786},{"className":2785},[],[2787],{"type":30,"value":48},{"type":30,"value":2789},": The input array, used to specify the shape of the new array.",{"type":17,"tag":39,"props":2791,"children":2792},{},[2793,2798],{"type":17,"tag":151,"props":2794,"children":2796},{"className":2795},[],[2797],{"type":30,"value":2403},{"type":30,"value":2405},{"type":17,"tag":39,"props":2800,"children":2801},{},[2802,2807],{"type":17,"tag":151,"props":2803,"children":2805},{"className":2804},[],[2806],{"type":30,"value":417},{"type":30,"value":1009},{"type":17,"tag":39,"props":2809,"children":2810},{},[2811,2816],{"type":17,"tag":151,"props":2812,"children":2814},{"className":2813},[],[2815],{"type":30,"value":932},{"type":30,"value":2817},": Order (optional), the style of creating the array. C row-major (row direction), F column-major (column direction), K to keep the memory layout order of the input array.",{"type":17,"tag":39,"props":2819,"children":2820},{},[2821,2826,2827,2832,2834,2839],{"type":17,"tag":151,"props":2822,"children":2824},{"className":2823},[],[2825],{"type":30,"value":949},{"type":30,"value":1053},{"type":17,"tag":151,"props":2828,"children":2830},{"className":2829},[],[2831],{"type":30,"value":923},{"type":30,"value":2833},", returns subclass array; if ",{"type":17,"tag":151,"props":2835,"children":2837},{"className":2836},[],[2838],{"type":30,"value":958},{"type":30,"value":2840},", returns base class array.",{"type":17,"tag":22,"props":2842,"children":2843},{},[2844,2845,2850,2851,2856],{"type":30,"value":2077},{"type":17,"tag":151,"props":2846,"children":2848},{"className":2847},[],[2849],{"type":30,"value":2620},{"type":30,"value":1872},{"type":17,"tag":151,"props":2852,"children":2854},{"className":2853},[],[2855],{"type":30,"value":2627},{"type":30,"value":2090},{"type":17,"tag":1097,"props":2858,"children":2859},{":editable":1099,":show-in-col":1099,"max-height":1100},[2860],{"type":17,"tag":676,"props":2861,"children":2863},{"className":678,"code":2862,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a sample array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Create an array of the same shape as 'a' with all elements as 0 using the zeros_like() function\nzeros_like_a = np.zeros_like(a)\nprint(\"Array of the same shape as 'a' with all elements as 0:\\n\", zeros_like_a)\n\n# Create an array of the same shape as 'a' with all elements as 7 using the full_like() function\nfull_like_a = np.full_like(a, fill_value=7)\nprint(\"Array of the same shape as 'a' with all elements as 7:\\n\", full_like_a)\n",[2864],{"type":17,"tag":151,"props":2865,"children":2866},{"__ignoreMap":7},[2867,2886,2893,2901,2965,2972,2980,2997,3026,3033,3042,3077],{"type":17,"tag":26,"props":2868,"children":2869},{"class":687,"line":688},[2870,2874,2878,2882],{"type":17,"tag":26,"props":2871,"children":2872},{"style":692},[2873],{"type":30,"value":695},{"type":17,"tag":26,"props":2875,"children":2876},{"style":698},[2877],{"type":30,"value":701},{"type":17,"tag":26,"props":2879,"children":2880},{"style":692},[2881],{"type":30,"value":706},{"type":17,"tag":26,"props":2883,"children":2884},{"style":698},[2885],{"type":30,"value":711},{"type":17,"tag":26,"props":2887,"children":2888},{"class":687,"line":714},[2889],{"type":17,"tag":26,"props":2890,"children":2891},{"emptyLinePlaceholder":718},[2892],{"type":30,"value":721},{"type":17,"tag":26,"props":2894,"children":2895},{"class":687,"line":724},[2896],{"type":17,"tag":26,"props":2897,"children":2898},{"style":728},[2899],{"type":30,"value":2900},"# Create a sample array\n",{"type":17,"tag":26,"props":2902,"children":2903},{"class":687,"line":734},[2904,2909,2913,2917,2921,2925,2929,2933,2937,2941,2945,2949,2953,2957,2961],{"type":17,"tag":26,"props":2905,"children":2906},{"style":698},[2907],{"type":30,"value":2908},"a ",{"type":17,"tag":26,"props":2910,"children":2911},{"style":692},[2912],{"type":30,"value":745},{"type":17,"tag":26,"props":2914,"children":2915},{"style":698},[2916],{"type":30,"value":1413},{"type":17,"tag":26,"props":2918,"children":2919},{"style":883},[2920],{"type":30,"value":1164},{"type":17,"tag":26,"props":2922,"children":2923},{"style":698},[2924],{"type":30,"value":891},{"type":17,"tag":26,"props":2926,"children":2927},{"style":883},[2928],{"type":30,"value":1173},{"type":17,"tag":26,"props":2930,"children":2931},{"style":698},[2932],{"type":30,"value":891},{"type":17,"tag":26,"props":2934,"children":2935},{"style":883},[2936],{"type":30,"value":1182},{"type":17,"tag":26,"props":2938,"children":2939},{"style":698},[2940],{"type":30,"value":1438},{"type":17,"tag":26,"props":2942,"children":2943},{"style":883},[2944],{"type":30,"value":1191},{"type":17,"tag":26,"props":2946,"children":2947},{"style":698},[2948],{"type":30,"value":891},{"type":17,"tag":26,"props":2950,"children":2951},{"style":883},[2952],{"type":30,"value":1451},{"type":17,"tag":26,"props":2954,"children":2955},{"style":698},[2956],{"type":30,"value":891},{"type":17,"tag":26,"props":2958,"children":2959},{"style":883},[2960],{"type":30,"value":1460},{"type":17,"tag":26,"props":2962,"children":2963},{"style":698},[2964],{"type":30,"value":1465},{"type":17,"tag":26,"props":2966,"children":2967},{"class":687,"line":1199},[2968],{"type":17,"tag":26,"props":2969,"children":2970},{"emptyLinePlaceholder":718},[2971],{"type":30,"value":721},{"type":17,"tag":26,"props":2973,"children":2974},{"class":687,"line":1213},[2975],{"type":17,"tag":26,"props":2976,"children":2977},{"style":728},[2978],{"type":30,"value":2979},"# Create an array of the same shape as 'a' with all elements as 0 using the zeros_like() function\n",{"type":17,"tag":26,"props":2981,"children":2982},{"class":687,"line":1352},[2983,2988,2992],{"type":17,"tag":26,"props":2984,"children":2985},{"style":698},[2986],{"type":30,"value":2987},"zeros_like_a ",{"type":17,"tag":26,"props":2989,"children":2990},{"style":692},[2991],{"type":30,"value":745},{"type":17,"tag":26,"props":2993,"children":2994},{"style":698},[2995],{"type":30,"value":2996}," np.zeros_like(a)\n",{"type":17,"tag":26,"props":2998,"children":2999},{"class":687,"line":11},[3000,3004,3008,3013,3017,3021],{"type":17,"tag":26,"props":3001,"children":3002},{"style":883},[3003],{"type":30,"value":1205},{"type":17,"tag":26,"props":3005,"children":3006},{"style":698},[3007],{"type":30,"value":1223},{"type":17,"tag":26,"props":3009,"children":3010},{"style":753},[3011],{"type":30,"value":3012},"\"Array of the same shape as 'a' with all elements as 0:",{"type":17,"tag":26,"props":3014,"children":3015},{"style":883},[3016],{"type":30,"value":2189},{"type":17,"tag":26,"props":3018,"children":3019},{"style":753},[3020],{"type":30,"value":2194},{"type":17,"tag":26,"props":3022,"children":3023},{"style":698},[3024],{"type":30,"value":3025},", zeros_like_a)\n",{"type":17,"tag":26,"props":3027,"children":3028},{"class":687,"line":2250},[3029],{"type":17,"tag":26,"props":3030,"children":3031},{"emptyLinePlaceholder":718},[3032],{"type":30,"value":721},{"type":17,"tag":26,"props":3034,"children":3036},{"class":687,"line":3035},10,[3037],{"type":17,"tag":26,"props":3038,"children":3039},{"style":728},[3040],{"type":30,"value":3041},"# Create an array of the same shape as 'a' with all elements as 7 using the full_like() function\n",{"type":17,"tag":26,"props":3043,"children":3045},{"class":687,"line":3044},11,[3046,3051,3055,3060,3064,3068,3073],{"type":17,"tag":26,"props":3047,"children":3048},{"style":698},[3049],{"type":30,"value":3050},"full_like_a ",{"type":17,"tag":26,"props":3052,"children":3053},{"style":692},[3054],{"type":30,"value":745},{"type":17,"tag":26,"props":3056,"children":3057},{"style":698},[3058],{"type":30,"value":3059}," np.full_like(a, ",{"type":17,"tag":26,"props":3061,"children":3062},{"style":894},[3063],{"type":30,"value":2403},{"type":17,"tag":26,"props":3065,"children":3066},{"style":692},[3067],{"type":30,"value":745},{"type":17,"tag":26,"props":3069,"children":3070},{"style":883},[3071],{"type":30,"value":3072},"7",{"type":17,"tag":26,"props":3074,"children":3075},{"style":698},[3076],{"type":30,"value":981},{"type":17,"tag":26,"props":3078,"children":3080},{"class":687,"line":3079},12,[3081,3085,3089,3094,3098,3102],{"type":17,"tag":26,"props":3082,"children":3083},{"style":883},[3084],{"type":30,"value":1205},{"type":17,"tag":26,"props":3086,"children":3087},{"style":698},[3088],{"type":30,"value":1223},{"type":17,"tag":26,"props":3090,"children":3091},{"style":753},[3092],{"type":30,"value":3093},"\"Array of the same shape as 'a' with all elements as 7:",{"type":17,"tag":26,"props":3095,"children":3096},{"style":883},[3097],{"type":30,"value":2189},{"type":17,"tag":26,"props":3099,"children":3100},{"style":753},[3101],{"type":30,"value":2194},{"type":17,"tag":26,"props":3103,"children":3104},{"style":698},[3105],{"type":30,"value":3106},", full_like_a)\n",{"type":17,"tag":77,"props":3108,"children":3110},{"id":3109},"_3-case-study",[3111],{"type":30,"value":3112},"3. Case Study",{"type":17,"tag":22,"props":3114,"children":3115},{},[3116],{"type":30,"value":3117},"Practice creating ndarray objects based on the content in the link below:",{"type":17,"tag":22,"props":3119,"children":3120},{},[3121],{"type":17,"tag":48,"props":3122,"children":3125},{"href":3123,"rel":3124},"https://www.kaggle.com/code/zhaowenxi/numpy-for-python-1",[52],[3126],{"type":30,"value":3123},{"type":17,"tag":70,"props":3128,"children":3130},{"id":3129},"_3-properties-of-ndarray-objects",[3131],{"type":30,"value":3132},"3. Properties of ndarray Objects",{"type":17,"tag":22,"props":3134,"children":3135},{},[3136],{"type":30,"value":3137},"The number of dimensions of a Numpy array is called its rank. A one-dimensional array has a rank of 1, a two-dimensional array has a rank of 2, and so on. The shape of an array is called its dimension, and each dimension is called an axis. For example, the length of the first axis of a two-dimensional array is the number of rows, and the length of the second axis is the number of columns.",{"type":17,"tag":22,"props":3139,"children":3140},{},[3141],{"type":30,"value":3142},"The ndarray object in Numpy has the following important properties:",{"type":17,"tag":22,"props":3144,"children":3145},{},[3146],{"type":17,"tag":121,"props":3147,"children":3150},{"alt":3148,"src":3149},"ndarray 对象的属性","http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/ndarray%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%87%8D%E8%A6%81%E5%B1%9E%E6%80%A7en.png",[],{"type":17,"tag":35,"props":3152,"children":3153},{},[3154],{"type":17,"tag":39,"props":3155,"children":3156},{},[3157,3163,3165,3171,3173,3178],{"type":17,"tag":151,"props":3158,"children":3160},{"className":3159},[],[3161],{"type":30,"value":3162},"ndarray.ndim",{"type":30,"value":3164},": The number of dimensions (rank) of the array, representing the number of axes. For example, a two-dimensional array has an ",{"type":17,"tag":151,"props":3166,"children":3168},{"className":3167},[],[3169],{"type":30,"value":3170},"ndim",{"type":30,"value":3172}," of 2, and a three-dimensional array has an ",{"type":17,"tag":151,"props":3174,"children":3176},{"className":3175},[],[3177],{"type":30,"value":3170},{"type":30,"value":3179}," of 3.",{"type":17,"tag":676,"props":3181,"children":3183},{"className":678,"code":3182,"language":680,"meta":7,"style":7},"import numpy as np\na = np.array([[1, 2, 3], [4, 5, 6]])\nprint(a.ndim)\n\n# Output\n#2\n",[3184],{"type":17,"tag":151,"props":3185,"children":3186},{"__ignoreMap":7},[3187,3206,3269,3281,3288,3295],{"type":17,"tag":26,"props":3188,"children":3189},{"class":687,"line":688},[3190,3194,3198,3202],{"type":17,"tag":26,"props":3191,"children":3192},{"style":692},[3193],{"type":30,"value":695},{"type":17,"tag":26,"props":3195,"children":3196},{"style":698},[3197],{"type":30,"value":701},{"type":17,"tag":26,"props":3199,"children":3200},{"style":692},[3201],{"type":30,"value":706},{"type":17,"tag":26,"props":3203,"children":3204},{"style":698},[3205],{"type":30,"value":711},{"type":17,"tag":26,"props":3207,"children":3208},{"class":687,"line":714},[3209,3213,3217,3221,3225,3229,3233,3237,3241,3245,3249,3253,3257,3261,3265],{"type":17,"tag":26,"props":3210,"children":3211},{"style":698},[3212],{"type":30,"value":2908},{"type":17,"tag":26,"props":3214,"children":3215},{"style":692},[3216],{"type":30,"value":745},{"type":17,"tag":26,"props":3218,"children":3219},{"style":698},[3220],{"type":30,"value":1413},{"type":17,"tag":26,"props":3222,"children":3223},{"style":883},[3224],{"type":30,"value":1164},{"type":17,"tag":26,"props":3226,"children":3227},{"style":698},[3228],{"type":30,"value":891},{"type":17,"tag":26,"props":3230,"children":3231},{"style":883},[3232],{"type":30,"value":1173},{"type":17,"tag":26,"props":3234,"children":3235},{"style":698},[3236],{"type":30,"value":891},{"type":17,"tag":26,"props":3238,"children":3239},{"style":883},[3240],{"type":30,"value":1182},{"type":17,"tag":26,"props":3242,"children":3243},{"style":698},[3244],{"type":30,"value":1438},{"type":17,"tag":26,"props":3246,"children":3247},{"style":883},[3248],{"type":30,"value":1191},{"type":17,"tag":26,"props":3250,"children":3251},{"style":698},[3252],{"type":30,"value":891},{"type":17,"tag":26,"props":3254,"children":3255},{"style":883},[3256],{"type":30,"value":1451},{"type":17,"tag":26,"props":3258,"children":3259},{"style":698},[3260],{"type":30,"value":891},{"type":17,"tag":26,"props":3262,"children":3263},{"style":883},[3264],{"type":30,"value":1460},{"type":17,"tag":26,"props":3266,"children":3267},{"style":698},[3268],{"type":30,"value":1465},{"type":17,"tag":26,"props":3270,"children":3271},{"class":687,"line":724},[3272,3276],{"type":17,"tag":26,"props":3273,"children":3274},{"style":883},[3275],{"type":30,"value":1205},{"type":17,"tag":26,"props":3277,"children":3278},{"style":698},[3279],{"type":30,"value":3280},"(a.ndim)\n",{"type":17,"tag":26,"props":3282,"children":3283},{"class":687,"line":734},[3284],{"type":17,"tag":26,"props":3285,"children":3286},{"emptyLinePlaceholder":718},[3287],{"type":30,"value":721},{"type":17,"tag":26,"props":3289,"children":3290},{"class":687,"line":1199},[3291],{"type":17,"tag":26,"props":3292,"children":3293},{"style":728},[3294],{"type":30,"value":1349},{"type":17,"tag":26,"props":3296,"children":3297},{"class":687,"line":1213},[3298],{"type":17,"tag":26,"props":3299,"children":3300},{"style":728},[3301],{"type":30,"value":3302},"#2\n",{"type":17,"tag":35,"props":3304,"children":3305},{},[3306],{"type":17,"tag":39,"props":3307,"children":3308},{},[3309,3315,3317,3323,3325,3330,3332,3337,3339,3345],{"type":17,"tag":151,"props":3310,"children":3312},{"className":3311},[],[3313],{"type":30,"value":3314},"ndarray.shape",{"type":30,"value":3316},": The shape of the array, returning a tuple representing the size of the array in each dimension. For a two-dimensional array with ",{"type":17,"tag":151,"props":3318,"children":3320},{"className":3319},[],[3321],{"type":30,"value":3322},"n",{"type":30,"value":3324}," rows and ",{"type":17,"tag":151,"props":3326,"children":3328},{"className":3327},[],[3329],{"type":30,"value":542},{"type":30,"value":3331}," columns, ",{"type":17,"tag":151,"props":3333,"children":3335},{"className":3334},[],[3336],{"type":30,"value":2051},{"type":30,"value":3338}," returns ",{"type":17,"tag":151,"props":3340,"children":3342},{"className":3341},[],[3343],{"type":30,"value":3344},"(n, m)",{"type":30,"value":211},{"type":17,"tag":676,"props":3347,"children":3349},{"className":678,"code":3348,"language":680,"meta":7,"style":7},"print(a.shape) # Output: (2, 3)\n",[3350],{"type":17,"tag":151,"props":3351,"children":3352},{"__ignoreMap":7},[3353],{"type":17,"tag":26,"props":3354,"children":3355},{"class":687,"line":688},[3356,3360,3365],{"type":17,"tag":26,"props":3357,"children":3358},{"style":883},[3359],{"type":30,"value":1205},{"type":17,"tag":26,"props":3361,"children":3362},{"style":698},[3363],{"type":30,"value":3364},"(a.shape) ",{"type":17,"tag":26,"props":3366,"children":3367},{"style":728},[3368],{"type":30,"value":3369},"# Output: (2, 3)\n",{"type":17,"tag":35,"props":3371,"children":3372},{},[3373],{"type":17,"tag":39,"props":3374,"children":3375},{},[3376,3382,3384,3389,3391,3397,3398,3404,3406,3412],{"type":17,"tag":151,"props":3377,"children":3379},{"className":3378},[],[3380],{"type":30,"value":3381},"ndarray.size",{"type":30,"value":3383},": The total number of elements in the array, equal to the product of the sizes of all dimensions in the ",{"type":17,"tag":151,"props":3385,"children":3387},{"className":3386},[],[3388],{"type":30,"value":2051},{"type":30,"value":3390}," tuple. For an array with a shape of ",{"type":17,"tag":151,"props":3392,"children":3394},{"className":3393},[],[3395],{"type":30,"value":3396},"(2, 3)",{"type":30,"value":891},{"type":17,"tag":151,"props":3399,"children":3401},{"className":3400},[],[3402],{"type":30,"value":3403},"size",{"type":30,"value":3405}," is ",{"type":17,"tag":151,"props":3407,"children":3409},{"className":3408},[],[3410],{"type":30,"value":3411},"2 * 3 = 6",{"type":30,"value":211},{"type":17,"tag":676,"props":3414,"children":3416},{"className":678,"code":3415,"language":680,"meta":7,"style":7},"print(a.size) # Output: 6\n",[3417],{"type":17,"tag":151,"props":3418,"children":3419},{"__ignoreMap":7},[3420],{"type":17,"tag":26,"props":3421,"children":3422},{"class":687,"line":688},[3423,3427,3432],{"type":17,"tag":26,"props":3424,"children":3425},{"style":883},[3426],{"type":30,"value":1205},{"type":17,"tag":26,"props":3428,"children":3429},{"style":698},[3430],{"type":30,"value":3431},"(a.size) ",{"type":17,"tag":26,"props":3433,"children":3434},{"style":728},[3435],{"type":30,"value":3436},"# Output: 6\n",{"type":17,"tag":35,"props":3438,"children":3439},{},[3440],{"type":17,"tag":39,"props":3441,"children":3442},{},[3443,3449,3451,3457,3458,3463],{"type":17,"tag":151,"props":3444,"children":3446},{"className":3445},[],[3447],{"type":30,"value":3448},"ndarray.dtype",{"type":30,"value":3450},": The data type of the elements in the array, such as ",{"type":17,"tag":151,"props":3452,"children":3454},{"className":3453},[],[3455],{"type":30,"value":3456},"int32",{"type":30,"value":891},{"type":17,"tag":151,"props":3459,"children":3461},{"className":3460},[],[3462],{"type":30,"value":376},{"type":30,"value":3464},", etc.",{"type":17,"tag":676,"props":3466,"children":3468},{"className":678,"code":3467,"language":680,"meta":7,"style":7},"print(a.dtype) # Output: int64\n",[3469],{"type":17,"tag":151,"props":3470,"children":3471},{"__ignoreMap":7},[3472],{"type":17,"tag":26,"props":3473,"children":3474},{"class":687,"line":688},[3475,3479,3484],{"type":17,"tag":26,"props":3476,"children":3477},{"style":883},[3478],{"type":30,"value":1205},{"type":17,"tag":26,"props":3480,"children":3481},{"style":698},[3482],{"type":30,"value":3483},"(a.dtype) ",{"type":17,"tag":26,"props":3485,"children":3486},{"style":728},[3487],{"type":30,"value":3488},"# Output: int64\n",{"type":17,"tag":22,"props":3490,"children":3491},{},[3492],{"type":30,"value":3493},"These are the common properties of the ndarray object, which can help us better understand the structure and characteristics of arrays.",{"type":17,"tag":70,"props":3495,"children":3497},{"id":3496},"_4-array-operations",[3498],{"type":30,"value":3499},"4. Array Operations",{"type":17,"tag":77,"props":3501,"children":3503},{"id":3502},"_1-operations-on-multi-dimensional-arrays",[3504],{"type":30,"value":3505},"1. Operations on Multi-dimensional Arrays",{"type":17,"tag":22,"props":3507,"children":3508},{},[3509],{"type":30,"value":3510},"Numpy provides many mathematical functions for performing operations on arrays. Here, we mainly introduce two types:",{"type":17,"tag":35,"props":3512,"children":3513},{},[3514,3519],{"type":17,"tag":39,"props":3515,"children":3516},{},[3517],{"type":30,"value":3518},"Arithmetic functions: Used to perform basic arithmetic operations such as addition, subtraction, multiplication, and division.",{"type":17,"tag":39,"props":3520,"children":3521},{},[3522],{"type":30,"value":3523},"Trigonometric functions: Used to perform trigonometric operations such as sin, cos, and tan.",{"type":17,"tag":834,"props":3525,"children":3527},{"id":3526},"_1-arithmetic-functions",[3528],{"type":30,"value":3529},"(1) Arithmetic Functions",{"type":17,"tag":22,"props":3531,"children":3532},{},[3533],{"type":30,"value":3534},"Numpy provides many arithmetic functions for performing basic arithmetic operations such as addition, subtraction, multiplication, and division. Below are some commonly used arithmetic functions:",{"type":17,"tag":35,"props":3536,"children":3537},{},[3538,3549,3560,3571,3582],{"type":17,"tag":39,"props":3539,"children":3540},{},[3541,3547],{"type":17,"tag":151,"props":3542,"children":3544},{"className":3543},[],[3545],{"type":30,"value":3546},"add()",{"type":30,"value":3548},": Used to perform addition.",{"type":17,"tag":39,"props":3550,"children":3551},{},[3552,3558],{"type":17,"tag":151,"props":3553,"children":3555},{"className":3554},[],[3556],{"type":30,"value":3557},"subtract()",{"type":30,"value":3559},": Used to perform subtraction.",{"type":17,"tag":39,"props":3561,"children":3562},{},[3563,3569],{"type":17,"tag":151,"props":3564,"children":3566},{"className":3565},[],[3567],{"type":30,"value":3568},"multiply()",{"type":30,"value":3570},": Used to perform multiplication.",{"type":17,"tag":39,"props":3572,"children":3573},{},[3574,3580],{"type":17,"tag":151,"props":3575,"children":3577},{"className":3576},[],[3578],{"type":30,"value":3579},"divide()",{"type":30,"value":3581},": Used to perform division.",{"type":17,"tag":39,"props":3583,"children":3584},{},[3585,3591],{"type":17,"tag":151,"props":3586,"children":3588},{"className":3587},[],[3589],{"type":30,"value":3590},"power()",{"type":30,"value":3592},": Used to perform exponentiation.",{"type":17,"tag":22,"props":3594,"children":3595},{},[3596],{"type":30,"value":3597},"Below are examples of these arithmetic functions. First, we need to define two arrays for demonstration:",{"type":17,"tag":1097,"props":3599,"children":3600},{":editable":1099,":show-in-col":1099,"max-height":1100},[3601],{"type":17,"tag":676,"props":3602,"children":3604},{"className":678,"code":3603,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Define two arrays for demonstration\narray1 = np.array([10, 20, 30, 40])\narray2 = np.array([2, 4, 5, 8])\n",[3605],{"type":17,"tag":151,"props":3606,"children":3607},{"__ignoreMap":7},[3608,3627,3634,3642,3693],{"type":17,"tag":26,"props":3609,"children":3610},{"class":687,"line":688},[3611,3615,3619,3623],{"type":17,"tag":26,"props":3612,"children":3613},{"style":692},[3614],{"type":30,"value":695},{"type":17,"tag":26,"props":3616,"children":3617},{"style":698},[3618],{"type":30,"value":701},{"type":17,"tag":26,"props":3620,"children":3621},{"style":692},[3622],{"type":30,"value":706},{"type":17,"tag":26,"props":3624,"children":3625},{"style":698},[3626],{"type":30,"value":711},{"type":17,"tag":26,"props":3628,"children":3629},{"class":687,"line":714},[3630],{"type":17,"tag":26,"props":3631,"children":3632},{"emptyLinePlaceholder":718},[3633],{"type":30,"value":721},{"type":17,"tag":26,"props":3635,"children":3636},{"class":687,"line":724},[3637],{"type":17,"tag":26,"props":3638,"children":3639},{"style":728},[3640],{"type":30,"value":3641},"# Define two arrays for demonstration\n",{"type":17,"tag":26,"props":3643,"children":3644},{"class":687,"line":734},[3645,3650,3654,3658,3663,3667,3672,3676,3680,3684,3689],{"type":17,"tag":26,"props":3646,"children":3647},{"style":698},[3648],{"type":30,"value":3649},"array1 ",{"type":17,"tag":26,"props":3651,"children":3652},{"style":692},[3653],{"type":30,"value":745},{"type":17,"tag":26,"props":3655,"children":3656},{"style":698},[3657],{"type":30,"value":1159},{"type":17,"tag":26,"props":3659,"children":3660},{"style":883},[3661],{"type":30,"value":3662},"10",{"type":17,"tag":26,"props":3664,"children":3665},{"style":698},[3666],{"type":30,"value":891},{"type":17,"tag":26,"props":3668,"children":3669},{"style":883},[3670],{"type":30,"value":3671},"20",{"type":17,"tag":26,"props":3673,"children":3674},{"style":698},[3675],{"type":30,"value":891},{"type":17,"tag":26,"props":3677,"children":3678},{"style":883},[3679],{"type":30,"value":1741},{"type":17,"tag":26,"props":3681,"children":3682},{"style":698},[3683],{"type":30,"value":891},{"type":17,"tag":26,"props":3685,"children":3686},{"style":883},[3687],{"type":30,"value":3688},"40",{"type":17,"tag":26,"props":3690,"children":3691},{"style":698},[3692],{"type":30,"value":1196},{"type":17,"tag":26,"props":3694,"children":3695},{"class":687,"line":1199},[3696,3701,3705,3709,3713,3717,3721,3725,3729,3733,3738],{"type":17,"tag":26,"props":3697,"children":3698},{"style":698},[3699],{"type":30,"value":3700},"array2 ",{"type":17,"tag":26,"props":3702,"children":3703},{"style":692},[3704],{"type":30,"value":745},{"type":17,"tag":26,"props":3706,"children":3707},{"style":698},[3708],{"type":30,"value":1159},{"type":17,"tag":26,"props":3710,"children":3711},{"style":883},[3712],{"type":30,"value":1173},{"type":17,"tag":26,"props":3714,"children":3715},{"style":698},[3716],{"type":30,"value":891},{"type":17,"tag":26,"props":3718,"children":3719},{"style":883},[3720],{"type":30,"value":1191},{"type":17,"tag":26,"props":3722,"children":3723},{"style":698},[3724],{"type":30,"value":891},{"type":17,"tag":26,"props":3726,"children":3727},{"style":883},[3728],{"type":30,"value":1451},{"type":17,"tag":26,"props":3730,"children":3731},{"style":698},[3732],{"type":30,"value":891},{"type":17,"tag":26,"props":3734,"children":3735},{"style":883},[3736],{"type":30,"value":3737},"8",{"type":17,"tag":26,"props":3739,"children":3740},{"style":698},[3741],{"type":30,"value":1196},{"type":17,"tag":99,"props":3743,"children":3744},{},[3745],{"type":17,"tag":39,"props":3746,"children":3747},{},[3748,3750,3755],{"type":30,"value":3749},"Addition: ",{"type":17,"tag":151,"props":3751,"children":3753},{"className":3752},[],[3754],{"type":30,"value":3546},{"type":30,"value":3756},", element-wise addition of array1 and array2",{"type":17,"tag":1097,"props":3758,"children":3759},{":editable":1099,":show-in-col":1099,"max-height":1100},[3760],{"type":17,"tag":676,"props":3761,"children":3763},{"className":678,"code":3762,"language":680,"meta":7,"style":7},"result_add = np.add(array1, array2)\nprint(\"Addition result:\", result_add)\n",[3764],{"type":17,"tag":151,"props":3765,"children":3766},{"__ignoreMap":7},[3767,3784],{"type":17,"tag":26,"props":3768,"children":3769},{"class":687,"line":688},[3770,3775,3779],{"type":17,"tag":26,"props":3771,"children":3772},{"style":698},[3773],{"type":30,"value":3774},"result_add ",{"type":17,"tag":26,"props":3776,"children":3777},{"style":692},[3778],{"type":30,"value":745},{"type":17,"tag":26,"props":3780,"children":3781},{"style":698},[3782],{"type":30,"value":3783}," np.add(array1, array2)\n",{"type":17,"tag":26,"props":3785,"children":3786},{"class":687,"line":714},[3787,3791,3795,3800],{"type":17,"tag":26,"props":3788,"children":3789},{"style":883},[3790],{"type":30,"value":1205},{"type":17,"tag":26,"props":3792,"children":3793},{"style":698},[3794],{"type":30,"value":1223},{"type":17,"tag":26,"props":3796,"children":3797},{"style":753},[3798],{"type":30,"value":3799},"\"Addition result:\"",{"type":17,"tag":26,"props":3801,"children":3802},{"style":698},[3803],{"type":30,"value":3804},", result_add)\n",{"type":17,"tag":99,"props":3806,"children":3807},{"start":714},[3808],{"type":17,"tag":39,"props":3809,"children":3810},{},[3811,3813,3818],{"type":30,"value":3812},"Subtraction: ",{"type":17,"tag":151,"props":3814,"children":3816},{"className":3815},[],[3817],{"type":30,"value":3557},{"type":30,"value":3819},", element-wise subtraction of array2 from array1",{"type":17,"tag":1097,"props":3821,"children":3822},{":editable":1099,":show-in-col":1099,"max-height":1100},[3823],{"type":17,"tag":676,"props":3824,"children":3826},{"className":678,"code":3825,"language":680,"meta":7,"style":7},"result_subtract = np.subtract(array1, array2)\nprint(\"Subtraction result:\", result_subtract)\n",[3827],{"type":17,"tag":151,"props":3828,"children":3829},{"__ignoreMap":7},[3830,3847],{"type":17,"tag":26,"props":3831,"children":3832},{"class":687,"line":688},[3833,3838,3842],{"type":17,"tag":26,"props":3834,"children":3835},{"style":698},[3836],{"type":30,"value":3837},"result_subtract ",{"type":17,"tag":26,"props":3839,"children":3840},{"style":692},[3841],{"type":30,"value":745},{"type":17,"tag":26,"props":3843,"children":3844},{"style":698},[3845],{"type":30,"value":3846}," np.subtract(array1, array2)\n",{"type":17,"tag":26,"props":3848,"children":3849},{"class":687,"line":714},[3850,3854,3858,3863],{"type":17,"tag":26,"props":3851,"children":3852},{"style":883},[3853],{"type":30,"value":1205},{"type":17,"tag":26,"props":3855,"children":3856},{"style":698},[3857],{"type":30,"value":1223},{"type":17,"tag":26,"props":3859,"children":3860},{"style":753},[3861],{"type":30,"value":3862},"\"Subtraction result:\"",{"type":17,"tag":26,"props":3864,"children":3865},{"style":698},[3866],{"type":30,"value":3867},", result_subtract)\n",{"type":17,"tag":99,"props":3869,"children":3870},{"start":724},[3871],{"type":17,"tag":39,"props":3872,"children":3873},{},[3874,3876,3881],{"type":30,"value":3875},"Multiplication: ",{"type":17,"tag":151,"props":3877,"children":3879},{"className":3878},[],[3880],{"type":30,"value":3568},{"type":30,"value":3882},", element-wise multiplication of array1 and array2",{"type":17,"tag":676,"props":3884,"children":3886},{"className":678,"code":3885,"language":680,"meta":7,"style":7},"result_multiply = np.multiply(array1, array2)\nprint(\"Multiplication result:\", result_multiply)\n\n# Output\n# Multiplication result: [ 20  80 150 320]\n",[3887],{"type":17,"tag":151,"props":3888,"children":3889},{"__ignoreMap":7},[3890,3907,3928,3935,3942],{"type":17,"tag":26,"props":3891,"children":3892},{"class":687,"line":688},[3893,3898,3902],{"type":17,"tag":26,"props":3894,"children":3895},{"style":698},[3896],{"type":30,"value":3897},"result_multiply ",{"type":17,"tag":26,"props":3899,"children":3900},{"style":692},[3901],{"type":30,"value":745},{"type":17,"tag":26,"props":3903,"children":3904},{"style":698},[3905],{"type":30,"value":3906}," np.multiply(array1, array2)\n",{"type":17,"tag":26,"props":3908,"children":3909},{"class":687,"line":714},[3910,3914,3918,3923],{"type":17,"tag":26,"props":3911,"children":3912},{"style":883},[3913],{"type":30,"value":1205},{"type":17,"tag":26,"props":3915,"children":3916},{"style":698},[3917],{"type":30,"value":1223},{"type":17,"tag":26,"props":3919,"children":3920},{"style":753},[3921],{"type":30,"value":3922},"\"Multiplication result:\"",{"type":17,"tag":26,"props":3924,"children":3925},{"style":698},[3926],{"type":30,"value":3927},", result_multiply)\n",{"type":17,"tag":26,"props":3929,"children":3930},{"class":687,"line":724},[3931],{"type":17,"tag":26,"props":3932,"children":3933},{"emptyLinePlaceholder":718},[3934],{"type":30,"value":721},{"type":17,"tag":26,"props":3936,"children":3937},{"class":687,"line":734},[3938],{"type":17,"tag":26,"props":3939,"children":3940},{"style":728},[3941],{"type":30,"value":1349},{"type":17,"tag":26,"props":3943,"children":3944},{"class":687,"line":1199},[3945],{"type":17,"tag":26,"props":3946,"children":3947},{"style":728},[3948],{"type":30,"value":3949},"# Multiplication result: [ 20  80 150 320]\n",{"type":17,"tag":99,"props":3951,"children":3952},{"start":734},[3953],{"type":17,"tag":39,"props":3954,"children":3955},{},[3956,3958,3963],{"type":30,"value":3957},"Division: ",{"type":17,"tag":151,"props":3959,"children":3961},{"className":3960},[],[3962],{"type":30,"value":3579},{"type":30,"value":3964},", element-wise division of array1 by array2, resulting in floating-point numbers",{"type":17,"tag":676,"props":3966,"children":3968},{"className":678,"code":3967,"language":680,"meta":7,"style":7},"result_divide = np.divide(array1, array2)\nprint(\"Division result:\", result_divide)\n\n# Output\n# Division result: [5. 5. 6. 5.]\n",[3969],{"type":17,"tag":151,"props":3970,"children":3971},{"__ignoreMap":7},[3972,3989,4010,4017,4024],{"type":17,"tag":26,"props":3973,"children":3974},{"class":687,"line":688},[3975,3980,3984],{"type":17,"tag":26,"props":3976,"children":3977},{"style":698},[3978],{"type":30,"value":3979},"result_divide ",{"type":17,"tag":26,"props":3981,"children":3982},{"style":692},[3983],{"type":30,"value":745},{"type":17,"tag":26,"props":3985,"children":3986},{"style":698},[3987],{"type":30,"value":3988}," np.divide(array1, array2)\n",{"type":17,"tag":26,"props":3990,"children":3991},{"class":687,"line":714},[3992,3996,4000,4005],{"type":17,"tag":26,"props":3993,"children":3994},{"style":883},[3995],{"type":30,"value":1205},{"type":17,"tag":26,"props":3997,"children":3998},{"style":698},[3999],{"type":30,"value":1223},{"type":17,"tag":26,"props":4001,"children":4002},{"style":753},[4003],{"type":30,"value":4004},"\"Division result:\"",{"type":17,"tag":26,"props":4006,"children":4007},{"style":698},[4008],{"type":30,"value":4009},", result_divide)\n",{"type":17,"tag":26,"props":4011,"children":4012},{"class":687,"line":724},[4013],{"type":17,"tag":26,"props":4014,"children":4015},{"emptyLinePlaceholder":718},[4016],{"type":30,"value":721},{"type":17,"tag":26,"props":4018,"children":4019},{"class":687,"line":734},[4020],{"type":17,"tag":26,"props":4021,"children":4022},{"style":728},[4023],{"type":30,"value":1349},{"type":17,"tag":26,"props":4025,"children":4026},{"class":687,"line":1199},[4027],{"type":17,"tag":26,"props":4028,"children":4029},{"style":728},[4030],{"type":30,"value":4031},"# Division result: [5. 5. 6. 5.]\n",{"type":17,"tag":99,"props":4033,"children":4034},{"start":1199},[4035],{"type":17,"tag":39,"props":4036,"children":4037},{},[4038,4040,4045],{"type":30,"value":4039},"Exponentiation: ",{"type":17,"tag":151,"props":4041,"children":4043},{"className":4042},[],[4044],{"type":30,"value":3590},{"type":30,"value":4046},", element-wise exponentiation with elements of array1 as the base and elements of array2 as the exponent",{"type":17,"tag":676,"props":4048,"children":4050},{"className":678,"code":4049,"language":680,"meta":7,"style":7},"result_power = np.power(array1, array2)\nprint(\"Exponentiation result:\", result_power)\n\n# Output\n# Exponentiation result: [          100        160000      24300000 6553600000000]\n",[4051],{"type":17,"tag":151,"props":4052,"children":4053},{"__ignoreMap":7},[4054,4071,4092,4099,4106],{"type":17,"tag":26,"props":4055,"children":4056},{"class":687,"line":688},[4057,4062,4066],{"type":17,"tag":26,"props":4058,"children":4059},{"style":698},[4060],{"type":30,"value":4061},"result_power ",{"type":17,"tag":26,"props":4063,"children":4064},{"style":692},[4065],{"type":30,"value":745},{"type":17,"tag":26,"props":4067,"children":4068},{"style":698},[4069],{"type":30,"value":4070}," np.power(array1, array2)\n",{"type":17,"tag":26,"props":4072,"children":4073},{"class":687,"line":714},[4074,4078,4082,4087],{"type":17,"tag":26,"props":4075,"children":4076},{"style":883},[4077],{"type":30,"value":1205},{"type":17,"tag":26,"props":4079,"children":4080},{"style":698},[4081],{"type":30,"value":1223},{"type":17,"tag":26,"props":4083,"children":4084},{"style":753},[4085],{"type":30,"value":4086},"\"Exponentiation result:\"",{"type":17,"tag":26,"props":4088,"children":4089},{"style":698},[4090],{"type":30,"value":4091},", result_power)\n",{"type":17,"tag":26,"props":4093,"children":4094},{"class":687,"line":724},[4095],{"type":17,"tag":26,"props":4096,"children":4097},{"emptyLinePlaceholder":718},[4098],{"type":30,"value":721},{"type":17,"tag":26,"props":4100,"children":4101},{"class":687,"line":734},[4102],{"type":17,"tag":26,"props":4103,"children":4104},{"style":728},[4105],{"type":30,"value":1349},{"type":17,"tag":26,"props":4107,"children":4108},{"class":687,"line":1199},[4109],{"type":17,"tag":26,"props":4110,"children":4111},{"style":728},[4112],{"type":30,"value":4113},"# Exponentiation result: [          100        160000      24300000 6553600000000]\n",{"type":17,"tag":834,"props":4115,"children":4117},{"id":4116},"_2-mathematical-functions",[4118],{"type":30,"value":4119},"(2) Mathematical Functions",{"type":17,"tag":22,"props":4121,"children":4122},{},[4123,4125,4131,4133,4139],{"type":30,"value":4124},"Numpy includes a large number of mathematical functions for performing various mathematical operations. Here are two commonly used mathematical functions: the sum function ",{"type":17,"tag":151,"props":4126,"children":4128},{"className":4127},[],[4129],{"type":30,"value":4130},"sum()",{"type":30,"value":4132}," and the rounding function ",{"type":17,"tag":151,"props":4134,"children":4136},{"className":4135},[],[4137],{"type":30,"value":4138},"around()",{"type":30,"value":211},{"type":17,"tag":99,"props":4141,"children":4142},{},[4143],{"type":17,"tag":39,"props":4144,"children":4145},{},[4146,4151],{"type":17,"tag":151,"props":4147,"children":4149},{"className":4148},[],[4150],{"type":30,"value":4130},{"type":30,"value":853},{"type":17,"tag":22,"props":4153,"children":4154},{},[4155,4156,4161],{"type":30,"value":1901},{"type":17,"tag":151,"props":4157,"children":4159},{"className":4158},[],[4160],{"type":30,"value":4130},{"type":30,"value":4162}," function is used to calculate the sum of elements in an array. Its syntax is as follows:",{"type":17,"tag":676,"props":4164,"children":4166},{"className":678,"code":4165,"language":680,"meta":7,"style":7},"numpy.sum(a, axis=None, dtype=None, keepdims=False)\n",[4167],{"type":17,"tag":151,"props":4168,"children":4169},{"__ignoreMap":7},[4170],{"type":17,"tag":26,"props":4171,"children":4172},{"class":687,"line":688},[4173,4178,4183,4187,4191,4195,4199,4203,4207,4211,4216,4220,4224],{"type":17,"tag":26,"props":4174,"children":4175},{"style":698},[4176],{"type":30,"value":4177},"numpy.sum(a, ",{"type":17,"tag":26,"props":4179,"children":4180},{"style":894},[4181],{"type":30,"value":4182},"axis",{"type":17,"tag":26,"props":4184,"children":4185},{"style":692},[4186],{"type":30,"value":745},{"type":17,"tag":26,"props":4188,"children":4189},{"style":883},[4190],{"type":30,"value":905},{"type":17,"tag":26,"props":4192,"children":4193},{"style":698},[4194],{"type":30,"value":891},{"type":17,"tag":26,"props":4196,"children":4197},{"style":894},[4198],{"type":30,"value":417},{"type":17,"tag":26,"props":4200,"children":4201},{"style":692},[4202],{"type":30,"value":745},{"type":17,"tag":26,"props":4204,"children":4205},{"style":883},[4206],{"type":30,"value":905},{"type":17,"tag":26,"props":4208,"children":4209},{"style":698},[4210],{"type":30,"value":891},{"type":17,"tag":26,"props":4212,"children":4213},{"style":894},[4214],{"type":30,"value":4215},"keepdims",{"type":17,"tag":26,"props":4217,"children":4218},{"style":692},[4219],{"type":30,"value":745},{"type":17,"tag":26,"props":4221,"children":4222},{"style":883},[4223],{"type":30,"value":958},{"type":17,"tag":26,"props":4225,"children":4226},{"style":698},[4227],{"type":30,"value":981},{"type":17,"tag":22,"props":4229,"children":4230},{},[4231],{"type":30,"value":986},{"type":17,"tag":35,"props":4233,"children":4234},{},[4235,4245,4262,4271],{"type":17,"tag":39,"props":4236,"children":4237},{},[4238,4243],{"type":17,"tag":151,"props":4239,"children":4241},{"className":4240},[],[4242],{"type":30,"value":48},{"type":30,"value":4244},": The input array.",{"type":17,"tag":39,"props":4246,"children":4247},{},[4248,4253,4255,4260],{"type":17,"tag":151,"props":4249,"children":4251},{"className":4250},[],[4252],{"type":30,"value":4182},{"type":30,"value":4254},": Specifies the axis along which to compute the sum. If ",{"type":17,"tag":151,"props":4256,"children":4258},{"className":4257},[],[4259],{"type":30,"value":905},{"type":30,"value":4261},", the sum of all elements is computed; if an integer, the sum along the specified axis is computed; if a tuple, the sum along multiple specified axes is computed.",{"type":17,"tag":39,"props":4263,"children":4264},{},[4265,4270],{"type":17,"tag":151,"props":4266,"children":4268},{"className":4267},[],[4269],{"type":30,"value":417},{"type":30,"value":1009},{"type":17,"tag":39,"props":4272,"children":4273},{},[4274,4279,4280,4285],{"type":17,"tag":151,"props":4275,"children":4277},{"className":4276},[],[4278],{"type":30,"value":4215},{"type":30,"value":1019},{"type":17,"tag":151,"props":4281,"children":4283},{"className":4282},[],[4284],{"type":30,"value":923},{"type":30,"value":4286},", the output array will have the same number of dimensions as the input array.",{"type":17,"tag":22,"props":4288,"children":4289},{},[4290,4292,4297],{"type":30,"value":4291},"Below is an example of using the ",{"type":17,"tag":151,"props":4293,"children":4295},{"className":4294},[],[4296],{"type":30,"value":4130},{"type":30,"value":4298}," function to calculate the sum of array elements:",{"type":17,"tag":1097,"props":4300,"children":4301},{":editable":1099,":show-in-col":1099,"max-height":1100},[4302],{"type":17,"tag":676,"props":4303,"children":4305},{"className":678,"code":4304,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a two-dimensional array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Calculate the sum of all elements\ntotal_sum = np.sum(a)\nprint(\"Sum of all elements:\", total_sum)\n\n# Calculate the sum of each column\ncolumn_sum = np.sum(a, axis=0)\nprint(\"Sum of each column:\", column_sum)\n\n# Calculate the sum of each row\nrow_sum = np.sum(a, axis=1)\nprint(\"Sum of each row:\", row_sum)\n",[4306],{"type":17,"tag":151,"props":4307,"children":4308},{"__ignoreMap":7},[4309,4328,4335,4342,4405,4412,4420,4437,4458,4465,4473,4506,4527,4535,4544,4577],{"type":17,"tag":26,"props":4310,"children":4311},{"class":687,"line":688},[4312,4316,4320,4324],{"type":17,"tag":26,"props":4313,"children":4314},{"style":692},[4315],{"type":30,"value":695},{"type":17,"tag":26,"props":4317,"children":4318},{"style":698},[4319],{"type":30,"value":701},{"type":17,"tag":26,"props":4321,"children":4322},{"style":692},[4323],{"type":30,"value":706},{"type":17,"tag":26,"props":4325,"children":4326},{"style":698},[4327],{"type":30,"value":711},{"type":17,"tag":26,"props":4329,"children":4330},{"class":687,"line":714},[4331],{"type":17,"tag":26,"props":4332,"children":4333},{"emptyLinePlaceholder":718},[4334],{"type":30,"value":721},{"type":17,"tag":26,"props":4336,"children":4337},{"class":687,"line":724},[4338],{"type":17,"tag":26,"props":4339,"children":4340},{"style":728},[4341],{"type":30,"value":1396},{"type":17,"tag":26,"props":4343,"children":4344},{"class":687,"line":734},[4345,4349,4353,4357,4361,4365,4369,4373,4377,4381,4385,4389,4393,4397,4401],{"type":17,"tag":26,"props":4346,"children":4347},{"style":698},[4348],{"type":30,"value":2908},{"type":17,"tag":26,"props":4350,"children":4351},{"style":692},[4352],{"type":30,"value":745},{"type":17,"tag":26,"props":4354,"children":4355},{"style":698},[4356],{"type":30,"value":1413},{"type":17,"tag":26,"props":4358,"children":4359},{"style":883},[4360],{"type":30,"value":1164},{"type":17,"tag":26,"props":4362,"children":4363},{"style":698},[4364],{"type":30,"value":891},{"type":17,"tag":26,"props":4366,"children":4367},{"style":883},[4368],{"type":30,"value":1173},{"type":17,"tag":26,"props":4370,"children":4371},{"style":698},[4372],{"type":30,"value":891},{"type":17,"tag":26,"props":4374,"children":4375},{"style":883},[4376],{"type":30,"value":1182},{"type":17,"tag":26,"props":4378,"children":4379},{"style":698},[4380],{"type":30,"value":1438},{"type":17,"tag":26,"props":4382,"children":4383},{"style":883},[4384],{"type":30,"value":1191},{"type":17,"tag":26,"props":4386,"children":4387},{"style":698},[4388],{"type":30,"value":891},{"type":17,"tag":26,"props":4390,"children":4391},{"style":883},[4392],{"type":30,"value":1451},{"type":17,"tag":26,"props":4394,"children":4395},{"style":698},[4396],{"type":30,"value":891},{"type":17,"tag":26,"props":4398,"children":4399},{"style":883},[4400],{"type":30,"value":1460},{"type":17,"tag":26,"props":4402,"children":4403},{"style":698},[4404],{"type":30,"value":1465},{"type":17,"tag":26,"props":4406,"children":4407},{"class":687,"line":1199},[4408],{"type":17,"tag":26,"props":4409,"children":4410},{"emptyLinePlaceholder":718},[4411],{"type":30,"value":721},{"type":17,"tag":26,"props":4413,"children":4414},{"class":687,"line":1213},[4415],{"type":17,"tag":26,"props":4416,"children":4417},{"style":728},[4418],{"type":30,"value":4419},"# Calculate the sum of all elements\n",{"type":17,"tag":26,"props":4421,"children":4422},{"class":687,"line":1352},[4423,4428,4432],{"type":17,"tag":26,"props":4424,"children":4425},{"style":698},[4426],{"type":30,"value":4427},"total_sum ",{"type":17,"tag":26,"props":4429,"children":4430},{"style":692},[4431],{"type":30,"value":745},{"type":17,"tag":26,"props":4433,"children":4434},{"style":698},[4435],{"type":30,"value":4436}," np.sum(a)\n",{"type":17,"tag":26,"props":4438,"children":4439},{"class":687,"line":11},[4440,4444,4448,4453],{"type":17,"tag":26,"props":4441,"children":4442},{"style":883},[4443],{"type":30,"value":1205},{"type":17,"tag":26,"props":4445,"children":4446},{"style":698},[4447],{"type":30,"value":1223},{"type":17,"tag":26,"props":4449,"children":4450},{"style":753},[4451],{"type":30,"value":4452},"\"Sum of all elements:\"",{"type":17,"tag":26,"props":4454,"children":4455},{"style":698},[4456],{"type":30,"value":4457},", total_sum)\n",{"type":17,"tag":26,"props":4459,"children":4460},{"class":687,"line":2250},[4461],{"type":17,"tag":26,"props":4462,"children":4463},{"emptyLinePlaceholder":718},[4464],{"type":30,"value":721},{"type":17,"tag":26,"props":4466,"children":4467},{"class":687,"line":3035},[4468],{"type":17,"tag":26,"props":4469,"children":4470},{"style":728},[4471],{"type":30,"value":4472},"# Calculate the sum of each column\n",{"type":17,"tag":26,"props":4474,"children":4475},{"class":687,"line":3044},[4476,4481,4485,4490,4494,4498,4502],{"type":17,"tag":26,"props":4477,"children":4478},{"style":698},[4479],{"type":30,"value":4480},"column_sum ",{"type":17,"tag":26,"props":4482,"children":4483},{"style":692},[4484],{"type":30,"value":745},{"type":17,"tag":26,"props":4486,"children":4487},{"style":698},[4488],{"type":30,"value":4489}," np.sum(a, ",{"type":17,"tag":26,"props":4491,"children":4492},{"style":894},[4493],{"type":30,"value":4182},{"type":17,"tag":26,"props":4495,"children":4496},{"style":692},[4497],{"type":30,"value":745},{"type":17,"tag":26,"props":4499,"children":4500},{"style":883},[4501],{"type":30,"value":976},{"type":17,"tag":26,"props":4503,"children":4504},{"style":698},[4505],{"type":30,"value":981},{"type":17,"tag":26,"props":4507,"children":4508},{"class":687,"line":3079},[4509,4513,4517,4522],{"type":17,"tag":26,"props":4510,"children":4511},{"style":883},[4512],{"type":30,"value":1205},{"type":17,"tag":26,"props":4514,"children":4515},{"style":698},[4516],{"type":30,"value":1223},{"type":17,"tag":26,"props":4518,"children":4519},{"style":753},[4520],{"type":30,"value":4521},"\"Sum of each column:\"",{"type":17,"tag":26,"props":4523,"children":4524},{"style":698},[4525],{"type":30,"value":4526},", column_sum)\n",{"type":17,"tag":26,"props":4528,"children":4530},{"class":687,"line":4529},13,[4531],{"type":17,"tag":26,"props":4532,"children":4533},{"emptyLinePlaceholder":718},[4534],{"type":30,"value":721},{"type":17,"tag":26,"props":4536,"children":4538},{"class":687,"line":4537},14,[4539],{"type":17,"tag":26,"props":4540,"children":4541},{"style":728},[4542],{"type":30,"value":4543},"# Calculate the sum of each row\n",{"type":17,"tag":26,"props":4545,"children":4547},{"class":687,"line":4546},15,[4548,4553,4557,4561,4565,4569,4573],{"type":17,"tag":26,"props":4549,"children":4550},{"style":698},[4551],{"type":30,"value":4552},"row_sum ",{"type":17,"tag":26,"props":4554,"children":4555},{"style":692},[4556],{"type":30,"value":745},{"type":17,"tag":26,"props":4558,"children":4559},{"style":698},[4560],{"type":30,"value":4489},{"type":17,"tag":26,"props":4562,"children":4563},{"style":894},[4564],{"type":30,"value":4182},{"type":17,"tag":26,"props":4566,"children":4567},{"style":692},[4568],{"type":30,"value":745},{"type":17,"tag":26,"props":4570,"children":4571},{"style":883},[4572],{"type":30,"value":1164},{"type":17,"tag":26,"props":4574,"children":4575},{"style":698},[4576],{"type":30,"value":981},{"type":17,"tag":26,"props":4578,"children":4580},{"class":687,"line":4579},16,[4581,4585,4589,4594],{"type":17,"tag":26,"props":4582,"children":4583},{"style":883},[4584],{"type":30,"value":1205},{"type":17,"tag":26,"props":4586,"children":4587},{"style":698},[4588],{"type":30,"value":1223},{"type":17,"tag":26,"props":4590,"children":4591},{"style":753},[4592],{"type":30,"value":4593},"\"Sum of each row:\"",{"type":17,"tag":26,"props":4595,"children":4596},{"style":698},[4597],{"type":30,"value":4598},", row_sum)\n",{"type":17,"tag":99,"props":4600,"children":4601},{"start":714},[4602],{"type":17,"tag":39,"props":4603,"children":4604},{},[4605,4610],{"type":17,"tag":151,"props":4606,"children":4608},{"className":4607},[],[4609],{"type":30,"value":4138},{"type":30,"value":853},{"type":17,"tag":22,"props":4612,"children":4613},{},[4614,4615,4620],{"type":30,"value":1901},{"type":17,"tag":151,"props":4616,"children":4618},{"className":4617},[],[4619],{"type":30,"value":4138},{"type":30,"value":4621}," function is used to round the elements in an array to the specified number of decimal places. Its syntax is as follows:",{"type":17,"tag":676,"props":4623,"children":4625},{"className":678,"code":4624,"language":680,"meta":7,"style":7},"numpy.around(a, decimals=0)\n",[4626],{"type":17,"tag":151,"props":4627,"children":4628},{"__ignoreMap":7},[4629],{"type":17,"tag":26,"props":4630,"children":4631},{"class":687,"line":688},[4632,4637,4642,4646,4650],{"type":17,"tag":26,"props":4633,"children":4634},{"style":698},[4635],{"type":30,"value":4636},"numpy.around(a, ",{"type":17,"tag":26,"props":4638,"children":4639},{"style":894},[4640],{"type":30,"value":4641},"decimals",{"type":17,"tag":26,"props":4643,"children":4644},{"style":692},[4645],{"type":30,"value":745},{"type":17,"tag":26,"props":4647,"children":4648},{"style":883},[4649],{"type":30,"value":976},{"type":17,"tag":26,"props":4651,"children":4652},{"style":698},[4653],{"type":30,"value":981},{"type":17,"tag":22,"props":4655,"children":4656},{},[4657],{"type":30,"value":986},{"type":17,"tag":35,"props":4659,"children":4660},{},[4661,4670],{"type":17,"tag":39,"props":4662,"children":4663},{},[4664,4669],{"type":17,"tag":151,"props":4665,"children":4667},{"className":4666},[],[4668],{"type":30,"value":48},{"type":30,"value":4244},{"type":17,"tag":39,"props":4671,"children":4672},{},[4673,4678],{"type":17,"tag":151,"props":4674,"children":4676},{"className":4675},[],[4677],{"type":30,"value":4641},{"type":30,"value":4679},": Specifies the number of decimal places. The default is 0, which means rounding to the nearest integer.",{"type":17,"tag":22,"props":4681,"children":4682},{},[4683,4684,4689],{"type":30,"value":4291},{"type":17,"tag":151,"props":4685,"children":4687},{"className":4686},[],[4688],{"type":30,"value":4138},{"type":30,"value":4690}," function to round the elements in an array to the specified number of decimal places:",{"type":17,"tag":1097,"props":4692,"children":4693},{":editable":1099,":show-in-col":1099,"max-height":1100},[4694],{"type":17,"tag":676,"props":4695,"children":4697},{"className":678,"code":4696,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create an array containing floating-point numbers\na = np.array([1.123, 2.456, 3.789, 4.101])\n\n# Round the elements to the nearest integer\nrounded_a = np.around(a)\nprint(\"Rounded to the nearest integer:\", rounded_a)\n\n# Round the elements to two decimal places\nrounded_a_2_decimals = np.around(a, decimals=2)\nprint(\"Rounded to two decimal places:\", rounded_a_2_decimals)\n",[4698],{"type":17,"tag":151,"props":4699,"children":4700},{"__ignoreMap":7},[4701,4720,4727,4735,4786,4793,4801,4818,4839,4846,4854,4887],{"type":17,"tag":26,"props":4702,"children":4703},{"class":687,"line":688},[4704,4708,4712,4716],{"type":17,"tag":26,"props":4705,"children":4706},{"style":692},[4707],{"type":30,"value":695},{"type":17,"tag":26,"props":4709,"children":4710},{"style":698},[4711],{"type":30,"value":701},{"type":17,"tag":26,"props":4713,"children":4714},{"style":692},[4715],{"type":30,"value":706},{"type":17,"tag":26,"props":4717,"children":4718},{"style":698},[4719],{"type":30,"value":711},{"type":17,"tag":26,"props":4721,"children":4722},{"class":687,"line":714},[4723],{"type":17,"tag":26,"props":4724,"children":4725},{"emptyLinePlaceholder":718},[4726],{"type":30,"value":721},{"type":17,"tag":26,"props":4728,"children":4729},{"class":687,"line":724},[4730],{"type":17,"tag":26,"props":4731,"children":4732},{"style":728},[4733],{"type":30,"value":4734},"# Create an array containing floating-point numbers\n",{"type":17,"tag":26,"props":4736,"children":4737},{"class":687,"line":734},[4738,4742,4746,4750,4755,4759,4764,4768,4773,4777,4782],{"type":17,"tag":26,"props":4739,"children":4740},{"style":698},[4741],{"type":30,"value":2908},{"type":17,"tag":26,"props":4743,"children":4744},{"style":692},[4745],{"type":30,"value":745},{"type":17,"tag":26,"props":4747,"children":4748},{"style":698},[4749],{"type":30,"value":1159},{"type":17,"tag":26,"props":4751,"children":4752},{"style":883},[4753],{"type":30,"value":4754},"1.123",{"type":17,"tag":26,"props":4756,"children":4757},{"style":698},[4758],{"type":30,"value":891},{"type":17,"tag":26,"props":4760,"children":4761},{"style":883},[4762],{"type":30,"value":4763},"2.456",{"type":17,"tag":26,"props":4765,"children":4766},{"style":698},[4767],{"type":30,"value":891},{"type":17,"tag":26,"props":4769,"children":4770},{"style":883},[4771],{"type":30,"value":4772},"3.789",{"type":17,"tag":26,"props":4774,"children":4775},{"style":698},[4776],{"type":30,"value":891},{"type":17,"tag":26,"props":4778,"children":4779},{"style":883},[4780],{"type":30,"value":4781},"4.101",{"type":17,"tag":26,"props":4783,"children":4784},{"style":698},[4785],{"type":30,"value":1196},{"type":17,"tag":26,"props":4787,"children":4788},{"class":687,"line":1199},[4789],{"type":17,"tag":26,"props":4790,"children":4791},{"emptyLinePlaceholder":718},[4792],{"type":30,"value":721},{"type":17,"tag":26,"props":4794,"children":4795},{"class":687,"line":1213},[4796],{"type":17,"tag":26,"props":4797,"children":4798},{"style":728},[4799],{"type":30,"value":4800},"# Round the elements to the nearest integer\n",{"type":17,"tag":26,"props":4802,"children":4803},{"class":687,"line":1352},[4804,4809,4813],{"type":17,"tag":26,"props":4805,"children":4806},{"style":698},[4807],{"type":30,"value":4808},"rounded_a ",{"type":17,"tag":26,"props":4810,"children":4811},{"style":692},[4812],{"type":30,"value":745},{"type":17,"tag":26,"props":4814,"children":4815},{"style":698},[4816],{"type":30,"value":4817}," np.around(a)\n",{"type":17,"tag":26,"props":4819,"children":4820},{"class":687,"line":11},[4821,4825,4829,4834],{"type":17,"tag":26,"props":4822,"children":4823},{"style":883},[4824],{"type":30,"value":1205},{"type":17,"tag":26,"props":4826,"children":4827},{"style":698},[4828],{"type":30,"value":1223},{"type":17,"tag":26,"props":4830,"children":4831},{"style":753},[4832],{"type":30,"value":4833},"\"Rounded to the nearest integer:\"",{"type":17,"tag":26,"props":4835,"children":4836},{"style":698},[4837],{"type":30,"value":4838},", rounded_a)\n",{"type":17,"tag":26,"props":4840,"children":4841},{"class":687,"line":2250},[4842],{"type":17,"tag":26,"props":4843,"children":4844},{"emptyLinePlaceholder":718},[4845],{"type":30,"value":721},{"type":17,"tag":26,"props":4847,"children":4848},{"class":687,"line":3035},[4849],{"type":17,"tag":26,"props":4850,"children":4851},{"style":728},[4852],{"type":30,"value":4853},"# Round the elements to two decimal places\n",{"type":17,"tag":26,"props":4855,"children":4856},{"class":687,"line":3044},[4857,4862,4866,4871,4875,4879,4883],{"type":17,"tag":26,"props":4858,"children":4859},{"style":698},[4860],{"type":30,"value":4861},"rounded_a_2_decimals ",{"type":17,"tag":26,"props":4863,"children":4864},{"style":692},[4865],{"type":30,"value":745},{"type":17,"tag":26,"props":4867,"children":4868},{"style":698},[4869],{"type":30,"value":4870}," np.around(a, ",{"type":17,"tag":26,"props":4872,"children":4873},{"style":894},[4874],{"type":30,"value":4641},{"type":17,"tag":26,"props":4876,"children":4877},{"style":692},[4878],{"type":30,"value":745},{"type":17,"tag":26,"props":4880,"children":4881},{"style":883},[4882],{"type":30,"value":1173},{"type":17,"tag":26,"props":4884,"children":4885},{"style":698},[4886],{"type":30,"value":981},{"type":17,"tag":26,"props":4888,"children":4889},{"class":687,"line":3079},[4890,4894,4898,4903],{"type":17,"tag":26,"props":4891,"children":4892},{"style":883},[4893],{"type":30,"value":1205},{"type":17,"tag":26,"props":4895,"children":4896},{"style":698},[4897],{"type":30,"value":1223},{"type":17,"tag":26,"props":4899,"children":4900},{"style":753},[4901],{"type":30,"value":4902},"\"Rounded to two decimal places:\"",{"type":17,"tag":26,"props":4904,"children":4905},{"style":698},[4906],{"type":30,"value":4907},", rounded_a_2_decimals)\n",{"type":17,"tag":77,"props":4909,"children":4911},{"id":4910},"_2-broadcasting",[4912],{"type":30,"value":4913},"2. Broadcasting",{"type":17,"tag":22,"props":4915,"children":4916},{},[4917],{"type":30,"value":4918},"Broadcasting is an important concept in Numpy that refers to arithmetic operations between arrays of different shapes. In broadcasting, Numpy automatically adjusts the shapes of the arrays so that they can be operated on together.",{"type":17,"tag":22,"props":4920,"children":4921},{},[4922,4924,4930],{"type":30,"value":4923},"If there are two arrays of the same shape (i.e., ",{"type":17,"tag":151,"props":4925,"children":4927},{"className":4926},[],[4928],{"type":30,"value":4929},"a.shape == b.shape",{"type":30,"value":4931},"), Numpy performs element-wise operations when computing them. For example, when performing addition on two arrays of the same shape, Numpy adds the corresponding elements of the two arrays to generate a new array.",{"type":17,"tag":22,"props":4933,"children":4934},{},[4935],{"type":30,"value":4936},"From the above example, we can see how to use Numpy to perform basic arithmetic operations on two arrays of the same shape. Each operation is performed element-wise, meaning that each element in the result array is obtained by performing the operation on the corresponding elements of the first and second arrays.",{"type":17,"tag":22,"props":4938,"children":4939},{},[4940],{"type":30,"value":4941},"However, more often than not, the shapes of the two arrays being operated on are not the same. In such cases, Numpy automatically adjusts the shapes of the arrays so that they can be operated on together. This mechanism is called \"broadcasting.\" Broadcasting involves broadcasting the smaller array to the size of the larger array so that their shapes match, and then performing element-wise operations.",{"type":17,"tag":22,"props":4943,"children":4944},{},[4945],{"type":30,"value":4946},"Below is an example of broadcasting:",{"type":17,"tag":1097,"props":4948,"children":4949},{":editable":1099,":show-in-col":1099,"max-height":1100},[4950],{"type":17,"tag":676,"props":4951,"children":4953},{"className":678,"code":4952,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a 2x3 array\na = np.array([[1, 2, 3], [4, 5, 6]])\n\n# Create a 1x3 array\nb = np.array([10, 20, 30])\n\n# Perform addition on the two arrays\nresult = a + b\n\nprint(\"Array a:\\n\", a)\nprint(\"Array b:\\n\", b)\nprint(\"Result of a + b:\\n\", result)\n",[4954],{"type":17,"tag":151,"props":4955,"children":4956},{"__ignoreMap":7},[4957,4976,4983,4991,5054,5061,5069,5109,5116,5124,5151,5158,5187,5216],{"type":17,"tag":26,"props":4958,"children":4959},{"class":687,"line":688},[4960,4964,4968,4972],{"type":17,"tag":26,"props":4961,"children":4962},{"style":692},[4963],{"type":30,"value":695},{"type":17,"tag":26,"props":4965,"children":4966},{"style":698},[4967],{"type":30,"value":701},{"type":17,"tag":26,"props":4969,"children":4970},{"style":692},[4971],{"type":30,"value":706},{"type":17,"tag":26,"props":4973,"children":4974},{"style":698},[4975],{"type":30,"value":711},{"type":17,"tag":26,"props":4977,"children":4978},{"class":687,"line":714},[4979],{"type":17,"tag":26,"props":4980,"children":4981},{"emptyLinePlaceholder":718},[4982],{"type":30,"value":721},{"type":17,"tag":26,"props":4984,"children":4985},{"class":687,"line":724},[4986],{"type":17,"tag":26,"props":4987,"children":4988},{"style":728},[4989],{"type":30,"value":4990},"# Create a 2x3 array\n",{"type":17,"tag":26,"props":4992,"children":4993},{"class":687,"line":734},[4994,4998,5002,5006,5010,5014,5018,5022,5026,5030,5034,5038,5042,5046,5050],{"type":17,"tag":26,"props":4995,"children":4996},{"style":698},[4997],{"type":30,"value":2908},{"type":17,"tag":26,"props":4999,"children":5000},{"style":692},[5001],{"type":30,"value":745},{"type":17,"tag":26,"props":5003,"children":5004},{"style":698},[5005],{"type":30,"value":1413},{"type":17,"tag":26,"props":5007,"children":5008},{"style":883},[5009],{"type":30,"value":1164},{"type":17,"tag":26,"props":5011,"children":5012},{"style":698},[5013],{"type":30,"value":891},{"type":17,"tag":26,"props":5015,"children":5016},{"style":883},[5017],{"type":30,"value":1173},{"type":17,"tag":26,"props":5019,"children":5020},{"style":698},[5021],{"type":30,"value":891},{"type":17,"tag":26,"props":5023,"children":5024},{"style":883},[5025],{"type":30,"value":1182},{"type":17,"tag":26,"props":5027,"children":5028},{"style":698},[5029],{"type":30,"value":1438},{"type":17,"tag":26,"props":5031,"children":5032},{"style":883},[5033],{"type":30,"value":1191},{"type":17,"tag":26,"props":5035,"children":5036},{"style":698},[5037],{"type":30,"value":891},{"type":17,"tag":26,"props":5039,"children":5040},{"style":883},[5041],{"type":30,"value":1451},{"type":17,"tag":26,"props":5043,"children":5044},{"style":698},[5045],{"type":30,"value":891},{"type":17,"tag":26,"props":5047,"children":5048},{"style":883},[5049],{"type":30,"value":1460},{"type":17,"tag":26,"props":5051,"children":5052},{"style":698},[5053],{"type":30,"value":1465},{"type":17,"tag":26,"props":5055,"children":5056},{"class":687,"line":1199},[5057],{"type":17,"tag":26,"props":5058,"children":5059},{"emptyLinePlaceholder":718},[5060],{"type":30,"value":721},{"type":17,"tag":26,"props":5062,"children":5063},{"class":687,"line":1213},[5064],{"type":17,"tag":26,"props":5065,"children":5066},{"style":728},[5067],{"type":30,"value":5068},"# Create a 1x3 array\n",{"type":17,"tag":26,"props":5070,"children":5071},{"class":687,"line":1352},[5072,5077,5081,5085,5089,5093,5097,5101,5105],{"type":17,"tag":26,"props":5073,"children":5074},{"style":698},[5075],{"type":30,"value":5076},"b ",{"type":17,"tag":26,"props":5078,"children":5079},{"style":692},[5080],{"type":30,"value":745},{"type":17,"tag":26,"props":5082,"children":5083},{"style":698},[5084],{"type":30,"value":1159},{"type":17,"tag":26,"props":5086,"children":5087},{"style":883},[5088],{"type":30,"value":3662},{"type":17,"tag":26,"props":5090,"children":5091},{"style":698},[5092],{"type":30,"value":891},{"type":17,"tag":26,"props":5094,"children":5095},{"style":883},[5096],{"type":30,"value":3671},{"type":17,"tag":26,"props":5098,"children":5099},{"style":698},[5100],{"type":30,"value":891},{"type":17,"tag":26,"props":5102,"children":5103},{"style":883},[5104],{"type":30,"value":1741},{"type":17,"tag":26,"props":5106,"children":5107},{"style":698},[5108],{"type":30,"value":1196},{"type":17,"tag":26,"props":5110,"children":5111},{"class":687,"line":11},[5112],{"type":17,"tag":26,"props":5113,"children":5114},{"emptyLinePlaceholder":718},[5115],{"type":30,"value":721},{"type":17,"tag":26,"props":5117,"children":5118},{"class":687,"line":2250},[5119],{"type":17,"tag":26,"props":5120,"children":5121},{"style":728},[5122],{"type":30,"value":5123},"# Perform addition on the two arrays\n",{"type":17,"tag":26,"props":5125,"children":5126},{"class":687,"line":3035},[5127,5132,5136,5141,5146],{"type":17,"tag":26,"props":5128,"children":5129},{"style":698},[5130],{"type":30,"value":5131},"result ",{"type":17,"tag":26,"props":5133,"children":5134},{"style":692},[5135],{"type":30,"value":745},{"type":17,"tag":26,"props":5137,"children":5138},{"style":698},[5139],{"type":30,"value":5140}," a ",{"type":17,"tag":26,"props":5142,"children":5143},{"style":692},[5144],{"type":30,"value":5145},"+",{"type":17,"tag":26,"props":5147,"children":5148},{"style":698},[5149],{"type":30,"value":5150}," b\n",{"type":17,"tag":26,"props":5152,"children":5153},{"class":687,"line":3044},[5154],{"type":17,"tag":26,"props":5155,"children":5156},{"emptyLinePlaceholder":718},[5157],{"type":30,"value":721},{"type":17,"tag":26,"props":5159,"children":5160},{"class":687,"line":3079},[5161,5165,5169,5174,5178,5182],{"type":17,"tag":26,"props":5162,"children":5163},{"style":883},[5164],{"type":30,"value":1205},{"type":17,"tag":26,"props":5166,"children":5167},{"style":698},[5168],{"type":30,"value":1223},{"type":17,"tag":26,"props":5170,"children":5171},{"style":753},[5172],{"type":30,"value":5173},"\"Array a:",{"type":17,"tag":26,"props":5175,"children":5176},{"style":883},[5177],{"type":30,"value":2189},{"type":17,"tag":26,"props":5179,"children":5180},{"style":753},[5181],{"type":30,"value":2194},{"type":17,"tag":26,"props":5183,"children":5184},{"style":698},[5185],{"type":30,"value":5186},", a)\n",{"type":17,"tag":26,"props":5188,"children":5189},{"class":687,"line":4529},[5190,5194,5198,5203,5207,5211],{"type":17,"tag":26,"props":5191,"children":5192},{"style":883},[5193],{"type":30,"value":1205},{"type":17,"tag":26,"props":5195,"children":5196},{"style":698},[5197],{"type":30,"value":1223},{"type":17,"tag":26,"props":5199,"children":5200},{"style":753},[5201],{"type":30,"value":5202},"\"Array b:",{"type":17,"tag":26,"props":5204,"children":5205},{"style":883},[5206],{"type":30,"value":2189},{"type":17,"tag":26,"props":5208,"children":5209},{"style":753},[5210],{"type":30,"value":2194},{"type":17,"tag":26,"props":5212,"children":5213},{"style":698},[5214],{"type":30,"value":5215},", b)\n",{"type":17,"tag":26,"props":5217,"children":5218},{"class":687,"line":4537},[5219,5223,5227,5232,5236,5240],{"type":17,"tag":26,"props":5220,"children":5221},{"style":883},[5222],{"type":30,"value":1205},{"type":17,"tag":26,"props":5224,"children":5225},{"style":698},[5226],{"type":30,"value":1223},{"type":17,"tag":26,"props":5228,"children":5229},{"style":753},[5230],{"type":30,"value":5231},"\"Result of a + b:",{"type":17,"tag":26,"props":5233,"children":5234},{"style":883},[5235],{"type":30,"value":2189},{"type":17,"tag":26,"props":5237,"children":5238},{"style":753},[5239],{"type":30,"value":2194},{"type":17,"tag":26,"props":5241,"children":5242},{"style":698},[5243],{"type":30,"value":5244},", result)\n",{"type":17,"tag":22,"props":5246,"children":5247},{},[5248],{"type":30,"value":5249},"The rules of broadcasting are as follows:",{"type":17,"tag":35,"props":5251,"children":5252},{},[5253,5258,5263],{"type":17,"tag":39,"props":5254,"children":5255},{},[5256],{"type":30,"value":5257},"Dimension matching: If the number of dimensions of the two arrays is different, the smaller array will have 1s prepended to its shape until the number of dimensions matches.",{"type":17,"tag":39,"props":5259,"children":5260},{},[5261],{"type":30,"value":5262},"Dimension compatibility: Starting from the last dimension, if the sizes of the two arrays are equal, or if one of the sizes is 1, the dimensions are considered compatible.",{"type":17,"tag":39,"props":5264,"children":5265},{},[5266],{"type":30,"value":5267},"Dimension expansion: If the shapes of the two arrays do not match in any dimension and neither dimension size is 1, an exception is raised.",{"type":17,"tag":22,"props":5269,"children":5270},{},[5271],{"type":17,"tag":121,"props":5272,"children":5275},{"alt":5273,"src":5274},"广播规则 en","http://szms-python-images.oss-cn-hangzhou.aliyuncs.com/Numpy/%E6%96%B0%E7%89%88%E8%84%91%E5%9B%BE/%E5%B9%BF%E6%92%AD%E8%A7%84%E5%88%99en.png",[],{"type":17,"tag":22,"props":5277,"children":5278},{},[5279],{"type":30,"value":5280},"In simple terms, for two arrays, if their shapes match in any dimension, or if one of the dimensions is 1, the arrays are considered compatible and can be broadcasted.",{"type":17,"tag":22,"props":5282,"children":5283},{},[5284],{"type":30,"value":5285},"Here are some examples to better understand the concept of broadcasting:",{"type":17,"tag":22,"props":5287,"children":5288},{},[5289],{"type":30,"value":5290},"Example 1: Adding a one-dimensional array to a two-dimensional array",{"type":17,"tag":676,"props":5292,"children":5294},{"className":678,"code":5293,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a 3x3 two-dimensional array\na = np.arange(9).reshape(3, 3)\n# Create a one-dimensional array\nb = np.arange(3)\n\n# Perform broadcasting addition\nc = a + b\n\n# Output the result\nprint(c)\n\n# Output\n# [[ 0  2  4]\n# [ 3  5  7]\n# [ 6  8 10]]\n",[5295],{"type":17,"tag":151,"props":5296,"children":5297},{"__ignoreMap":7},[5298,5317,5324,5332,5374,5382,5405,5412,5420,5444,5451,5459,5471,5478,5485,5493,5501],{"type":17,"tag":26,"props":5299,"children":5300},{"class":687,"line":688},[5301,5305,5309,5313],{"type":17,"tag":26,"props":5302,"children":5303},{"style":692},[5304],{"type":30,"value":695},{"type":17,"tag":26,"props":5306,"children":5307},{"style":698},[5308],{"type":30,"value":701},{"type":17,"tag":26,"props":5310,"children":5311},{"style":692},[5312],{"type":30,"value":706},{"type":17,"tag":26,"props":5314,"children":5315},{"style":698},[5316],{"type":30,"value":711},{"type":17,"tag":26,"props":5318,"children":5319},{"class":687,"line":714},[5320],{"type":17,"tag":26,"props":5321,"children":5322},{"emptyLinePlaceholder":718},[5323],{"type":30,"value":721},{"type":17,"tag":26,"props":5325,"children":5326},{"class":687,"line":724},[5327],{"type":17,"tag":26,"props":5328,"children":5329},{"style":728},[5330],{"type":30,"value":5331},"# Create a 3x3 two-dimensional array\n",{"type":17,"tag":26,"props":5333,"children":5334},{"class":687,"line":734},[5335,5339,5343,5348,5353,5358,5362,5366,5370],{"type":17,"tag":26,"props":5336,"children":5337},{"style":698},[5338],{"type":30,"value":2908},{"type":17,"tag":26,"props":5340,"children":5341},{"style":692},[5342],{"type":30,"value":745},{"type":17,"tag":26,"props":5344,"children":5345},{"style":698},[5346],{"type":30,"value":5347}," np.arange(",{"type":17,"tag":26,"props":5349,"children":5350},{"style":883},[5351],{"type":30,"value":5352},"9",{"type":17,"tag":26,"props":5354,"children":5355},{"style":698},[5356],{"type":30,"value":5357},").reshape(",{"type":17,"tag":26,"props":5359,"children":5360},{"style":883},[5361],{"type":30,"value":1182},{"type":17,"tag":26,"props":5363,"children":5364},{"style":698},[5365],{"type":30,"value":891},{"type":17,"tag":26,"props":5367,"children":5368},{"style":883},[5369],{"type":30,"value":1182},{"type":17,"tag":26,"props":5371,"children":5372},{"style":698},[5373],{"type":30,"value":981},{"type":17,"tag":26,"props":5375,"children":5376},{"class":687,"line":1199},[5377],{"type":17,"tag":26,"props":5378,"children":5379},{"style":728},[5380],{"type":30,"value":5381},"# Create a one-dimensional array\n",{"type":17,"tag":26,"props":5383,"children":5384},{"class":687,"line":1213},[5385,5389,5393,5397,5401],{"type":17,"tag":26,"props":5386,"children":5387},{"style":698},[5388],{"type":30,"value":5076},{"type":17,"tag":26,"props":5390,"children":5391},{"style":692},[5392],{"type":30,"value":745},{"type":17,"tag":26,"props":5394,"children":5395},{"style":698},[5396],{"type":30,"value":5347},{"type":17,"tag":26,"props":5398,"children":5399},{"style":883},[5400],{"type":30,"value":1182},{"type":17,"tag":26,"props":5402,"children":5403},{"style":698},[5404],{"type":30,"value":981},{"type":17,"tag":26,"props":5406,"children":5407},{"class":687,"line":1352},[5408],{"type":17,"tag":26,"props":5409,"children":5410},{"emptyLinePlaceholder":718},[5411],{"type":30,"value":721},{"type":17,"tag":26,"props":5413,"children":5414},{"class":687,"line":11},[5415],{"type":17,"tag":26,"props":5416,"children":5417},{"style":728},[5418],{"type":30,"value":5419},"# Perform broadcasting addition\n",{"type":17,"tag":26,"props":5421,"children":5422},{"class":687,"line":2250},[5423,5428,5432,5436,5440],{"type":17,"tag":26,"props":5424,"children":5425},{"style":698},[5426],{"type":30,"value":5427},"c ",{"type":17,"tag":26,"props":5429,"children":5430},{"style":692},[5431],{"type":30,"value":745},{"type":17,"tag":26,"props":5433,"children":5434},{"style":698},[5435],{"type":30,"value":5140},{"type":17,"tag":26,"props":5437,"children":5438},{"style":692},[5439],{"type":30,"value":5145},{"type":17,"tag":26,"props":5441,"children":5442},{"style":698},[5443],{"type":30,"value":5150},{"type":17,"tag":26,"props":5445,"children":5446},{"class":687,"line":3035},[5447],{"type":17,"tag":26,"props":5448,"children":5449},{"emptyLinePlaceholder":718},[5450],{"type":30,"value":721},{"type":17,"tag":26,"props":5452,"children":5453},{"class":687,"line":3044},[5454],{"type":17,"tag":26,"props":5455,"children":5456},{"style":728},[5457],{"type":30,"value":5458},"# Output the result\n",{"type":17,"tag":26,"props":5460,"children":5461},{"class":687,"line":3079},[5462,5466],{"type":17,"tag":26,"props":5463,"children":5464},{"style":883},[5465],{"type":30,"value":1205},{"type":17,"tag":26,"props":5467,"children":5468},{"style":698},[5469],{"type":30,"value":5470},"(c)\n",{"type":17,"tag":26,"props":5472,"children":5473},{"class":687,"line":4529},[5474],{"type":17,"tag":26,"props":5475,"children":5476},{"emptyLinePlaceholder":718},[5477],{"type":30,"value":721},{"type":17,"tag":26,"props":5479,"children":5480},{"class":687,"line":4537},[5481],{"type":17,"tag":26,"props":5482,"children":5483},{"style":728},[5484],{"type":30,"value":1349},{"type":17,"tag":26,"props":5486,"children":5487},{"class":687,"line":4546},[5488],{"type":17,"tag":26,"props":5489,"children":5490},{"style":728},[5491],{"type":30,"value":5492},"# [[ 0  2  4]\n",{"type":17,"tag":26,"props":5494,"children":5495},{"class":687,"line":4579},[5496],{"type":17,"tag":26,"props":5497,"children":5498},{"style":728},[5499],{"type":30,"value":5500},"# [ 3  5  7]\n",{"type":17,"tag":26,"props":5502,"children":5504},{"class":687,"line":5503},17,[5505],{"type":17,"tag":26,"props":5506,"children":5507},{"style":728},[5508],{"type":30,"value":5509},"# [ 6  8 10]]\n",{"type":17,"tag":22,"props":5511,"children":5512},{},[5513,5515,5520,5522,5527,5529,5534],{"type":30,"value":5514},"In this example, ",{"type":17,"tag":151,"props":5516,"children":5518},{"className":5517},[],[5519],{"type":30,"value":457},{"type":30,"value":5521}," is a one-dimensional array with a shape of (3,). It is broadcasted to each row of ",{"type":17,"tag":151,"props":5523,"children":5525},{"className":5524},[],[5526],{"type":30,"value":48},{"type":30,"value":5528},", so that each element is added to the corresponding element in ",{"type":17,"tag":151,"props":5530,"children":5532},{"className":5531},[],[5533],{"type":30,"value":457},{"type":30,"value":211},{"type":17,"tag":22,"props":5536,"children":5537},{},[5538],{"type":30,"value":5539},"Example 2: Adding a scalar to an array",{"type":17,"tag":676,"props":5541,"children":5543},{"className":678,"code":5542,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a one-dimensional array\na = np.array([1, 2, 3])\n\n# Add the scalar 2 to the array\nb = a + 2\n\n# Output the result\nprint(b)\n\n# Output\n# [3 4 5]\n",[5544],{"type":17,"tag":151,"props":5545,"children":5546},{"__ignoreMap":7},[5547,5566,5573,5580,5619,5626,5634,5658,5665,5672,5684,5691,5698],{"type":17,"tag":26,"props":5548,"children":5549},{"class":687,"line":688},[5550,5554,5558,5562],{"type":17,"tag":26,"props":5551,"children":5552},{"style":692},[5553],{"type":30,"value":695},{"type":17,"tag":26,"props":5555,"children":5556},{"style":698},[5557],{"type":30,"value":701},{"type":17,"tag":26,"props":5559,"children":5560},{"style":692},[5561],{"type":30,"value":706},{"type":17,"tag":26,"props":5563,"children":5564},{"style":698},[5565],{"type":30,"value":711},{"type":17,"tag":26,"props":5567,"children":5568},{"class":687,"line":714},[5569],{"type":17,"tag":26,"props":5570,"children":5571},{"emptyLinePlaceholder":718},[5572],{"type":30,"value":721},{"type":17,"tag":26,"props":5574,"children":5575},{"class":687,"line":724},[5576],{"type":17,"tag":26,"props":5577,"children":5578},{"style":728},[5579],{"type":30,"value":5381},{"type":17,"tag":26,"props":5581,"children":5582},{"class":687,"line":734},[5583,5587,5591,5595,5599,5603,5607,5611,5615],{"type":17,"tag":26,"props":5584,"children":5585},{"style":698},[5586],{"type":30,"value":2908},{"type":17,"tag":26,"props":5588,"children":5589},{"style":692},[5590],{"type":30,"value":745},{"type":17,"tag":26,"props":5592,"children":5593},{"style":698},[5594],{"type":30,"value":1159},{"type":17,"tag":26,"props":5596,"children":5597},{"style":883},[5598],{"type":30,"value":1164},{"type":17,"tag":26,"props":5600,"children":5601},{"style":698},[5602],{"type":30,"value":891},{"type":17,"tag":26,"props":5604,"children":5605},{"style":883},[5606],{"type":30,"value":1173},{"type":17,"tag":26,"props":5608,"children":5609},{"style":698},[5610],{"type":30,"value":891},{"type":17,"tag":26,"props":5612,"children":5613},{"style":883},[5614],{"type":30,"value":1182},{"type":17,"tag":26,"props":5616,"children":5617},{"style":698},[5618],{"type":30,"value":1196},{"type":17,"tag":26,"props":5620,"children":5621},{"class":687,"line":1199},[5622],{"type":17,"tag":26,"props":5623,"children":5624},{"emptyLinePlaceholder":718},[5625],{"type":30,"value":721},{"type":17,"tag":26,"props":5627,"children":5628},{"class":687,"line":1213},[5629],{"type":17,"tag":26,"props":5630,"children":5631},{"style":728},[5632],{"type":30,"value":5633},"# Add the scalar 2 to the array\n",{"type":17,"tag":26,"props":5635,"children":5636},{"class":687,"line":1352},[5637,5641,5645,5649,5653],{"type":17,"tag":26,"props":5638,"children":5639},{"style":698},[5640],{"type":30,"value":5076},{"type":17,"tag":26,"props":5642,"children":5643},{"style":692},[5644],{"type":30,"value":745},{"type":17,"tag":26,"props":5646,"children":5647},{"style":698},[5648],{"type":30,"value":5140},{"type":17,"tag":26,"props":5650,"children":5651},{"style":692},[5652],{"type":30,"value":5145},{"type":17,"tag":26,"props":5654,"children":5655},{"style":883},[5656],{"type":30,"value":5657}," 2\n",{"type":17,"tag":26,"props":5659,"children":5660},{"class":687,"line":11},[5661],{"type":17,"tag":26,"props":5662,"children":5663},{"emptyLinePlaceholder":718},[5664],{"type":30,"value":721},{"type":17,"tag":26,"props":5666,"children":5667},{"class":687,"line":2250},[5668],{"type":17,"tag":26,"props":5669,"children":5670},{"style":728},[5671],{"type":30,"value":5458},{"type":17,"tag":26,"props":5673,"children":5674},{"class":687,"line":3035},[5675,5679],{"type":17,"tag":26,"props":5676,"children":5677},{"style":883},[5678],{"type":30,"value":1205},{"type":17,"tag":26,"props":5680,"children":5681},{"style":698},[5682],{"type":30,"value":5683},"(b)\n",{"type":17,"tag":26,"props":5685,"children":5686},{"class":687,"line":3044},[5687],{"type":17,"tag":26,"props":5688,"children":5689},{"emptyLinePlaceholder":718},[5690],{"type":30,"value":721},{"type":17,"tag":26,"props":5692,"children":5693},{"class":687,"line":3079},[5694],{"type":17,"tag":26,"props":5695,"children":5696},{"style":728},[5697],{"type":30,"value":1349},{"type":17,"tag":26,"props":5699,"children":5700},{"class":687,"line":4529},[5701],{"type":17,"tag":26,"props":5702,"children":5703},{"style":728},[5704],{"type":30,"value":5705},"# [3 4 5]\n",{"type":17,"tag":22,"props":5707,"children":5708},{},[5709,5711,5716],{"type":30,"value":5710},"In this example, the scalar 2 is broadcasted to each element of ",{"type":17,"tag":151,"props":5712,"children":5714},{"className":5713},[],[5715],{"type":30,"value":48},{"type":30,"value":5717},", so that each element is incremented by 2.",{"type":17,"tag":22,"props":5719,"children":5720},{},[5721],{"type":30,"value":5722},"Example 3: Multiplying arrays of different shapes",{"type":17,"tag":676,"props":5724,"children":5726},{"className":678,"code":5725,"language":680,"meta":7,"style":7},"import numpy as np\n\n# Create a 2x3 two-dimensional array\na = np.array([[1, 2, 3], [4, 5, 6]])\n# Create a 1x3 two-dimensional array\nb = np.array([[1, 2, 3]])\n\n# Perform broadcasting multiplication\nc = a * b\n\n# Output the result\nprint(c)\n\n# Output\n# [[ 1  4  9]\n# [ 4 10 18]]\n",[5727],{"type":17,"tag":151,"props":5728,"children":5729},{"__ignoreMap":7},[5730,5749,5756,5764,5827,5835,5874,5881,5889,5913,5920,5927,5938,5945,5952,5960],{"type":17,"tag":26,"props":5731,"children":5732},{"class":687,"line":688},[5733,5737,5741,5745],{"type":17,"tag":26,"props":5734,"children":5735},{"style":692},[5736],{"type":30,"value":695},{"type":17,"tag":26,"props":5738,"children":5739},{"style":698},[5740],{"type":30,"value":701},{"type":17,"tag":26,"props":5742,"children":5743},{"style":692},[5744],{"type":30,"value":706},{"type":17,"tag":26,"props":5746,"children":5747},{"style":698},[5748],{"type":30,"value":711},{"type":17,"tag":26,"props":5750,"children":5751},{"class":687,"line":714},[5752],{"type":17,"tag":26,"props":5753,"children":5754},{"emptyLinePlaceholder":718},[5755],{"type":30,"value":721},{"type":17,"tag":26,"props":5757,"children":5758},{"class":687,"line":724},[5759],{"type":17,"tag":26,"props":5760,"children":5761},{"style":728},[5762],{"type":30,"value":5763},"# Create a 2x3 two-dimensional array\n",{"type":17,"tag":26,"props":5765,"children":5766},{"class":687,"line":734},[5767,5771,5775,5779,5783,5787,5791,5795,5799,5803,5807,5811,5815,5819,5823],{"type":17,"tag":26,"props":5768,"children":5769},{"style":698},[5770],{"type":30,"value":2908},{"type":17,"tag":26,"props":5772,"children":5773},{"style":692},[5774],{"type":30,"value":745},{"type":17,"tag":26,"props":5776,"children":5777},{"style":698},[5778],{"type":30,"value":1413},{"type":17,"tag":26,"props":5780,"children":5781},{"style":883},[5782],{"type":30,"value":1164},{"type":17,"tag":26,"props":5784,"children":5785},{"style":698},[5786],{"type":30,"value":891},{"type":17,"tag":26,"props":5788,"children":5789},{"style":883},[5790],{"type":30,"value":1173},{"type":17,"tag":26,"props":5792,"children":5793},{"style":698},[5794],{"type":30,"value":891},{"type":17,"tag":26,"props":5796,"children":5797},{"style":883},[5798],{"type":30,"value":1182},{"type":17,"tag":26,"props":5800,"children":5801},{"style":698},[5802],{"type":30,"value":1438},{"type":17,"tag":26,"props":5804,"children":5805},{"style":883},[5806],{"type":30,"value":1191},{"type":17,"tag":26,"props":5808,"children":5809},{"style":698},[5810],{"type":30,"value":891},{"type":17,"tag":26,"props":5812,"children":5813},{"style":883},[5814],{"type":30,"value":1451},{"type":17,"tag":26,"props":5816,"children":5817},{"style":698},[5818],{"type":30,"value":891},{"type":17,"tag":26,"props":5820,"children":5821},{"style":883},[5822],{"type":30,"value":1460},{"type":17,"tag":26,"props":5824,"children":5825},{"style":698},[5826],{"type":30,"value":1465},{"type":17,"tag":26,"props":5828,"children":5829},{"class":687,"line":1199},[5830],{"type":17,"tag":26,"props":5831,"children":5832},{"style":728},[5833],{"type":30,"value":5834},"# Create a 1x3 two-dimensional array\n",{"type":17,"tag":26,"props":5836,"children":5837},{"class":687,"line":1213},[5838,5842,5846,5850,5854,5858,5862,5866,5870],{"type":17,"tag":26,"props":5839,"children":5840},{"style":698},[5841],{"type":30,"value":5076},{"type":17,"tag":26,"props":5843,"children":5844},{"style":692},[5845],{"type":30,"value":745},{"type":17,"tag":26,"props":5847,"children":5848},{"style":698},[5849],{"type":30,"value":1413},{"type":17,"tag":26,"props":5851,"children":5852},{"style":883},[5853],{"type":30,"value":1164},{"type":17,"tag":26,"props":5855,"children":5856},{"style":698},[5857],{"type":30,"value":891},{"type":17,"tag":26,"props":5859,"children":5860},{"style":883},[5861],{"type":30,"value":1173},{"type":17,"tag":26,"props":5863,"children":5864},{"style":698},[5865],{"type":30,"value":891},{"type":17,"tag":26,"props":5867,"children":5868},{"style":883},[5869],{"type":30,"value":1182},{"type":17,"tag":26,"props":5871,"children":5872},{"style":698},[5873],{"type":30,"value":1465},{"type":17,"tag":26,"props":5875,"children":5876},{"class":687,"line":1352},[5877],{"type":17,"tag":26,"props":5878,"children":5879},{"emptyLinePlaceholder":718},[5880],{"type":30,"value":721},{"type":17,"tag":26,"props":5882,"children":5883},{"class":687,"line":11},[5884],{"type":17,"tag":26,"props":5885,"children":5886},{"style":728},[5887],{"type":30,"value":5888},"# Perform broadcasting multiplication\n",{"type":17,"tag":26,"props":5890,"children":5891},{"class":687,"line":2250},[5892,5896,5900,5904,5909],{"type":17,"tag":26,"props":5893,"children":5894},{"style":698},[5895],{"type":30,"value":5427},{"type":17,"tag":26,"props":5897,"children":5898},{"style":692},[5899],{"type":30,"value":745},{"type":17,"tag":26,"props":5901,"children":5902},{"style":698},[5903],{"type":30,"value":5140},{"type":17,"tag":26,"props":5905,"children":5906},{"style":692},[5907],{"type":30,"value":5908},"*",{"type":17,"tag":26,"props":5910,"children":5911},{"style":698},[5912],{"type":30,"value":5150},{"type":17,"tag":26,"props":5914,"children":5915},{"class":687,"line":3035},[5916],{"type":17,"tag":26,"props":5917,"children":5918},{"emptyLinePlaceholder":718},[5919],{"type":30,"value":721},{"type":17,"tag":26,"props":5921,"children":5922},{"class":687,"line":3044},[5923],{"type":17,"tag":26,"props":5924,"children":5925},{"style":728},[5926],{"type":30,"value":5458},{"type":17,"tag":26,"props":5928,"children":5929},{"class":687,"line":3079},[5930,5934],{"type":17,"tag":26,"props":5931,"children":5932},{"style":883},[5933],{"type":30,"value":1205},{"type":17,"tag":26,"props":5935,"children":5936},{"style":698},[5937],{"type":30,"value":5470},{"type":17,"tag":26,"props":5939,"children":5940},{"class":687,"line":4529},[5941],{"type":17,"tag":26,"props":5942,"children":5943},{"emptyLinePlaceholder":718},[5944],{"type":30,"value":721},{"type":17,"tag":26,"props":5946,"children":5947},{"class":687,"line":4537},[5948],{"type":17,"tag":26,"props":5949,"children":5950},{"style":728},[5951],{"type":30,"value":1349},{"type":17,"tag":26,"props":5953,"children":5954},{"class":687,"line":4546},[5955],{"type":17,"tag":26,"props":5956,"children":5957},{"style":728},[5958],{"type":30,"value":5959},"# [[ 1  4  9]\n",{"type":17,"tag":26,"props":5961,"children":5962},{"class":687,"line":4579},[5963],{"type":17,"tag":26,"props":5964,"children":5965},{"style":728},[5966],{"type":30,"value":5967},"# [ 4 10 18]]\n",{"type":17,"tag":77,"props":5969,"children":5971},{"id":5970},"_3-case-study-1",[5972],{"type":30,"value":3112},{"type":17,"tag":22,"props":5974,"children":5975},{},[5976],{"type":30,"value":5977},"Practice performing array operations based on the content in the link below:",{"type":17,"tag":22,"props":5979,"children":5980},{},[5981],{"type":17,"tag":48,"props":5982,"children":5985},{"href":5983,"rel":5984},"https://www.kaggle.com/code/zhaowenxi/numpy-for-python-2",[52],[5986],{"type":30,"value":5983},{"type":17,"tag":22,"props":5988,"children":5989},{},[5990,5992,5998,5999,6005,6007,6013,6015,6020,6022,6028,6029,6034,6035,6041,6042,6047],{"type":30,"value":5991},"Given two NumPy arrays ",{"type":17,"tag":151,"props":5993,"children":5995},{"className":5994},[],[5996],{"type":30,"value":5997},"array1",{"type":30,"value":1872},{"type":17,"tag":151,"props":6000,"children":6002},{"className":6001},[],[6003],{"type":30,"value":6004},"array2",{"type":30,"value":6006},", and a scalar ",{"type":17,"tag":151,"props":6008,"children":6010},{"className":6009},[],[6011],{"type":30,"value":6012},"scalar",{"type":30,"value":6014},". ",{"type":17,"tag":151,"props":6016,"children":6018},{"className":6017},[],[6019],{"type":30,"value":5997},{"type":30,"value":6021}," is a 2D array with shape ",{"type":17,"tag":151,"props":6023,"children":6025},{"className":6024},[],[6026],{"type":30,"value":6027},"(3, 3)",{"type":30,"value":891},{"type":17,"tag":151,"props":6030,"children":6032},{"className":6031},[],[6033],{"type":30,"value":6004},{"type":30,"value":6021},{"type":17,"tag":151,"props":6036,"children":6038},{"className":6037},[],[6039],{"type":30,"value":6040},"(1, 3)",{"type":30,"value":1852},{"type":17,"tag":151,"props":6043,"children":6045},{"className":6044},[],[6046],{"type":30,"value":6012},{"type":30,"value":6048}," is an integer. Please write Python code according to the following requirements:",{"type":17,"tag":99,"props":6050,"children":6051},{},[6052,6070,6096,6107,6119,6137,6155],{"type":17,"tag":39,"props":6053,"children":6054},{},[6055,6057,6062,6063,6068],{"type":30,"value":6056},"Perform element-wise addition between ",{"type":17,"tag":151,"props":6058,"children":6060},{"className":6059},[],[6061],{"type":30,"value":5997},{"type":30,"value":1872},{"type":17,"tag":151,"props":6064,"children":6066},{"className":6065},[],[6067],{"type":30,"value":6004},{"type":30,"value":6069},", and print the result.",{"type":17,"tag":39,"props":6071,"children":6072},{},[6073,6075,6080,6082,6087,6089,6094],{"type":30,"value":6074},"Perform element-wise power operation on ",{"type":17,"tag":151,"props":6076,"children":6078},{"className":6077},[],[6079],{"type":30,"value":5997},{"type":30,"value":6081},", where each element of ",{"type":17,"tag":151,"props":6083,"children":6085},{"className":6084},[],[6086],{"type":30,"value":5997},{"type":30,"value":6088}," is the base and ",{"type":17,"tag":151,"props":6090,"children":6092},{"className":6091},[],[6093],{"type":30,"value":6012},{"type":30,"value":6095}," is the exponent, and print the result.",{"type":17,"tag":39,"props":6097,"children":6098},{},[6099,6101,6106],{"type":30,"value":6100},"Calculate the sum of all elements in ",{"type":17,"tag":151,"props":6102,"children":6104},{"className":6103},[],[6105],{"type":30,"value":5997},{"type":30,"value":6069},{"type":17,"tag":39,"props":6108,"children":6109},{},[6110,6112,6117],{"type":30,"value":6111},"Round the elements of ",{"type":17,"tag":151,"props":6113,"children":6115},{"className":6114},[],[6116],{"type":30,"value":5997},{"type":30,"value":6118}," to two decimal places, and print the result.",{"type":17,"tag":39,"props":6120,"children":6121},{},[6122,6124,6129,6131,6136],{"type":30,"value":6123},"Using broadcasting, add ",{"type":17,"tag":151,"props":6125,"children":6127},{"className":6126},[],[6128],{"type":30,"value":6012},{"type":30,"value":6130}," to each element of ",{"type":17,"tag":151,"props":6132,"children":6134},{"className":6133},[],[6135],{"type":30,"value":5997},{"type":30,"value":6069},{"type":17,"tag":39,"props":6138,"children":6139},{},[6140,6142,6147,6149,6154],{"type":30,"value":6141},"Using broadcasting, subtract ",{"type":17,"tag":151,"props":6143,"children":6145},{"className":6144},[],[6146],{"type":30,"value":6004},{"type":30,"value":6148}," from each element of ",{"type":17,"tag":151,"props":6150,"children":6152},{"className":6151},[],[6153],{"type":30,"value":5997},{"type":30,"value":6069},{"type":17,"tag":39,"props":6156,"children":6157},{},[6158,6160,6165,6167,6172],{"type":30,"value":6159},"Using broadcasting, multiply each element of ",{"type":17,"tag":151,"props":6161,"children":6163},{"className":6162},[],[6164],{"type":30,"value":5997},{"type":30,"value":6166}," by the corresponding element of ",{"type":17,"tag":151,"props":6168,"children":6170},{"className":6169},[],[6171],{"type":30,"value":6004},{"type":30,"value":6069},{"type":17,"tag":22,"props":6174,"children":6175},{},[6176,6178,6183,6184,6189],{"type":30,"value":6177},"The definition of arrays ",{"type":17,"tag":151,"props":6179,"children":6181},{"className":6180},[],[6182],{"type":30,"value":5997},{"type":30,"value":1872},{"type":17,"tag":151,"props":6185,"children":6187},{"className":6186},[],[6188],{"type":30,"value":6004},{"type":30,"value":6190}," is as follows:",{"type":17,"tag":676,"props":6192,"children":6194},{"className":678,"code":6193,"language":680,"meta":7,"style":7},"array1 = np.array([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5], [7.5, 8.5, 9.5]])\narray2 = np.array([[10], [20], [30]])\nscalar = 5\n",[6195],{"type":17,"tag":151,"props":6196,"children":6197},{"__ignoreMap":7},[6198,6293,6332],{"type":17,"tag":26,"props":6199,"children":6200},{"class":687,"line":688},[6201,6205,6209,6213,6218,6222,6226,6230,6235,6239,6244,6248,6253,6257,6262,6266,6271,6275,6280,6284,6289],{"type":17,"tag":26,"props":6202,"children":6203},{"style":698},[6204],{"type":30,"value":3649},{"type":17,"tag":26,"props":6206,"children":6207},{"style":692},[6208],{"type":30,"value":745},{"type":17,"tag":26,"props":6210,"children":6211},{"style":698},[6212],{"type":30,"value":1413},{"type":17,"tag":26,"props":6214,"children":6215},{"style":883},[6216],{"type":30,"value":6217},"1.5",{"type":17,"tag":26,"props":6219,"children":6220},{"style":698},[6221],{"type":30,"value":891},{"type":17,"tag":26,"props":6223,"children":6224},{"style":883},[6225],{"type":30,"value":1289},{"type":17,"tag":26,"props":6227,"children":6228},{"style":698},[6229],{"type":30,"value":891},{"type":17,"tag":26,"props":6231,"children":6232},{"style":883},[6233],{"type":30,"value":6234},"3.5",{"type":17,"tag":26,"props":6236,"children":6237},{"style":698},[6238],{"type":30,"value":1438},{"type":17,"tag":26,"props":6240,"children":6241},{"style":883},[6242],{"type":30,"value":6243},"4.5",{"type":17,"tag":26,"props":6245,"children":6246},{"style":698},[6247],{"type":30,"value":891},{"type":17,"tag":26,"props":6249,"children":6250},{"style":883},[6251],{"type":30,"value":6252},"5.5",{"type":17,"tag":26,"props":6254,"children":6255},{"style":698},[6256],{"type":30,"value":891},{"type":17,"tag":26,"props":6258,"children":6259},{"style":883},[6260],{"type":30,"value":6261},"6.5",{"type":17,"tag":26,"props":6263,"children":6264},{"style":698},[6265],{"type":30,"value":1438},{"type":17,"tag":26,"props":6267,"children":6268},{"style":883},[6269],{"type":30,"value":6270},"7.5",{"type":17,"tag":26,"props":6272,"children":6273},{"style":698},[6274],{"type":30,"value":891},{"type":17,"tag":26,"props":6276,"children":6277},{"style":883},[6278],{"type":30,"value":6279},"8.5",{"type":17,"tag":26,"props":6281,"children":6282},{"style":698},[6283],{"type":30,"value":891},{"type":17,"tag":26,"props":6285,"children":6286},{"style":883},[6287],{"type":30,"value":6288},"9.5",{"type":17,"tag":26,"props":6290,"children":6291},{"style":698},[6292],{"type":30,"value":1465},{"type":17,"tag":26,"props":6294,"children":6295},{"class":687,"line":714},[6296,6300,6304,6308,6312,6316,6320,6324,6328],{"type":17,"tag":26,"props":6297,"children":6298},{"style":698},[6299],{"type":30,"value":3700},{"type":17,"tag":26,"props":6301,"children":6302},{"style":692},[6303],{"type":30,"value":745},{"type":17,"tag":26,"props":6305,"children":6306},{"style":698},[6307],{"type":30,"value":1413},{"type":17,"tag":26,"props":6309,"children":6310},{"style":883},[6311],{"type":30,"value":3662},{"type":17,"tag":26,"props":6313,"children":6314},{"style":698},[6315],{"type":30,"value":1438},{"type":17,"tag":26,"props":6317,"children":6318},{"style":883},[6319],{"type":30,"value":3671},{"type":17,"tag":26,"props":6321,"children":6322},{"style":698},[6323],{"type":30,"value":1438},{"type":17,"tag":26,"props":6325,"children":6326},{"style":883},[6327],{"type":30,"value":1741},{"type":17,"tag":26,"props":6329,"children":6330},{"style":698},[6331],{"type":30,"value":1465},{"type":17,"tag":26,"props":6333,"children":6334},{"class":687,"line":724},[6335,6340,6344],{"type":17,"tag":26,"props":6336,"children":6337},{"style":698},[6338],{"type":30,"value":6339},"scalar ",{"type":17,"tag":26,"props":6341,"children":6342},{"style":692},[6343],{"type":30,"value":745},{"type":17,"tag":26,"props":6345,"children":6346},{"style":883},[6347],{"type":30,"value":6348}," 5\n",{"type":17,"tag":6350,"props":6351,"children":6352},"style",{},[6353],{"type":30,"value":6354},"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":714,"depth":714,"links":6356},[6357,6361,6366,6367],{"id":72,"depth":714,"text":75,"children":6358},[6359,6360],{"id":79,"depth":724,"text":82},{"id":133,"depth":724,"text":136},{"id":214,"depth":714,"text":217,"children":6362},[6363,6364,6365],{"id":220,"depth":724,"text":223},{"id":816,"depth":724,"text":819},{"id":3109,"depth":724,"text":3112},{"id":3129,"depth":714,"text":3132},{"id":3496,"depth":714,"text":3499,"children":6368},[6369,6370,6371],{"id":3502,"depth":724,"text":3505},{"id":4910,"depth":724,"text":4913},{"id":5970,"depth":724,"text":3112},"markdown","content:python-zero:3.1numpyI.md","content","python-zero/3.1numpyI.md","python-zero/3.1numpyI","md",1738890817781]